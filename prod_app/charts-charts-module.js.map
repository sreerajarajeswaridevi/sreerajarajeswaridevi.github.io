{"version":3,"sources":["./src/app/charts/components/bar-chart/bar-chart.component.html","./src/app/charts/components/doughnut-chart/doughnut-chart.component.html","./src/app/charts/components/line-chart/line-chart.component.html","./src/app/charts/components/pie-chart/pie-chart.component.html","./src/app/charts/containers/charts/charts.component.html","./src/app/charts/charts-routing.module.ts","./src/app/charts/charts.module.ts","./src/app/charts/components/bar-chart/bar-chart.component.scss","./src/app/charts/components/bar-chart/bar-chart.component.ts","./src/app/charts/components/doughnut-chart/doughnut-chart.component.scss","./src/app/charts/components/doughnut-chart/doughnut-chart.component.ts","./src/app/charts/components/line-chart/line-chart.component.scss","./src/app/charts/components/line-chart/line-chart.component.ts","./src/app/charts/components/pie-chart/pie-chart.component.scss","./src/app/charts/components/pie-chart/pie-chart.component.ts","./src/app/charts/containers/charts/charts.component.scss","./src/app/charts/containers/charts/charts.component.ts","./src/app/charts/services/charts.service.ts","./src/app/charts/store/charts.actions.ts","./src/app/charts/store/charts.effects.ts","./src/app/charts/store/charts.reducer.ts","./src/app/charts/store/charts.selectors.ts","./src/app/charts/store/charts.state.ts"],"names":[],"mappings":"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","file":"charts-charts-module.js","sourcesContent":["export default \"<div style=\\\"display: block\\\">\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\" [options]=\\\"chartOptions\\\"\\n    [legend]=\\\"true\\\">\\n  </canvas>\\n</div>\\n\"","export default \"<div style=\\\"display: block\\\">\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\" [options]=\\\"chartOptions\\\"\\n    [legend]=\\\"true\\\">\\n  </canvas>\\n</div>\\n\"","export default \"<div style=\\\"display: block\\\">\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" height=\\\"500px\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\"\\n    [options]=\\\"chartOptions\\\" [legend]=\\\"true\\\">\\n  </canvas>\\n</div>\\n\"","export default \"<div style=\\\"display: block\\\">\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\"\\n    [options]=\\\"chartOptions\\\" [legend]=\\\"true\\\">\\n  </canvas>\\n</div>\\n\"","export default \"<div class=\\\"white px-4 py-2\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <h3 class=\\\"pt-2\\\">Financial Reports</h3>\\n      <p class=\\\"grey-text pt-1\\\">Visualisation of consolidated accounts data</p>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\n        <div class=\\\"btn-group mr-2 mt-4 row w-100\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n          <button mdbBtn type=\\\"button\\\" (click)=\\\"initTab('day')\\\" [color]=\\\"activeTab === 'day' ? 'primary' : 'white'\\\"\\n            class=\\\"waves-light col-4 col-md-4 col-lg-3 col-xl-2\\\" size=\\\"sm\\\" mdbWavesEffect>\\n            day\\n          </button>\\n          <button mdbBtn type=\\\"button\\\" (click)=\\\"initTab('week')\\\" [color]=\\\"activeTab === 'week' ? 'primary' : 'white'\\\"\\n            class=\\\"waves-light col-4 col-md-4 col-lg-3 col-xl-2\\\" size=\\\"sm\\\" mdbWavesEffect>\\n            week\\n          </button>\\n          <button mdbBtn type=\\\"button\\\" (click)=\\\"initTab('month')\\\"\\n            [color]=\\\"activeTab === 'month' ? 'primary' : 'white'\\\" class=\\\"waves-light col-4 col-md-4 col-lg-3 col-xl-2\\\" size=\\\"sm\\\" mdbWavesEffect>\\n            month\\n          </button>\\n          <button mdbBtn type=\\\"button\\\" (click)=\\\"initTab('year')\\\" [color]=\\\"activeTab === 'year' ? 'primary' : 'white'\\\"\\n            class=\\\"waves-light col-4 col-md-4 col-lg-3 col-xl-2\\\" size=\\\"sm\\\"\\n            mdbWavesEffect>\\n            year\\n          </button>\\n          <button mdbBtn type=\\\"button\\\" (click)=\\\"initTab('custom')\\\"\\n            [color]=\\\"activeTab === 'custom' ? 'primary' : 'white'\\\" class=\\\"waves-light col-4 col-md-4 col-lg-3 col-xl-2\\\" size=\\\"sm\\\" mdbWavesEffect>\\n            custom\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"isLoading$\\\" class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"margin-top: 300px\\\">\\n  <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem\\\">\\n    <span class=\\\"sr-only\\\">Loading...</span>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"!isLoading$\\\" class=\\\"charts-container pl-5 pr-5 pb-5\\\" [ngSwitch]=\\\"activeTab\\\">\\n  <div *ngSwitchCase=\\\"'day'\\\">\\n    <div class=\\\"card-header mb-2 d-flex-center\\\">\\n      <span class=\\\"icon-button\\\" (click)=\\\"yesterday()\\\">\\n        <mdb-icon fas icon=\\\"chevron-left\\\" class=\\\"mr-3 float-left delete cursor-pointer gray-text\\\" alt=\\\"Left\\\"></mdb-icon>\\n      </span>\\n      <h2 class=\\\"text-xl gray-text\\\">\\n        {{ todaysDate.format('DD-MMMM-YYYY')  }}\\n      </h2>\\n      <span class=\\\"icon-button\\\" (click)=\\\"tomorrow()\\\">\\n        <mdb-icon *ngIf=\\\"!todaysDate.isSame(customStartDate, 'day')\\\" mdbtn fas icon=\\\"chevron-right\\\" class=\\\"ml-3 float-right delete cursor-pointer gray-text\\\" alt=\\\"Right\\\"></mdb-icon>\\n      </span>\\n    </div>\\n    <div class=\\\"row mb-3\\\">\\n      <div class=\\\"col-md-12 col-lg-6 mb-2\\\">\\n        <mdb-card>\\n          <mdb-card-header>\\n            {{ todaysDate.format('DD-MMMM-YYYY')  }} Profit/Loss\\n            <span *ngIf=\\\"pageData.todaysData\\\" class=\\\"price ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.todaysData) }}</span>\\n          </mdb-card-header>\\n          <mdb-card-body *ngIf=\\\"pageData.todaysData\\\">\\n            <div class=\\\"pl-4\\\">\\n              <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"swapPoojasData(pageData.todaysData)\\\">\\n                Poojas\\n              </button>\\n            </div>\\n            <app-bar-chart *ngIf=\\\"pageData.todaysData.currentOverView ===\\n              pageData.todaysData.overView; else poojasPieChart\\\" [dataset]=\\\"pageData.todaysData.currentOverView.dataSet\\\"\\n              [labels]=\\\"pageData.todaysData.currentOverView.chartLabels\\\"></app-bar-chart>\\n\\n              <ng-template #poojasPieChart>\\n                <app-pie-chart [dataset]=\\\"pageData.todaysData.currentOverView.dataSet\\\"\\n                [labels]=\\\"pageData.todaysData.currentOverView.chartLabels\\\"></app-pie-chart>\\n              </ng-template>\\n          </mdb-card-body>\\n          <div class=\\\"\\n              p-4\\n              d-flex\\n              flex-column\\n              justify-content-center\\n              align-items-center\\n            \\\" *ngIf=\\\"!pageData.todaysData\\\">\\n            <mdb-icon fas icon=\\\"times-circle\\\" class=\\\"float-right grey-text\\\" alt=\\\"no data\\\"></mdb-icon>\\n            <p class=\\\"grey-text\\\">No Data Today</p>\\n          </div>\\n        </mdb-card>\\n      </div>\\n\\n      <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"pageData.todaysData\\\">\\n        <table class=\\\"white text-center z-depth-1\\\" mdbTable>\\n          <thead class=\\\"primary-color text-white\\\">\\n            <tr>\\n              <td colspan=\\\"2\\\">\\n                {{ todaysDate.format('DD-MMMM-YYYY')  }} Profit/Loss\\n                <span class=\\\"ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.todaysData) }}</span>\\n              </td>\\n            </tr>\\n            <tr *ngIf=\\\"\\n                pageData.todaysData.currentOverView ===\\n                  pageData.todaysData.overView;\\n                else poojasView\\n              \\\">\\n              <th>Expense Type</th>\\n              <th>Amount</th>\\n            </tr>\\n            <ng-template #poojasView>\\n              <tr>\\n                <th>Poooja Name</th>\\n                <th>Total Amount Received</th>\\n              </tr>\\n            </ng-template>\\n          </thead>\\n          <tbody>\\n            <tr mdbTableCol *ngFor=\\\"\\n                let value of pageData.todaysData.currentOverView.dataSet[0]\\n                  .data;\\n                let i = index\\n              \\\">\\n              <td>{{ pageData.todaysData.currentOverView.chartLabels[i] }}</td>\\n              <th scope=\\\"row\\\">&#x20B9;{{ value }}</th>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- this weeks data -->\\n  <div *ngSwitchCase=\\\"'week'\\\">\\n    <div class=\\\"card-header mb-2 d-flex-center\\\">\\n      <span class=\\\"icon-button\\\" (click)=\\\"prevWeek()\\\">\\n        <mdb-icon fas icon=\\\"chevron-left\\\" class=\\\"mr-3 float-left delete cursor-pointer gray-text\\\" alt=\\\"Left\\\"></mdb-icon>\\n      </span>\\n      <h2 class=\\\"text-xl gray-text\\\">\\n        {{ thisWeekStartDate.format('DD-MMMM') + ' TO ' + thisWeekEndDate.format('DD-MMMM')  }}\\n      </h2>\\n      <span class=\\\"icon-button\\\" (click)=\\\"nextWeek()\\\">\\n        <mdb-icon *ngIf=\\\"!todaysDate.isSame(thisWeekStartDate, 'week')\\\" mdbtn fas icon=\\\"chevron-right\\\" class=\\\"ml-3 float-right delete cursor-pointer gray-text\\\" alt=\\\"Right\\\"></mdb-icon>\\n      </span>\\n    </div>\\n    <div class=\\\"row mb-3\\\">\\n      <div class=\\\"col-md-12 col-lg-6 mb-2\\\">\\n        <mdb-card>\\n          <mdb-card-header>\\n            This Weeks Profit/Loss\\n            <span class=\\\"price ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisWeeksData) }}</span>\\n          </mdb-card-header>\\n          <mdb-card-body>\\n            <div class=\\\"pl-4\\\">\\n              <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"swapPoojasData(pageData.thisWeeksData)\\\">\\n                Poojas\\n              </button>\\n            </div>\\n            <app-bar-chart  *ngIf=\\\"pageData.thisWeeksData.currentOverView ===\\n            pageData.thisWeeksData.overView; else poojasPieChart\\\" [dataset]=\\\"pageData.thisWeeksData.currentOverView.dataSet\\\"\\n              [labels]=\\\"pageData.thisWeeksData.currentOverView.chartLabels\\\"></app-bar-chart>\\n              <ng-template #poojasPieChart>\\n                <app-pie-chart [dataset]=\\\"pageData.thisWeeksData.currentOverView.dataSet\\\"\\n                [labels]=\\\"pageData.thisWeeksData.currentOverView.chartLabels\\\"></app-pie-chart>\\n              </ng-template>\\n            <br /><br />\\n            <app-bar-chart [dataset]=\\\"pageData.thisWeeksData.weeklyOverView.dataSet\\\"\\n              [labels]=\\\"pageData.thisWeeksData.weeklyOverView.chartLabels\\\"></app-bar-chart>\\n          </mdb-card-body>\\n        </mdb-card>\\n      </div>\\n\\n      <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"pageData.thisWeeksData\\\">\\n        <table class=\\\"white text-center z-depth-1\\\" mdbTable>\\n          <thead class=\\\"primary-color text-white\\\">\\n            <tr>\\n              <td colspan=\\\"2\\\">\\n                This Weeks Profit/Loss\\n                <span class=\\\"ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisWeeksData) }}</span>\\n              </td>\\n            </tr>\\n            <tr *ngIf=\\\"\\n                pageData.thisWeeksData.currentOverView ===\\n                  pageData.thisWeeksData.overView;\\n                else poojasView\\n              \\\">\\n              <th>Expense Type</th>\\n              <th>Amount</th>\\n            </tr>\\n            <ng-template #poojasView>\\n              <tr>\\n                <th>Poooja Name</th>\\n                <th>Total Amount Received</th>\\n              </tr>\\n            </ng-template>\\n          </thead>\\n          <tbody>\\n            <tr mdbTableCol *ngFor=\\\"\\n                let value of pageData.thisWeeksData.currentOverView.dataSet[0]\\n                  .data;\\n                let i = index\\n              \\\">\\n              <td>\\n                {{ pageData.thisWeeksData.currentOverView.chartLabels[i] }}\\n              </td>\\n              <th scope=\\\"row\\\">&#x20B9;{{ value }}</th>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- this weeks data ends here-->\\n\\n  <!-- this Months data -->\\n  <div *ngSwitchCase=\\\"'month'\\\">\\n    <div class=\\\"card-header mb-2 d-flex-center\\\">\\n      <span class=\\\"icon-button\\\" (click)=\\\"prevMonth()\\\">\\n        <mdb-icon fas icon=\\\"chevron-left\\\" class=\\\"mr-3 float-left delete cursor-pointer gray-text\\\" alt=\\\"Left\\\"></mdb-icon>\\n      </span>\\n      <h2 class=\\\"text-xl gray-text\\\">\\n        {{ monthDate.format('MMMM YYYY')  }}\\n      </h2>\\n      <span class=\\\"icon-button\\\" (click)=\\\"nextMonth()\\\">\\n        <mdb-icon *ngIf=\\\"!todaysDate.isSame(monthDate, 'month')\\\" mdbtn fas icon=\\\"chevron-right\\\" class=\\\"ml-3 float-right delete cursor-pointer gray-text\\\" alt=\\\"Right\\\"></mdb-icon>\\n      </span>\\n    </div>\\n    <div class=\\\"row mb-3\\\">\\n      <div class=\\\"col-md-12 col-lg-6 mb-4\\\">\\n        <mdb-card>\\n          <mdb-card-header>\\n            {{ monthDate.format('MMMM YYYY')  }} Profit/Loss\\n            <span class=\\\"price ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisMonthsData) }}</span>\\n          </mdb-card-header>\\n          <mdb-card-body>\\n            <div class=\\\"pl-4\\\">\\n              <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"swapPoojasData(pageData.thisMonthsData)\\\">\\n                Poojas\\n              </button>\\n            </div>\\n            <app-bar-chart *ngIf=\\\"pageData.thisMonthsData.currentOverView ===\\n            pageData.thisMonthsData.overView; else poojasPieChart\\\" [dataset]=\\\"pageData.thisMonthsData.currentOverView.dataSet\\\"\\n              [labels]=\\\"pageData.thisMonthsData.currentOverView.chartLabels\\\"></app-bar-chart>\\n\\n              <ng-template #poojasPieChart>\\n                <app-pie-chart [dataset]=\\\"pageData.thisMonthsData.currentOverView.dataSet\\\"\\n                [labels]=\\\"pageData.thisMonthsData.currentOverView.chartLabels\\\"></app-pie-chart>\\n              </ng-template>\\n          </mdb-card-body>\\n        </mdb-card>\\n      </div>\\n\\n      <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"pageData.thisMonthsData\\\">\\n        <table class=\\\"white text-center z-depth-1\\\" mdbTable>\\n          <thead class=\\\"primary-color text-white\\\">\\n            <tr>\\n              <td colspan=\\\"2\\\">\\n                {{ monthDate.format('MMMM YYYY')  }} Profit/Loss\\n                <span class=\\\"ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisMonthsData) }}</span>\\n              </td>\\n            </tr>\\n            <tr *ngIf=\\\"\\n                pageData.thisMonthsData.currentOverView ===\\n                  pageData.thisMonthsData.overView;\\n                else poojasView\\n              \\\">\\n              <th>Expense Type</th>\\n              <th>Amount</th>\\n            </tr>\\n            <ng-template #poojasView>\\n              <tr>\\n                <th>Poooja Name</th>\\n                <th>Total Amount Received</th>\\n              </tr>\\n            </ng-template>\\n          </thead>\\n          <tbody>\\n            <tr mdbTableCol *ngFor=\\\"\\n                let value of pageData.thisMonthsData.currentOverView.dataSet[0]\\n                  .data;\\n                let i = index\\n              \\\">\\n              <td>\\n                {{ pageData.thisMonthsData.currentOverView.chartLabels[i] }}\\n              </td>\\n              <th scope=\\\"row\\\">&#x20B9;{{ value }}</th>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"col-12\\\" *ngIf=\\\"pageData.thisMonthsData\\\">\\n        <mdb-card>\\n          <mdb-card-body>\\n            <app-line-chart [dataset]=\\\"pageData.thisMonthsData.monthlyOverView.dataSet\\\"\\n              [labels]=\\\"pageData.thisMonthsData.monthlyOverView.chartLabels\\\"></app-line-chart>\\n          </mdb-card-body>\\n        </mdb-card>\\n      </div>\\n\\n    </div>\\n  </div>\\n  <!-- this Months data ends here-->\\n\\n  <!-- this Year data -->\\n  <div *ngSwitchCase=\\\"'year'\\\">\\n    <div class=\\\"card-header mb-2 d-flex-center\\\">\\n      <span class=\\\"icon-button\\\" (click)=\\\"prevYear()\\\">\\n        <mdb-icon fas icon=\\\"chevron-left\\\" class=\\\"mr-3 float-left delete cursor-pointer gray-text\\\" alt=\\\"Left\\\"></mdb-icon>\\n      </span>\\n      <h2 class=\\\"text-xl gray-text\\\">\\n        {{ yearDate.format('YYYY') }}\\n      </h2>\\n      <span class=\\\"icon-button\\\" (click)=\\\"nextYear()\\\">\\n        <mdb-icon *ngIf=\\\"yearDate.format('YYYY')!==todaysDate.format('YYYY')\\\" mdbtn fas icon=\\\"chevron-right\\\" class=\\\"ml-3 float-right delete cursor-pointer gray-text\\\" alt=\\\"Right\\\"></mdb-icon>\\n      </span>\\n    </div>\\n    <div class=\\\"row mb-3\\\">\\n      <div class=\\\"col-md-12 col-lg-6 mb-4\\\">\\n        <mdb-card>\\n          <mdb-card-header>\\n            {{ yearDate.format('YYYY') }} Profit/Loss\\n            <span class=\\\"price ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisYearsData) }}</span>\\n          </mdb-card-header>\\n          <mdb-card-body>\\n            <div class=\\\"pl-4\\\">\\n              <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"swapPoojasData(pageData.thisYearsData)\\\">\\n                Poojas\\n              </button>\\n            </div>\\n            <app-bar-chart *ngIf=\\\"pageData.thisYearsData.currentOverView ===\\n            pageData.thisYearsData.overView; else poojasPieChart\\\" [dataset]=\\\"pageData.thisYearsData.currentOverView.dataSet\\\"\\n              [labels]=\\\"pageData.thisYearsData.currentOverView.chartLabels\\\"></app-bar-chart>\\n\\n                <ng-template #poojasPieChart>\\n                  <app-pie-chart [dataset]=\\\"pageData.thisYearsData.currentOverView.dataSet\\\"\\n                  [labels]=\\\"pageData.thisYearsData.currentOverView.chartLabels\\\"></app-pie-chart>\\n                </ng-template>\\n          </mdb-card-body>\\n        </mdb-card>\\n      </div>\\n\\n      <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"pageData.thisYearsData\\\">\\n        <table class=\\\"white text-center z-depth-1\\\" mdbTable>\\n          <thead class=\\\"primary-color text-white\\\">\\n            <tr>\\n              <td colspan=\\\"2\\\">\\n                {{ yearDate.format('YYYY') }} Profit/Loss\\n                <span class=\\\"ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisYearsData) }}</span>\\n              </td>\\n            </tr>\\n            <tr *ngIf=\\\"\\n                pageData.thisYearsData.currentOverView ===\\n                  pageData.thisYearsData.overView;\\n                else poojasView\\n              \\\">\\n              <th>Expense Type</th>\\n              <th>Amount</th>\\n            </tr>\\n            <ng-template #poojasView>\\n              <tr>\\n                <th>Poooja Name</th>\\n                <th>Total Amount Received</th>\\n              </tr>\\n            </ng-template>\\n          </thead>\\n          <tbody>\\n            <tr mdbTableCol *ngFor=\\\"\\n                let value of pageData.thisYearsData.currentOverView.dataSet[0]\\n                  .data;\\n                let i = index\\n              \\\">\\n              <td>\\n                {{ pageData.thisYearsData.currentOverView.chartLabels[i] }}\\n              </td>\\n              <th scope=\\\"row\\\">&#x20B9;{{ value }}</th>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"col-12\\\" *ngIf=\\\"pageData.thisYearsData\\\">\\n        <mdb-card>\\n          <mdb-card-body>\\n            <app-line-chart [dataset]=\\\"pageData.thisYearsData.yearlyOverView.dataSet\\\"\\n              [labels]=\\\"pageData.thisYearsData.yearlyOverView.chartLabels\\\"></app-line-chart>\\n          </mdb-card-body>\\n        </mdb-card>\\n      </div>\\n\\n    </div>\\n  </div>\\n  <!-- this Years data ends here-->\\n\\n\\n\\n  <!-- custom data -->\\n  <div *ngSwitchCase=\\\"'custom'\\\">\\n    <div class=\\\"row mb-2 text-center d-flex justify-content-center align-items-center\\\">\\n      <button mdbWavesEffect mdbBtn type=\\\"button\\\" rounded=\\\"true\\\" color=\\\"white\\\" class=\\\"pull-right text-lg btn-primary\\\" rrDatePicker [date]=\\\"customStartDate\\\" [startDate]=\\\"datePickerStartDate\\\" [endDate]=\\\"todaysDate\\\"\\n      header=\\\"Select Start Date\\\" (dateSelected)=\\\"selectCustomStartDate($event)\\\">\\n        <mdb-icon fas icon=\\\"calendar-alt mr-2\\\" size=\\\"lg\\\" class=\\\"calendar\\\" alt=\\\"date\\\"></mdb-icon> \\n        <span appDateTransform [date]=\\\"customStartDate.format('YYYY-MM-DD')\\\"></span>\\n      </button> TO\\n      <button mdbWavesEffect mdbBtn type=\\\"button\\\" rounded=\\\"true\\\" color=\\\"white\\\" class=\\\"pull-right text-lg btn-primary\\\" rrDatePicker [date]=\\\"customEndDate\\\" [startDate]=\\\"customStartDate\\\" [endDate]=\\\"todaysDate\\\"\\n        header=\\\"Select End Date\\\" (dateSelected)=\\\"selectCustomEndDate($event)\\\">\\n          <mdb-icon fas icon=\\\"calendar-alt mr-2\\\" size=\\\"lg\\\" class=\\\"calendar\\\" alt=\\\"date\\\"></mdb-icon> \\n          <span appDateTransform [date]=\\\"customEndDate.format('YYYY-MM-DD')\\\"></span>\\n        </button>\\n\\n        <button type=\\\"button\\\" mdbBtn color=\\\"success\\\"  class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"getCustomData()\\\">\\n          GET DATA  \\n        </button>\\n    </div>\\n    <div class=\\\"row my-3\\\">\\n      <div class=\\\"col-md-12 col-lg-6 mb-4\\\">\\n        <mdb-card>\\n          <mdb-card-header>\\n            This Years Profit/Loss\\n            <span class=\\\"price ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisYearsData) }}</span>\\n          </mdb-card-header>\\n          <mdb-card-body>\\n            <div class=\\\"pl-4\\\">\\n              <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"swapPoojasData(pageData.thisYearsData)\\\">\\n                Poojas\\n              </button>\\n            </div>\\n            <app-bar-chart [dataset]=\\\"pageData.thisYearsData.currentOverView.dataSet\\\"\\n              [labels]=\\\"pageData.thisYearsData.currentOverView.chartLabels\\\"></app-bar-chart>\\n          </mdb-card-body>\\n        </mdb-card>\\n      </div>\\n\\n      <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"pageData.thisYearsData\\\">\\n        <table class=\\\"white text-center z-depth-1\\\" mdbTable>\\n          <thead class=\\\"primary-color text-white\\\">\\n            <tr>\\n              <td colspan=\\\"2\\\">\\n                This Years Profit/Loss\\n                <span class=\\\"ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisYearsData) }}</span>\\n              </td>\\n            </tr>\\n            <tr *ngIf=\\\"\\n                pageData.thisYearsData.currentOverView ===\\n                  pageData.thisYearsData.overView;\\n                else poojasView\\n              \\\">\\n              <th>Expense Type</th>\\n              <th>Amount</th>\\n            </tr>\\n            <ng-template #poojasView>\\n              <tr>\\n                <th>Poooja Name</th>\\n                <th>Total Amount Received</th>\\n              </tr>\\n            </ng-template>\\n          </thead>\\n          <tbody>\\n            <tr mdbTableCol *ngFor=\\\"\\n                let value of pageData.thisYearsData.currentOverView.dataSet[0]\\n                  .data;\\n                let i = index\\n              \\\">\\n              <td>\\n                {{ pageData.thisYearsData.currentOverView.chartLabels[i] }}\\n              </td>\\n              <th scope=\\\"row\\\">&#x20B9;{{ value }}</th>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"col-12\\\" *ngIf=\\\"pageData.thisYearsData\\\">\\n        <mdb-card>\\n          <mdb-card-body>\\n            <app-line-chart [dataset]=\\\"pageData.thisYearsData.yearlyOverView.dataSet\\\"\\n              [labels]=\\\"pageData.thisYearsData.yearlyOverView.chartLabels\\\"></app-line-chart>\\n          </mdb-card-body>\\n        </mdb-card>\\n      </div>\\n\\n    </div>\\n  </div>\\n  <!-- custom data ends here-->\\n\\n  <!-- \\n    <div class=\\\"col-md-6\\\">\\n      <mdb-card>\\n        <mdb-card-body>\\n          <app-pie-chart [dataset]=\\\"barChartDataset\\\" [labels]=\\\"barChartLabels\\\"></app-pie-chart>\\n        </mdb-card-body>\\n      </mdb-card>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row mb-3\\\">\\n    <div class=\\\"col-md-6 mb-3\\\">\\n      <mdb-card>\\n        <mdb-card-body>\\n          <app-bar-chart [dataset]=\\\"barChartDataset\\\" [labels]=\\\"barChartLabels\\\"></app-bar-chart>\\n        </mdb-card-body>\\n      </mdb-card>\\n    </div>\\n\\n    <div class=\\\"col-md-6 mb-3\\\">\\n      <mdb-card>\\n        <mdb-card-body>\\n          <app-doughnut-chart [dataset]=\\\"barChartDataset\\\" [labels]=\\\"barChartLabels\\\"></app-doughnut-chart>\\n        </mdb-card-body>\\n      </mdb-card>\\n    </div>\\n  </div> -->\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChartsComponent } from './containers/charts/charts.component';\n\n\nconst routes: Routes = [\n  { path: '', component: ChartsComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class ChartsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule, CardsModule, ButtonsModule, TableModule, IconsModule } from 'angular-bootstrap-md';\nimport { ChartsComponent } from './containers/charts/charts.component';\nimport { LineChartComponent } from './components/line-chart/line-chart.component';\nimport { ChartsRoutingModule } from './charts-routing.module';\n\nimport * as fromCharts from './store/charts.reducer';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ChartsEffects } from './store/charts.effects';\nimport { BarChartComponent } from './components/bar-chart/bar-chart.component';\nimport { DoughnutChartComponent } from './components/doughnut-chart/doughnut-chart.component';\nimport { PieChartComponent } from './components/pie-chart/pie-chart.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { CoreModule } from '../core/core.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardsModule,\n    ChartsModule,\n    ButtonsModule,\n    TableModule,\n    SharedModule,\n    CoreModule,\n    ChartsRoutingModule,\n    IconsModule,\n    StoreModule.forFeature('charts', fromCharts.chartsReducer),\n    EffectsModule.forFeature([ChartsEffects])\n  ],\n  declarations: [ChartsComponent, LineChartComponent, BarChartComponent, DoughnutChartComponent, PieChartComponent],\n  exports: [ChartsComponent, LineChartComponent]\n})\nexport class ChartsDataModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL2Jhci1jaGFydC9iYXItY2hhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BarChartComponent implements OnInit {\n  @Input() dataset: any;\n  @Input() labels: any;\n\n  public chartType = 'bar';\n\n  public chartColors: Array<any> = [\n    {\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)'\n      ],\n      borderColor: [\n        'rgba(255,99,132,1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)'\n      ],\n      borderWidth: 2,\n    }\n  ];\n\n  public chartOptions: any = {\n    responsive: true\n  };\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL2RvdWdobnV0LWNoYXJ0L2RvdWdobnV0LWNoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-doughnut-chart',\n  templateUrl: './doughnut-chart.component.html',\n  styleUrls: ['./doughnut-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DoughnutChartComponent implements OnInit {\n  @Input() dataset: any;\n  @Input() labels: any;\n\n  public chartType = 'doughnut';\n\n  public chartColors: Array<any> = [\n    {\n      backgroundColor: ['#F7464A', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'],\n      hoverBackgroundColor: ['#FF5A5E', '#5AD3D1', '#FFC870', '#A8B3C5', '#616774'],\n      borderWidth: 2,\n    }\n  ];\n\n  public chartOptions: any = {\n    responsive: true\n  };\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL2xpbmUtY2hhcnQvbGluZS1jaGFydC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LineChartComponent implements OnInit {\n  @Input() dataset: any;\n  @Input() labels: any;\n\n  public chartType = 'line';\n\n  public chartColors: Array<any> = [\n    {\n      backgroundColor: 'rgba(255, 152, 0, .5)',\n      borderColor: 'rgb(230,81,0)',\n      borderWidth: 2,\n    }\n  ];\n\n  public chartOptions: any = {\n    responsive: true,\n    maintainAspectRatio: false\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL3BpZS1jaGFydC9waWUtY2hhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.scss']\n})\nexport class PieChartComponent implements OnInit {\n  @Input() dataset: any;\n  @Input() labels: any;\n\n  public chartType = 'pie';\n\n  public chartColors: Array<any> = [\n    {\n      backgroundColor: ['#F7464A', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'],\n      hoverBackgroundColor: ['#FF5A5E', '#5AD3D1', '#FFC870', '#A8B3C5', '#616774'],\n      borderWidth: 2,\n    }\n  ];\n\n  public chartOptions: any = {\n    responsive: true\n  };\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb250YWluZXJzL2NoYXJ0cy9jaGFydHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n// import { Store } from '@ngrx/store';\n// import { AppState } from '../../../reducers/index';\n\nimport { Subscription } from 'rxjs';\nimport { ChartsService } from '../../services/charts.service';\n\nvar moment = require('../../../../assets/datepicker/moment.js');\n\n@Component({\n  selector: 'app-charts',\n  templateUrl: './charts.component.html',\n  styleUrls: ['./charts.component.scss']\n})\nexport class ChartsComponent implements OnInit, OnDestroy {\n  activeTab = 'day';\n  isLoading$ = false;\n\n  lineChartSub: Subscription;\n  barChartSub: Subscription;\n\n  dataset: DataSet[] = [{ data: [], label: ''}];\n  chartLabels: any[] = [];\n\n  barChartDataset: any[] = [{ data: [], label: '' }];\n  barChartchartLabels: any[] = [];\n  barChartDate: string;\n  barChartBase: string;\n\n  currency: string;\n\n  pageData: {\n    todaysData?: ChartConfig,\n    thisWeeksData?: ChartConfig,\n    thisMonthsData?: ChartConfig,\n    thisYearsData?: ChartConfig,\n    customData?: ChartConfig,\n  } | any = {\n    todaysData: {},\n    thisWeeksData: {},\n    thisMonthsData: {},\n    thisYearsData: {},\n    customData: {},\n  };\n\n  todaysDate = moment();\n  weekDate = moment();\n  monthDate = moment();\n  yearDate = moment();\n  customStartDate = moment();\n  customEndDate = moment();\n  datePickerStartDate = moment().subtract(3, 'year');\n\n  thisWeekStartDate = moment();\n  thisWeekEndDate = moment();\n  thisMonthStartDate = moment();\n  thisMonthEndDate = moment();\n  thisYearStartDate = moment();\n  thisYearEndDate = moment();\n \n  constructor(private cs: ChartsService) {\n    this.initDates();\n   }\n\n  initDates() {\n    this.todaysDate = moment();\n    this.weekDate = moment();\n    this.monthDate = moment();\n    this.yearDate = moment();\n    this.customStartDate = moment();\n    this.customEndDate = moment();\n\n    this.thisWeekStartDate = this.todaysDate.clone().startOf('isoWeek');\n    this.thisWeekEndDate = this.todaysDate.clone().endOf('isoWeek');\n    this.thisMonthStartDate = this.todaysDate.clone().startOf('month');\n    this.thisMonthEndDate = this.todaysDate.clone().endOf('month');\n    this.thisYearStartDate = this.todaysDate.clone().startOf('year');\n    this.thisYearEndDate = this.todaysDate.clone().endOf('year');  \n    this.customStartDate = moment();\n    this.customEndDate = moment();\n  }\n\n  initTab(tabName: string) {\n    this.initDates();\n    this.activeTab = tabName;\n    switch(tabName) {\n      case 'day': \n        this.getData(this.todaysDate, this.todaysDate, this.getTodaysData);\n        break;\n      case 'week': \n        this.getData(this.thisWeekStartDate, this.thisWeekEndDate, this.getWeekData);\n        break;\n      case 'month': \n        this.getData(this.thisMonthStartDate, this.thisMonthEndDate, this.getMonthData);\n        break;\n      case 'year': \n        this.getData(this.thisYearStartDate, this.thisYearEndDate, this.getYearlyData);\n        break;\n      case 'custom': \n        this.getData(this.todaysDate, this.todaysDate, this.getYearlyData);\n        break;\n    }\n  }\n\n  yesterday() {\n    this.todaysDate = this.todaysDate.subtract(1, 'day');\n    this.getData(this.todaysDate, this.todaysDate, this.getTodaysData);\n  }\n\n  tomorrow() {\n    this.todaysDate = this.todaysDate.add(1, 'day');\n    this.getData(this.todaysDate, this.todaysDate, this.getTodaysData);\n  }\n\n  prevWeek() {\n    this.weekDate = this.weekDate.subtract(1, 'week');\n    this.thisWeekStartDate = this.weekDate.clone().startOf('isoWeek');\n    this.thisWeekEndDate = this.weekDate.clone().endOf('isoWeek');\n    this.getData(this.thisWeekStartDate, this.thisWeekEndDate, this.getWeekData);\n  }\n\n  nextWeek() {\n    this.weekDate = this.weekDate.add(1, 'week');\n    this.thisWeekStartDate = this.weekDate.clone().startOf('isoWeek');\n    this.thisWeekEndDate = this.weekDate.clone().endOf('isoWeek');\n    this.getData(this.thisWeekStartDate, this.thisWeekEndDate, this.getWeekData);\n  }\n\n  prevMonth() {\n    this.monthDate = this.monthDate.subtract(1, 'month');\n    this.thisMonthStartDate = this.monthDate.clone().startOf('month');\n    this.thisMonthEndDate = this.monthDate.clone().endOf('month');\n    this.getData(this.thisMonthStartDate, this.thisMonthEndDate, this.getMonthData);\n  }\n\n  nextMonth() {\n    this.monthDate = this.monthDate.add(1, 'month');\n    this.thisMonthStartDate = this.monthDate.clone().startOf('month');\n    this.thisMonthEndDate = this.monthDate.clone().endOf('month');\n    this.getData(this.thisMonthStartDate, this.thisMonthEndDate, this.getMonthData);\n  }\n\n  prevYear() {\n    this.yearDate = this.yearDate.subtract(1, 'year');\n    this.thisYearStartDate = this.yearDate.clone().startOf('year');\n    this.thisYearEndDate = this.yearDate.clone().endOf('year');\n    this.getData(this.thisYearStartDate, this.thisYearEndDate, this.getYearlyData);\n  }\n\n  nextYear() {\n    this.yearDate = this.yearDate.add(1, 'year');\n    this.thisYearStartDate = this.yearDate.clone().startOf('year');\n    this.thisYearEndDate = this.yearDate.clone().endOf('year');\n    this.getData(this.thisYearStartDate, this.thisYearEndDate, this.getYearlyData);\n  }\n\n  getCustomData() {\n    const startDate = this.customStartDate.clone();\n    const endDate = this.customEndDate.clone();\n    this.getData(startDate, endDate, this.getRangeData);\n  }\n\n  ngOnInit() {\n    \n    this.getData(this.todaysDate, this.todaysDate, this.getTodaysData);\n    // this.cs.getReconsiledBook({startDate: this.thisYearStartDate, endDate: this.thisYearEndDate})\n    // .subscribe((data: any) => {\n    //   const todaysBook = data.book.find((book: any) => book.date === moment().format('YYYY-MM-DD'));\n    //   // const monthBook = data.book.map((book: any) => moment(book.date, 'YYYY-MM-DD').isSame(moment(), 'month'));\n    //   // const yearBook = data.book.map((book: any) => moment(book.date, 'YYYY-MM-DD').isSame(moment(), 'year'));\n    //   // [\n    //     this.pageData.todaysData = this.getTodaysData(todaysBook);\n    //     this.pageData.thisWeeksData = this.getWeekData(data);\n    //     this.pageData.thisMonthsData = this.getMonthData(data);\n    //     this.pageData.thisYearsData = this.getYearlyData(data);\n    //     // this.pageData.thisWeeksData = this.getTodaysData(weekBook); -- Week Data to continue tomorow\n    //     // this.pageData.thisMonthsData,\n    //     // this.pageData.thisYearsData,\n    //   // ] = [\n    //   //   this.getTodaysData(todaysBook)\n    \n    //   // ];\n    //   this.isLoading$ = false;\n    // })\n  }\n  \n\n  getData(startDate: any, endDate: any, method: any) {\n    this.isLoading$ = true;\n    this.cs.getReconsiledBook({startDate: startDate.format('YYYY-MM-DD'), endDate: endDate.format('YYYY-MM-DD')})\n    .subscribe((data: any) => {\n     method(data);\n      this.isLoading$ = false;\n    })\n  }\n\n  getYearlyData = (data: any) => {\n    const yearBook = data.book;\n    if(!yearBook) {\n      return;\n    }\n    let book: any = new Book();\n    let yearlyOverView: any = {\n      dataSet: [{data: moment.months().map(() => 0), label: 'Yearly Profit/Loss Data'}],\n      chartLabels: moment.months()\n    };\n    yearBook.forEach((monthEl: any, index: number) => {\n      if (monthEl) {\n        if (index === 0) {\n          book = {...monthEl}\n        } else {\n          book.poojas = book.poojas.concat(monthEl.poojas);\n          book.expenses = book.expenses.concat(monthEl.expenses);\n          book.donations = book.donations.concat(monthEl.donations);\n        }\n        const indexOfMonth = moment.months().indexOf(moment(monthEl.date).format('MMMM'));\n        const profitLoss = monthEl.poojas.reduce((total: number, item: any) => Number(total) + Number(item.pooja_price), 0) -\n          monthEl.expenses.reduce((total: number, item: any) => Number(total) + Number(item.cost), 0) +\n          monthEl.donations.reduce((total: number, item: any) => Number(total) + Number(item.amount), 0);\n        yearlyOverView.dataSet[0].data[indexOfMonth] += profitLoss;\n      }\n    });\n    this.pageData.thisYearsData = {...this.getReconsolidatedData(book), yearlyOverView};\n  }\n\n  getRangeData = (data: any) => {\n    const yearBook = data.book;\n    if(!yearBook) {\n      return;\n    }\n    let book: any = new Book();\n    let yearlyOverView: any = {\n      dataSet: [{data: [], label: 'Profit/Loss Data'}],\n      chartLabels: []\n    };\n    yearBook.forEach((monthEl: any, index: number) => {\n      if (monthEl) {\n        if (index === 0) {\n          book = {...monthEl}\n        } else {\n          book.poojas = book.poojas.concat(monthEl.poojas);\n          book.expenses = book.expenses.concat(monthEl.expenses);\n          book.donations = book.donations.concat(monthEl.donations);\n        }\n        const profitLoss = monthEl.poojas.reduce((total: number, item: any) => Number(total) + Number(item.pooja_price), 0) -\n          monthEl.expenses.reduce((total: number, item: any) => Number(total) + Number(item.cost), 0) +\n          monthEl.donations.reduce((total: number, item: any) => Number(total) + Number(item.amount), 0);\n        yearlyOverView.dataSet[0].data.push(profitLoss);\n        yearlyOverView.chartLabels.push(monthEl.date);\n      }\n    });\n    this.pageData.thisYearsData = {...this.getReconsolidatedData(book), yearlyOverView};\n  }\n\n  getMonthData = (data: any) => {\n    const monthBook = data.book;\n    if(!monthBook) {\n      return;\n    }\n    let book: any = new Book();\n    let monthlyOverView: any = {\n      dataSet: [{data: [], label: 'Profit/Loss Monthly Data'}],\n      chartLabels: []\n    };\n    let weekRange: any = [];\n    if (monthBook[0] && monthBook[0].date) {\n      weekRange = this.getWeekRange(monthBook[0].date);\n      monthlyOverView.chartLabels = weekRange.map((item: any, index: number) => {\n        item = item;\n        return 'Week ' + (index+1)\n      });\n    }\n    monthlyOverView.dataSet[0].data = monthlyOverView.chartLabels.map(() => 0);\n    monthBook.forEach((monthEl: any, index: number) => {\n      if (monthEl) {\n        if (index === 0) {\n          book = {...monthEl}\n        } else {\n          book.poojas = book.poojas.concat(monthEl.poojas);\n          book.expenses = book.expenses.concat(monthEl.expenses);\n          book.donations = book.donations.concat(monthEl.donations);\n        }\n        const profitLoss = monthEl.poojas.reduce((total: number, item: any) => Number(total) + Number(item.pooja_price), 0) -\n          monthEl.expenses.reduce((total: number, item: any) => Number(total) + Number(item.cost), 0) +\n          monthEl.donations.reduce((total: number, item: any) => Number(total) + Number(item.amount), 0);\n        \n          // monthlyOverView.dataSet[0].data.push(profitLoss);\n\n          weekRange.forEach((element: any, index: number) => {\n            if(moment(monthEl.date).isSame(element[0], 'isoWeek')) {\n              monthlyOverView.dataSet[0].data[index] += profitLoss;\n              return;\n            }\n          });\n      }\n    });\n    this.pageData.thisMonthsData = {...this.getReconsolidatedData(book), monthlyOverView};\n  }\n\n  getWeekData = (data: any) => {\n    // const weekBook = data.book.filter((book: any) => moment(book.date, 'YYYY-MM-DD').isSame(this.thisWeekStartDate, 'isoWeek'));\n    const weekBook = data.book;\n    if(!weekBook) {\n      return;\n    }\n    let book: any = new Book();\n    let weeklyOverView: any = {\n      dataSet: [{data: [], label: 'Profit/Loss Weekly Data'}],\n      chartLabels: []\n    };\n    weekBook.forEach((weekEl: any, index: number) => {\n      if (weekEl) {\n        if (index === 0) {\n          book = {...weekEl}\n        } else {\n          book.poojas = book.poojas.concat(weekEl.poojas);\n          book.expenses = book.expenses.concat(weekEl.expenses);\n          book.donations = book.donations.concat(weekEl.donations);\n        }\n        const profitLoss = weekEl.poojas.reduce((total: number, item: any) => Number(total) + Number(item.pooja_price), 0) -\n          weekEl.expenses.reduce((total: number, item: any) => Number(total) + Number(item.cost), 0) +\n          weekEl.donations.reduce((total: number, item: any) => Number(total) + Number(item.amount), 0);\n        weeklyOverView.dataSet[0].data.push(profitLoss);\n        weeklyOverView.chartLabels.push(weekEl.date);\n      }\n    });\n    this.pageData.thisWeeksData = {...this.getReconsolidatedData(book), weeklyOverView};\n  }\n\n  getTodaysData = (response: any) => {\n    if(!response.book[0]) {\n      this.pageData.todaysData = this.getReconsolidatedData(new Book());\n      return;\n    }\n    this.pageData.todaysData = this.getReconsolidatedData(response.book[0]);\n  }\n\n  getReconsolidatedData = (book: any) => {\n\n    const poojasList = Array.from(new Set(book.poojas.map((pooja: any) => pooja.pooja_name))); \n    const poojaData: any = [];\n    poojasList.forEach((pooja: any) => {\n      poojaData.push({\n        pooja_name: pooja,\n        totalAmount: 0,\n        count: 0\n      });\n    });\n    book.poojas.forEach((pooja: any) => {\n      const item = poojaData.find((p: any) => p.pooja_name === pooja.pooja_name);\n      if (item) {\n        item.totalAmount += Number(pooja.pooja_price)\n        item.count++;\n      }\n    });\n    const reconsolidatedData = {\n      currentOverView: {},\n      overView: {\n        dataSet: [ {\n          data: [ book.poojas.reduce((total: number, item: any) => Number(total) + Number(item.pooja_price), 0),\n          book.expenses.reduce((total: number, item: any) => Number(total) + Number(item.cost), 0),\n          book.donations.reduce((total: number, item: any) => Number(total) + Number(item.amount), 0) ],\n          label: 'Total Amount'\n        }],\n        chartLabels: [`poojas (${book.poojas.length})`, `expenses (${book.expenses.length})`, `donations (${book.donations.length})`]\n      },\n      poojasOverView: {\n        dataSet: [ {\n          data: poojaData.map((pooja: any) => pooja.totalAmount),\n          label: `Pooja Receivable`\n        } ],\n        chartLabels: poojaData.map((pooja: any) => `${pooja.pooja_name} (${pooja.count})`)\n      }\n    };\n    reconsolidatedData.currentOverView = reconsolidatedData.overView;\n    return reconsolidatedData;\n  }\n\n  getProfitLoss(data: any) {\n    if (data.overView.dataSet[0]) {\n      const allTransactions = data.overView.dataSet[0].data;\n      if (allTransactions) {\n        return allTransactions[0] + allTransactions[2] - allTransactions[1]  // poojas + donations - expense\n      }\n    }\n    return '';\n  }\n\n  swapPoojasData(obj: any) {\n    obj.currentOverView = obj.currentOverView == obj.poojasOverView ? obj.overView : obj.poojasOverView;\n  }\n\n  selectCustomStartDate(event: any) {\n    this.customStartDate = event;\n  }\n\n  selectCustomEndDate(event: any) {\n    this.customStartDate = event;\n  }\n\n  getWeekRange(date: string) {\n    const month = moment(date, 'YYYY-MM-DD');\n    \n    const mm = month.month() + 1;\n    const yy = month.year();\n\n\n    const first = month.day() == 0 ? 6 : month.day()-1;\n    let day = 7-first;\n\n    const last = month.daysInMonth();\n    const count = (last-day)/7;\n\n    const weeks = [];\n    weeks.push([moment(`${(1)}-${mm}-${yy}`, 'DD-MM-YYYY').format('YYYY-MM-DD'), moment(`${(day)}-${mm}-${yy}`, 'DD-MM-YYYY').format('YYYY-MM-DD')]);\n    for (let i=0; i < count; i++) {\n      weeks.push([moment(`${(day+1)}-${mm}-${yy}`, 'DD-MM-YYYY').format('YYYY-MM-DD'), moment(`${(Math.min(day+=7, last))}-${mm}-${yy}`, 'DD-MM-YYYY').format('YYYY-MM-DD')]);\n\n    }\n    return weeks;\n}\n\n  ngOnDestroy() {\n    if (this.lineChartSub) {\n      this.lineChartSub.unsubscribe();\n    }\n\n    if (this.barChartSub) {\n      this.barChartSub.unsubscribe();\n    }\n  }\n\n}\n\n\ninterface DataSet {\n  data: Array<any>,\n  label: string\n}\n\ninterface ChartConfig{\n  overView: Chart,\n  currentOverView: Chart | {},\n  poojasOverView: Chart\n  weeklyOverView?: Chart\n  monthlyOverView?: Chart\n}\n\ninterface Chart {\n  dataSet: Array<DataSet>,\n  chartLabels: Array<string>\n}\n\nclass Book {\n  poojas = [];\n  expenses = [];\n  donations = [];\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartsService {\n\n  constructor(private http: HttpClient) { }\n\n  startDate = '2018-01-01';\n  endDate = '2018-01-31';\n  apiHistoryUrl = 'https://api.exchangeratesapi.io/history';\n  apiLatestUrl = 'https://api.exchangeratesapi.io/latest';\n\n  getExchangeRates(currency: string) {\n    return this.http.get(`${this.apiHistoryUrl}?start_at=${this.startDate}&end_at=${this.endDate}&symbols=${currency}`).pipe(\n      map( (res: any) => res['rates']),\n      switchMap( (val) => {\n        const dataset = [];\n        for (const rate in val) {\n          if (val.hasOwnProperty(rate)) {\n            dataset.push({date: rate, value: val[rate][currency] });\n          }\n        }\n        const sorted = dataset.sort((a, b) => {\n          if (a.date < b.date) {\n            return -1;\n          }\n          if (a.date > b.date) {\n            return 1;\n          }\n          return 0;\n        });\n        const currencyName = currency;\n        const labels = sorted.map( data => data.date);\n        const values = sorted.map( data => data.value);\n        return of({ currencyName, values, labels });\n      })\n    );\n  }\n\n  getLatestExchangeRates() {\n    return this.http.get(this.apiLatestUrl).pipe(\n      map( (data: any) => {\n        const date = data['date'];\n        const base = data['base'];\n        const rates = data['rates'];\n        const dataset = [];\n\n        for (const currency in rates) {\n          if (rates.hasOwnProperty(currency)) {\n            dataset.push({ currency: currency, value: rates[currency]});\n          }\n        }\n\n        const values = dataset.map( latestRates => latestRates.value).slice(0, 5);\n        const labels = dataset.map( latestRates => latestRates.currency).slice(0, 5);\n\n        return { date, base, values, labels };\n      })\n    );\n  }\n\n  getReconsiledBook(request: any) {\n    return this.http.get(\n      `${environment.apiUrl}?api=getReconciledBook`, \n      {\n        params: {\n        'start_date_ist_YYYYMMDD': request.startDate,\n        'end_date_ist_YYYYMMDD': request.endDate\n        }\n      }\n    );\n  }\n}\n","import { Action } from '@ngrx/store';\n\nexport enum ChartsActionTypes {\n  LINE_CHART_QUERY = '[Charts] Line chart query',\n  LINE_CHART_LOADED = '[Charts] Line chart loaded',\n\n  BAR_CHART_QUERY = '[Charts] Bar chart query',\n  BAR_CHART_LOADED = '[Charts] Bar chart loaded',\n\n  CHARTS_ERROR = '[Charts] Error'\n}\n\nexport class LineChartQuery implements Action {\n  readonly type = ChartsActionTypes.LINE_CHART_QUERY;\n\n  constructor(public payload: { currency: string }) {}\n}\n\nexport class BarChartQuery implements Action {\n  readonly type = ChartsActionTypes.BAR_CHART_QUERY;\n}\n\nexport class LineChartLoaded implements Action {\n  readonly type = ChartsActionTypes.LINE_CHART_LOADED;\n\n  constructor(public payload: { lineChartData: any }) {}\n}\n\nexport class BarChartLoaded implements Action {\n  readonly type = ChartsActionTypes.BAR_CHART_LOADED;\n\n  constructor(public payload: { barChartData: any }) {}\n}\n\nexport class ChartsError implements Action {\n  readonly type = ChartsActionTypes.CHARTS_ERROR;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport type ChartsActions =\n  | LineChartQuery\n  | LineChartLoaded\n  | BarChartQuery\n  | BarChartLoaded\n  | ChartsError;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { ChartsService } from '../services/charts.service';\n\nimport * as fromCharts from './../store/charts.actions';\nimport { ChartsActionTypes } from './../store/charts.actions';\nimport { map, switchMap, catchError, withLatestFrom } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../../reducers/index';\nimport { getLineChartData, getBarChartData } from './charts.selectors';\n\n@Injectable()\nexport class ChartsEffects {\n\n  constructor(private actions$: Actions, private chartsService: ChartsService, private store: Store<AppState>) {}\n\n  @Effect()\n  lineChartQuery$ = this.actions$.pipe(\n    ofType<fromCharts.LineChartQuery>(ChartsActionTypes.LINE_CHART_QUERY),\n    map( (action: fromCharts.LineChartQuery) => action.payload),\n    withLatestFrom(this.store.pipe(select(getLineChartData))),\n    switchMap( ([payload, chartsData]) =>  {\n      if (!chartsData.values || (chartsData.currencyName && chartsData.currencyName !== payload.currency)) {\n          return this.chartsService.getExchangeRates(payload.currency)\n          .pipe(\n            map( (data: any) => new fromCharts.LineChartLoaded({ lineChartData: data })),\n            catchError( (error: any) => of(new fromCharts.ChartsError({ error }))\n          ));\n      }\n      return of(new fromCharts.LineChartLoaded({ lineChartData: chartsData }));\n    })\n  );\n\n  @Effect()\n  barChartQuery$ = this.actions$.pipe(\n    ofType<fromCharts.BarChartQuery>(ChartsActionTypes.BAR_CHART_QUERY),\n    withLatestFrom(this.store.pipe(select(getBarChartData))),\n    switchMap( ([, chartData]) => {\n      if (!chartData.values) {\n        return this.chartsService.getLatestExchangeRates()\n        .pipe(\n          map( (data: any) => new fromCharts.BarChartLoaded({ barChartData: data })),\n          catchError( (error: any) => of(new fromCharts.ChartsError( { error })))\n        );\n      }\n      return of(new fromCharts.BarChartLoaded({ barChartData: chartData }));\n    })\n  );\n}\n","import { chartsInitialState, ChartsState } from './charts.state';\nimport { ChartsActions, ChartsActionTypes } from './charts.actions';\n\n\nexport function chartsReducer(state = chartsInitialState, action: ChartsActions): ChartsState {\n  switch (action.type) {\n\n    case ChartsActionTypes.LINE_CHART_QUERY: {\n      return Object.assign({}, state, {\n        lineChartLoading: true,\n      });\n    }\n\n    case ChartsActionTypes.BAR_CHART_QUERY: {\n      return Object.assign({}, state, {\n        barChartLoading: true\n      });\n    }\n\n    case ChartsActionTypes.LINE_CHART_LOADED: {\n      return Object.assign({}, state, {\n        lineChartData: action.payload.lineChartData,\n        lineChartLoading: false,\n      });\n    }\n\n    case ChartsActionTypes.BAR_CHART_LOADED: {\n      return Object.assign({}, state, {\n        barChartData: action.payload.barChartData,\n        barChartLoading: false,\n      });\n    }\n\n    case ChartsActionTypes.CHARTS_ERROR: {\n      return Object.assign({}, state, {\n        error: action.payload.error\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\nimport { ChartsState } from './charts.state';\n\nexport const getChartsState = createFeatureSelector<ChartsState>('charts');\n\n\nexport const getLineChartData = createSelector(\n  getChartsState,\n  charts => charts.lineChartData\n);\n\nexport const getBarChartData = createSelector(\n  getChartsState,\n  charts => charts.barChartData\n);\n\nexport const getIsLoading = createSelector(\n  getChartsState,\n  charts => charts.barChartLoading && charts.lineChartLoading\n);\n","export interface ChartsState {\n  lineChartData: any;\n  barChartData: any;\n  lineChartLoading: boolean;\n  barChartLoading: boolean;\n  error: any;\n}\n\nexport const chartsInitialState: ChartsState = {\n  lineChartData: {},\n  barChartData: {},\n  lineChartLoading: false,\n  barChartLoading: false,\n  error: null\n};\n"],"sourceRoot":"webpack:///"}