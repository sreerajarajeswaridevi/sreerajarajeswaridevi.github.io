{"version":3,"sources":["./src/app/poojas/components/pooja-list/pooja-list.component.html","./src/app/poojas/containers/poojas.component.html","./src/app/poojas/components/pooja-list/pooja-list.component.scss","./src/app/poojas/components/pooja-list/pooja-list.component.ts","./src/app/poojas/containers/poojas.component.scss","./src/app/poojas/containers/poojas.component.ts","./src/app/poojas/poojas-routing.module.ts","./src/app/poojas/poojas.module.ts","./src/app/poojas/store/poojas.actions.ts","./src/app/poojas/store/poojas.effects.ts","./src/app/poojas/store/poojas.reducer.ts","./src/app/poojas/store/poojas.selectors.ts","./src/app/poojas/store/poojas.state.ts"],"names":[],"mappings":"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","file":"default~poojas-poojas-module~profile-profile-module.js","sourcesContent":["export default \"<div class=\\\"poojas-list d-flex flex-wrap m-4\\\">\\r\\n      <mdb-card>\\r\\n        <mdb-card-header class=\\\"text-left bg-primary white-text w-100\\\">\\r\\n          <blockquote class=\\\"blockquote bq-success\\\">\\r\\n            <h3 class=\\\"header\\\">Poojas List</h3>\\r\\n            <p class=\\\"py-0\\\">Change pooja settings of your temple</p>\\r\\n          </blockquote>\\r\\n        </mdb-card-header>\\r\\n        <mdb-card-body class=\\\"py-2\\\">\\r\\n          <form #poojasForm=\\\"ngForm\\\" *ngIf=\\\"!(isLoading$ | async)\\\">\\r\\n          <table mdbTable striped=\\\"true\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Code</th>\\r\\n                <th>Description</th>\\r\\n                <th>Price</th>\\r\\n                <th>Added By</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let item of poojas\\\">\\r\\n                <td scope=\\\"row\\\">{{ item.pooja_name }}</td>\\r\\n                <td>{{ item.pooja_code }}</td>\\r\\n                <td>{{ item.pooja_description }}</td>\\r\\n                <td class=\\\"text-warning\\\"><b>&#x20B9;{{ item.pooja_price }}</b></td>\\r\\n                <td>{{ item.added_by }}</td>\\r\\n                <td>\\r\\n                  <mdb-icon fas icon=\\\"trash\\\" class=\\\"float-right delete grey-text\\\" (click)=\\\"onDeletePooja(item.pooja_code)\\\" alt=\\\"Delete Pooja\\\"></mdb-icon>\\r\\n                </td>\\r\\n                \\r\\n\\r\\n              </tr>\\r\\n              <tr class=\\\"bg-white\\\">\\r\\n                <td>\\r\\n                  <div class=\\\"md-form\\\">\\r\\n                    <input type=\\\"text\\\" id=\\\"add_pooja_name\\\" name=\\\"pooja_name\\\" class=\\\"form-control\\\" \\r\\n                    #pooja_name=\\\"ngModel\\\" [(ngModel)]=\\\"newPooja.pooja_name\\\" mdbInput mdbValidate\\r\\n                      [validateSuccess]=\\\"false\\\" required (change)=\\\"newPooja.pooja_code = generateCode(newPooja.pooja_name)\\\">\\r\\n                    <label for=\\\"pooja_name\\\">Name</label>\\r\\n                    <mdb-error *ngIf=\\\"pooja_name && pooja_name.invalid && (pooja_name.dirty || pooja_name.touched)\\\">Name is required</mdb-error>\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div class=\\\"md-form\\\">\\r\\n                    <input type=\\\"text\\\" id=\\\"add_pooja_code\\\" name=\\\"pooja_code\\\" class=\\\"form-control\\\" \\r\\n                    #pooja_code=\\\"ngModel\\\" [(ngModel)]=\\\"newPooja.pooja_code\\\" mdbInput mdbValidate disabled\\r\\n                      [validateSuccess]=\\\"false\\\" required>\\r\\n                    <label for=\\\"pooja_code\\\">Code</label>\\r\\n                    <mdb-error *ngIf=\\\"pooja_code && pooja_code.invalid && (pooja_code.dirty || pooja_code.touched)\\\">Code is required</mdb-error>\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td >\\r\\n                  <div class=\\\"md-form  mt-3 \\\">\\r\\n                    <textarea type=\\\"text\\\" id=\\\"add_pooja_description\\\" name=\\\"pooja_description\\\" class=\\\"my-0 py-0 md-textarea form-control\\\" \\r\\n                    #pooja_description=\\\"ngModel\\\" [(ngModel)]=\\\"newPooja.pooja_description\\\" mdbInput mdbValidate\\r\\n                      [validateSuccess]=\\\"false\\\" required></textarea>\\r\\n                    <label for=\\\"pooja_description\\\">Description</label>\\r\\n                    <mdb-error *ngIf=\\\"pooja_description && pooja_description.invalid && (pooja_description.dirty || pooja_description.touched)\\\">Description is required</mdb-error>\\r\\n                  </div>\\r\\n                 \\r\\n                  <!-- <a class=\\\"btn btn-primary btn-floating\\\" (click)=\\\"onAddPooja()\\\" style=\\\"background-color: #3b5998; height: 45px\\\" href=\\\"javascript:void(0)\\\" role=\\\"button\\\"\\r\\n                    >\\r\\n                    Add\\r\\n                  </a> -->\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div class=\\\"md-form\\\">\\r\\n                    <input type=\\\"number\\\" id=\\\"pooja_add_price\\\" name=\\\"pooja_price\\\" class=\\\"form-control\\\" \\r\\n                    #pooja_price=\\\"ngModel\\\" [(ngModel)]=\\\"newPooja.pooja_price\\\" mdbInput mdbValidate\\r\\n                      [validateSuccess]=\\\"false\\\" required>\\r\\n                    <label for=\\\"pooja_price\\\">Price</label>\\r\\n                    <mdb-error *ngIf=\\\"pooja_price && pooja_price.invalid && (pooja_price.dirty || pooja_price.touched)\\\">Price is required</mdb-error>\\r\\n                  </div>\\r\\n                  \\r\\n                </td>\\r\\n                <td>\\r\\n                  <button mdbBtn [disabled]=\\\"poojasForm?.invalid || (isLoading$ | async)\\\" class=\\\"mt-4 btn btn-floating add\\\" (click)=\\\"onAddPoojaType()\\\" size=\\\"sm\\\" gradient=\\\"purple\\\" mdbWavesEffect>\\r\\n                    <mdb-icon fas icon=\\\"plus\\\" class=\\\"white-text\\\"></mdb-icon> <span class=\\\"pl-2 white-text\\\">Add</span>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n\\r\\n        </form>\\r\\n\\r\\n        <div *ngIf=\\\"isLoading$ | async\\\" class=\\\"d-flex justify-content-center align-items-center my-4\\\">\\r\\n          <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem;\\\">\\r\\n            <span class=\\\"sr-only\\\">Loading...</span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        </mdb-card-body>\\r\\n      </mdb-card>\\r\\n      \\r\\n\\r\\n\\r\\n\"","export default \"<!-- <rr-tabs> -->\\r\\n  <!-- <rr-tab tabTitle=\\\"Poojas\\\"> -->\\r\\n    <app-split-body [isLoading$]=\\\"isLoading$\\\">\\r\\n      <div class=\\\"left-section\\\">\\r\\n        <a href=\\\"javascript:void(0)\\\" role=\\\"button\\\" class=\\\"p-4 m-1 btn btn-primary pooja-box\\\" mdbWavesEffect *ngFor=\\\"let item of poojaTypes\\\" (click)=\\\"newPooja(item)\\\">\\r\\n          <h5><b>{{item.pooja_name}}</b></h5>\\r\\n          <p class=\\\"whitesmoke-text\\\">{{item.pooja_description}}</p>\\r\\n          <h3 class=\\\"price\\\">&#x20B9;{{ item.pooja_price }}</h3>\\r\\n        </a>\\r\\n\\r\\n        <ul class=\\\"left-section-mobile list-group w-100\\\">\\r\\n          <li *ngFor=\\\"let item of poojaTypes\\\" (click)=\\\"newPooja(item)\\\"\\r\\n           class=\\\"bg-primary white-text list-group-item d-flex justify-content-between align-items-center\\\">\\r\\n           <div class=\\\"d-flex flex-column\\\">\\r\\n             <span class=\\\"name\\\">{{item.pooja_name}}</span>\\r\\n             <span class=\\\"description\\\">{{item.pooja_description}}</span>\\r\\n           </div>\\r\\n            <mdb-badge pill=\\\"true\\\" class=\\\"price mini\\\" color=\\\"white\\\">&#x20B9;{{ item.pooja_price }}</mdb-badge>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"right-section pb-4\\\">\\r\\n        <app-right-card>\\r\\n          <div class=\\\"card-header bg-primary white-text\\\">Todays Poojas ({{dates?.today}}) <mdb-badge class=\\\"count\\\" color=\\\"yellow\\\" *ngIf=\\\"poojaList?.length > 0\\\"> {{poojaList.length}}</mdb-badge></div>\\r\\n          <div *ngIf=\\\"isListLoading$ | async\\\" class=\\\"d-flex justify-content-center align-items-center my-4\\\">\\r\\n            <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem;\\\">\\r\\n              <span class=\\\"sr-only\\\">Loading...</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"cd-body\\\">\\r\\n\\r\\n          <table mdbTable small=\\\"true\\\" striped=\\\"true\\\" *ngIf=\\\"!(isListLoading$ | async) && poojaList.length > 0\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Nakshathram</th>\\r\\n                <th>Pooja</th>\\r\\n                <th>Print</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let item of poojaList; let in = index;\\\">\\r\\n                <td scope=\\\"row\\\">{{ item.name }}</td>\\r\\n                <td>{{ item.nakshatram }}</td>\\r\\n                <td>{{ getPoojaNameFromCode(item.pooja_code)  }}</td>\\r\\n                <td> <app-printer [type]=\\\"'pooja'\\\" [size]=\\\"'bill'\\\" [poojas]=\\\"[item]\\\"></app-printer>  </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          </div>\\r\\n          <div class=\\\"p-4 d-flex flex-column justify-content-center align-items-center\\\" *ngIf=\\\"!(isListLoading$ | async) && poojaList?.length === 0\\\">\\r\\n            <mdb-icon fas icon=\\\"times-circle\\\" class=\\\"float-right grey-text\\\" alt=\\\"no data\\\"></mdb-icon>\\r\\n              <p class=\\\"grey-text\\\">No Poojas</p>\\r\\n          </div>\\r\\n        </app-right-card>\\r\\n\\r\\n        <app-right-card *ngIf=\\\"tomorrowsPoojaList?.length > 0\\\">\\r\\n          <div class=\\\"card-header bg-secondary white-text\\\">Tomorrows poojas ({{this.dates?.tomorrow}}) <mdb-badge class=\\\"count\\\" color=\\\"yellow\\\" *ngIf=\\\"tomorrowsPoojaList?.length > 0\\\"> {{tomorrowsPoojaList?.length}}</mdb-badge></div>\\r\\n          <div *ngIf=\\\"isListLoading$ | async\\\" class=\\\"d-flex justify-content-center align-items-center my-4\\\">\\r\\n            <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem;\\\">\\r\\n              <span class=\\\"sr-only\\\">Loading...</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"cd-body\\\">\\r\\n            <table mdbTable small=\\\"true\\\" striped=\\\"true\\\" *ngIf=\\\"!(isListLoading$ | async) && tomorrowsPoojaList.length > 0\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Name</th>\\r\\n                  <th>Nakshathram</th>\\r\\n                  <th>Pooja</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let item of tomorrowsPoojaList\\\">\\r\\n                  <td scope=\\\"row\\\">{{ item.name }}</td>\\r\\n                  <td>{{ item.nakshatram }}</td>\\r\\n                  <td>{{ getPoojaNameFromCode(item.pooja_code)  }}</td>\\r\\n                  <td> <app-printer [type]=\\\"'pooja'\\\" [size]=\\\"'bill'\\\" [poojas]=\\\"[item]\\\"></app-printer>  </td>\\r\\n  \\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <div class=\\\"p-4 d-flex flex-column justify-content-center align-items-center\\\" *ngIf=\\\"!(isListLoading$ | async) && tomorrowsPoojaList?.length === 0\\\">\\r\\n            <mdb-icon fas icon=\\\"times-circle\\\" class=\\\"float-right grey-text\\\" alt=\\\"no data\\\"></mdb-icon>\\r\\n              <p class=\\\"grey-text\\\">No Poojas tomorrow</p>\\r\\n          </div>\\r\\n        </app-right-card>\\r\\n        <br>\\r\\n        <header><b>Poojas by date</b></header>\\r\\n        <hr>\\r\\n        <app-right-card *ngIf=\\\"(isManager$ | async)\\\">\\r\\n          <div class=\\\"card-header bg-primary white-text \\\">\\r\\n            <span class=\\\"icon-button\\\" (click)=\\\"prevDate()\\\">\\r\\n              <mdb-icon *ngIf=\\\"isManager$ | async\\\" fas icon=\\\"chevron-left\\\" class=\\\"ml-1 float-left delete cursor-pointer white-text\\\" alt=\\\"Left\\\"></mdb-icon>\\r\\n            </span>\\r\\n            <span>\\r\\n              Poojas on \\r\\n              <button mdbWavesEffect mdbBtn type=\\\"button\\\" rounded=\\\"true\\\" color=\\\"white\\\" class=\\\"pull-right text-lg btn-primary\\\" rrDatePicker [date]=\\\"selectedDate\\\" [endDate]=\\\"endDate\\\" [startDate]=\\\"startDate\\\"\\r\\n               header=\\\"Select Date\\\" (dateSelected)=\\\"datePicked($event)\\\">\\r\\n                <mdb-icon fas icon=\\\"calendar-alt mr-2\\\" size=\\\"lg\\\" class=\\\"calendar\\\" alt=\\\"date\\\"></mdb-icon> <span appDateTransform [date]=\\\"selectedDate.format('YYYY-MM-DD')\\\"></span>\\r\\n              </button>\\r\\n              <mdb-badge *ngIf=\\\"allPoojasList?.length > 0\\\" color=\\\"yellow\\\" class=\\\"count\\\"> {{allPoojasList?.length}}</mdb-badge>\\r\\n            </span>\\r\\n            <span class=\\\"icon-button\\\" (click)=\\\"nextDate()\\\">\\r\\n              <mdb-icon *ngIf=\\\"(isManager$ | async) && selectedDate.format('DD/MM/YYYY') !== endDate.format('DD/MM/YYYY')\\\" mdbtn fas icon=\\\"chevron-right\\\" class=\\\"ml-1 float-right delete cursor-pointer white-text\\\" alt=\\\"Right\\\"></mdb-icon>\\r\\n            </span>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"allPoojasLoading\\\" class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n            <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem;\\\">\\r\\n              <span class=\\\"sr-only\\\">Loading...</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"cd-body\\\">\\r\\n\\r\\n          <table mdbTable small=\\\"true\\\" striped=\\\"true\\\" *ngIf=\\\"!allPoojasLoading && allPoojasList?.length !== 0\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Nakshathram</th>\\r\\n                <th>Pooja</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let item of allPoojasList; let i = index;\\\">\\r\\n                <td scope=\\\"row\\\">{{ item.name }}</td>\\r\\n                <td>{{ item.nakshatram }}</td>\\r\\n                <td>{{ getPoojaNameFromCode(item.pooja_code)  }}</td>\\r\\n                <td> <app-printer [type]=\\\"'pooja'\\\" [size]=\\\"'bill'\\\" [poojas]=\\\"[item]\\\"></app-printer>  </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          </div>\\r\\n          <div class=\\\"p-4 d-flex flex-column justify-content-center align-items-center\\\" *ngIf=\\\"!allPoojasLoading && allPoojasList?.length === 0\\\">\\r\\n            <mdb-icon fas icon=\\\"times-circle\\\" class=\\\"float-right grey-text\\\" alt=\\\"no data\\\"></mdb-icon>\\r\\n              <p class=\\\"grey-text\\\">No Poojas on {{selectedDate.format('MMM Do')}} </p>\\r\\n          </div>\\r\\n        </app-right-card>\\r\\n       \\r\\n        <!-- <div *ngIf=\\\"isLoading$ | async\\\" class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"margin-top: 200px\\\">\\r\\n          <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem;\\\">\\r\\n            <span class=\\\"sr-only\\\">Loading...</span>\\r\\n          </div>\\r\\n        </div> -->\\r\\n      </div>\\r\\n    </app-split-body>\\r\\n    <app-printer #appPrinter [hidden]=\\\"true\\\"></app-printer>\\r\\n\\r\\n<!--     \\r\\n  </rr-tab>\\r\\n  <rr-tab tabTitle=\\\"Bookings\\\">\\r\\n    Tab 2 content\\r\\n  </rr-tab>\\r\\n</rr-tabs> -->\\r\\n\"","export default \".poojas-list {\\n  box-sizing: border-box;\\n  justify-content: center;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n.poojas-list mdb-card {\\n  min-width: 50%;\\n}\\n.poojas-list mdb-card mdb-card-body {\\n  overflow: auto;\\n}\\n.poojas-list .delete {\\n  cursor: pointer;\\n}\\n.pooja {\\n  width: 80%;\\n  margin: 1rem;\\n}\\n.pooja .add-card:hover {\\n  background-color: whitesmoke;\\n  cursor: pointer;\\n}\\n.add {\\n  height: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9vamFzL2NvbXBvbmVudHMvcG9vamEtbGlzdC9DOlxcZ2l0IGNvZGVcXEF1ZGl0LVVJLUFuZ3VsYXIvc3JjXFxhcHBcXHBvb2phc1xcY29tcG9uZW50c1xccG9vamEtbGlzdFxccG9vamEtbGlzdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcG9vamFzL2NvbXBvbmVudHMvcG9vamEtbGlzdC9wb29qYS1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQUE7RUFDQSx1QkFBQTtFQUNBLHlCQUFBO0tBQUEsc0JBQUE7TUFBQSxxQkFBQTtVQUFBLGlCQUFBO0FDQ0Y7QURDRTtFQUNFLGNBQUE7QUNDSjtBREFJO0VBQ0UsY0FBQTtBQ0VOO0FERUU7RUFDRSxlQUFBO0FDQUo7QURJQTtFQUNFLFVBQUE7RUFDQSxZQUFBO0FDREY7QURJSTtFQUNFLDRCQUFBO0VBQ0EsZUFBQTtBQ0ZOO0FET0E7RUFDRSxZQUFBO0FDSkYiLCJmaWxlIjoic3JjL2FwcC9wb29qYXMvY29tcG9uZW50cy9wb29qYS1saXN0L3Bvb2phLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucG9vamFzLWxpc3Qge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcblxyXG4gIG1kYi1jYXJkIHtcclxuICAgIG1pbi13aWR0aDogNTAlO1xyXG4gICAgbWRiLWNhcmQtYm9keSB7XHJcbiAgICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmRlbGV0ZSB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG59XHJcblxyXG4ucG9vamEge1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgbWFyZ2luOiAxcmVtO1xyXG5cclxuICAuYWRkLWNhcmQge1xyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5hZGQge1xyXG4gIGhlaWdodDogNDBweDtcclxufSIsIi5wb29qYXMtbGlzdCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cbi5wb29qYXMtbGlzdCBtZGItY2FyZCB7XG4gIG1pbi13aWR0aDogNTAlO1xufVxuLnBvb2phcy1saXN0IG1kYi1jYXJkIG1kYi1jYXJkLWJvZHkge1xuICBvdmVyZmxvdzogYXV0bztcbn1cbi5wb29qYXMtbGlzdCAuZGVsZXRlIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4ucG9vamEge1xuICB3aWR0aDogODAlO1xuICBtYXJnaW46IDFyZW07XG59XG4ucG9vamEgLmFkZC1jYXJkOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uYWRkIHtcbiAgaGVpZ2h0OiA0MHB4O1xufSJdfQ== */\"","import { Component, OnInit, ChangeDetectionStrategy, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { PoojaTypes as Poojas } from 'src/app/poojas/models/poojas.model';\r\nimport { getPoojaTypes } from 'src/app/poojas/store/poojas.selectors';\r\nimport { AppState } from 'src/app/reducers';\r\nimport * as fromPoojas from '../../store/poojas.actions';\r\nimport { getIsLoading } from 'src/app/poojas/store/poojas.selectors';\r\nimport { Observable } from 'rxjs';\r\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\r\nimport { ConfirmModalComponent } from 'src/app/shared/components/confirm-modal/confirm-modal.component';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-pooja-list',\r\n  templateUrl: './pooja-list.component.html',\r\n  styleUrls: ['./pooja-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoojaListComponent implements OnInit {\r\n  @ViewChild('poojasForm', { static: true }) poojasForm: NgForm;\r\n\r\n  poojas: Poojas[] = [];\r\n  newPooja: any = {};\r\n  isLoading$: Observable<boolean>;\r\n\r\n  private modalRef: MDBModalRef;\r\n\r\n  modalConfig = {\r\n    class: 'modal-dialog-centered',\r\n  };\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private modalService: MDBModalService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getPoojaList();\r\n    this.isLoading$ = this.store.select(getIsLoading);\r\n    this.initFormGroup();\r\n  }\r\n  \r\n  initFormGroup() {\r\n    this.newPooja = {};\r\n    this.poojasForm && this.poojasForm.reset();\r\n  }\r\n  \r\n  getPoojaList() {\r\n    this.store.select(getPoojaTypes).subscribe((poojas: Poojas[]) => {\r\n      this.poojas = poojas;\r\n      this.initFormGroup();\r\n    })\r\n    this.store.dispatch(new fromPoojas.PoojasTypeQuery());\r\n\r\n  }\r\n  onAddPoojaType() {\r\n    const req = this.newPooja;\r\n    this.store.dispatch(new fromPoojas.PoojaTypeAddQuery({ poojas: req }));\r\n  }\r\n\r\n  generateCode(str: string) {\r\n    let code = '';\r\n    str.split('').forEach((char: string, index: number) => {\r\n      if (index % 2 === 0 && char !== ' ') {\r\n        code += char;\r\n      }\r\n    });\r\n    return `${code.slice(0, 5)}-${this.poojas.length + 1}`;\r\n  }\r\n\r\n  \r\n  openUserDeleteConfirmModal(pooja_code: string) {\r\n    this.modalRef = this.modalService.show(\r\n      ConfirmModalComponent,\r\n      this.modalConfig\r\n    );\r\n\r\n    this.modalRef.content.confirmation\r\n      .pipe(take(1))\r\n      .subscribe((confirmation: boolean) => {\r\n        if (confirmation) {\r\n          this.store.dispatch(new fromPoojas.PoojaTypeDeleted({ pooja_code: pooja_code }));\r\n        }\r\n      });\r\n  }\r\n\r\n  onDeletePooja(pooja_code: string) {\r\n    this.openUserDeleteConfirmModal(pooja_code);\r\n  }\r\n\r\n}\r\n","export default \".left-section a.pooja-box {\\n  display: inline-block;\\n  height: 150px;\\n  width: auto;\\n  max-width: 300px;\\n  color: white;\\n}\\n.left-section .left-section-mobile {\\n  display: none;\\n}\\n.left-section .left-section-mobile li {\\n  margin-bottom: 3px;\\n}\\n.left-section .left-section-mobile li:nth-child(even) {\\n  background-color: #2c79ef !important;\\n}\\n.left-section .left-section-mobile .name {\\n  font-weight: bold;\\n}\\n.left-section .left-section-mobile .description {\\n  font-size: small;\\n  display: block;\\n}\\n@media only screen and (max-width: 768px) {\\n  .left-section a.pooja-box {\\n    display: none;\\n  }\\n  .left-section .left-section-mobile {\\n    display: inline-block;\\n  }\\n}\\n.left-section > :nth-child(even) {\\n  background-color: #2196f3 !important;\\n}\\n.left-section > :nth-child(odd) {\\n  background-color: #2196f3 !important;\\n}\\n.left-section .price {\\n  color: #ffeb3b;\\n}\\n.right-section table {\\n  text-align: left;\\n}\\n.right-section table tr {\\n  cursor: pointer;\\n}\\n@media only screen and (max-width: 1024px) {\\n  .left-section a.pooja-box {\\n    height: auto;\\n    width: auto;\\n  }\\n}\\n.whitesmoke-text {\\n  color: whitesmoke;\\n  text-transform: none;\\n}\\n.justify-space-between {\\n  justify-content: space-between;\\n}\\n.card-header {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n.cd-body {\\n  max-height: 50vh;\\n  overflow: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9vamFzL2NvbnRhaW5lcnMvQzpcXGdpdCBjb2RlXFxBdWRpdC1VSS1Bbmd1bGFyL3NyY1xcYXBwXFxwb29qYXNcXGNvbnRhaW5lcnNcXHBvb2phcy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcG9vamFzL2NvbnRhaW5lcnMvcG9vamFzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UscUJBQUE7RUFDQSxhQUFBO0VBQ0EsV0FBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtBQ0FKO0FERUU7RUFDRSxhQUFBO0FDQUo7QURDSTtFQUNFLGtCQUFBO0FDQ047QURDSTtFQUNFLG9DQUFBO0FDQ047QURDSTtFQUNFLGlCQUFBO0FDQ047QURDSTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtBQ0NOO0FER0U7RUFDRTtJQUNFLGFBQUE7RUNESjtFREdFO0lBQ0UscUJBQUE7RUNESjtBQUNGO0FES0U7RUFDRSxvQ0FBQTtBQ0hKO0FES0U7RUFDRSxvQ0FBQTtBQ0hKO0FETUU7RUFDRSxjQUFBO0FDSko7QURTRTtFQUNFLGdCQUFBO0FDTko7QURPSTtFQUNFLGVBQUE7QUNMTjtBRFVBO0VBRUk7SUFDRSxZQUFBO0lBQ0EsV0FBQTtFQ1JKO0FBQ0Y7QURZQTtFQUNFLGlCQUFBO0VBQ0Esb0JBQUE7QUNWRjtBRGFBO0VBQ0UsOEJBQUE7QUNWRjtBRGFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7QUNWRjtBRGFBO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0FDVkYiLCJmaWxlIjoic3JjL2FwcC9wb29qYXMvY29udGFpbmVycy9wb29qYXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGVmdC1zZWN0aW9uIHtcclxuICBhLnBvb2phLWJveCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBoZWlnaHQ6IDE1MHB4O1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICAubGVmdC1zZWN0aW9uLW1vYmlsZSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgbGkge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAzcHg7XHJcbiAgICB9XHJcbiAgICBsaTpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmM3OWVmIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIC5uYW1lIHtcclxuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB9XHJcbiAgICAuZGVzY3JpcHRpb24ge1xyXG4gICAgICBmb250LXNpemU6IHNtYWxsO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIGEucG9vamEtYm94IHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICAgIC5sZWZ0LXNlY3Rpb24tbW9iaWxlIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG4gID46bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMTk2ZjMgIWltcG9ydGFudDtcclxuICB9XHJcbiAgPjpudGgtY2hpbGQob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE5NmYzICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICAucHJpY2Uge1xyXG4gICAgY29sb3I6ICNmZmViM2I7XHJcbiAgfVxyXG59XHJcblxyXG4ucmlnaHQtc2VjdGlvbiB7XHJcbiAgdGFibGUge1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIHRyIHtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAubGVmdC1zZWN0aW9uIHtcclxuICAgIGEucG9vamEtYm94IHtcclxuICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICB3aWR0aDogYXV0bztcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi53aGl0ZXNtb2tlLXRleHQge1xyXG4gIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG4uanVzdGlmeS1zcGFjZS1iZXR3ZWVuIHtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuXHJcbi5jYXJkLWhlYWRlciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG4gXHJcbi5jZC1ib2R5IHtcclxuICBtYXgtaGVpZ2h0OiA1MHZoO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59IiwiLmxlZnQtc2VjdGlvbiBhLnBvb2phLWJveCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAxNTBweDtcbiAgd2lkdGg6IGF1dG87XG4gIG1heC13aWR0aDogMzAwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbi5sZWZ0LXNlY3Rpb24gLmxlZnQtc2VjdGlvbi1tb2JpbGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmxlZnQtc2VjdGlvbiAubGVmdC1zZWN0aW9uLW1vYmlsZSBsaSB7XG4gIG1hcmdpbi1ib3R0b206IDNweDtcbn1cbi5sZWZ0LXNlY3Rpb24gLmxlZnQtc2VjdGlvbi1tb2JpbGUgbGk6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJjNzllZiAhaW1wb3J0YW50O1xufVxuLmxlZnQtc2VjdGlvbiAubGVmdC1zZWN0aW9uLW1vYmlsZSAubmFtZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmxlZnQtc2VjdGlvbiAubGVmdC1zZWN0aW9uLW1vYmlsZSAuZGVzY3JpcHRpb24ge1xuICBmb250LXNpemU6IHNtYWxsO1xuICBkaXNwbGF5OiBibG9jaztcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmxlZnQtc2VjdGlvbiBhLnBvb2phLWJveCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAubGVmdC1zZWN0aW9uIC5sZWZ0LXNlY3Rpb24tbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cbn1cbi5sZWZ0LXNlY3Rpb24gPiA6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIxOTZmMyAhaW1wb3J0YW50O1xufVxuLmxlZnQtc2VjdGlvbiA+IDpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMTk2ZjMgIWltcG9ydGFudDtcbn1cbi5sZWZ0LXNlY3Rpb24gLnByaWNlIHtcbiAgY29sb3I6ICNmZmViM2I7XG59XG5cbi5yaWdodC1zZWN0aW9uIHRhYmxlIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbi5yaWdodC1zZWN0aW9uIHRhYmxlIHRyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAubGVmdC1zZWN0aW9uIGEucG9vamEtYm94IHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IGF1dG87XG4gIH1cbn1cbi53aGl0ZXNtb2tlLXRleHQge1xuICBjb2xvcjogd2hpdGVzbW9rZTtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi5qdXN0aWZ5LXNwYWNlLWJldHdlZW4ge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmNkLWJvZHkge1xuICBtYXgtaGVpZ2h0OiA1MHZoO1xuICBvdmVyZmxvdzogYXV0bztcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AppState } from 'src/app/reducers';\r\nimport { getIsLoading, getIsListLoading, getPoojaTypes, getPoojaList, getNewlyRegisteredPooja } from '../store/poojas.selectors';\r\nimport * as fromPoojas from '../store/poojas.actions';\r\nimport { NewPoojaRequest, PoojaList, PoojaTypes } from '../models/poojas.model';\r\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\r\nimport { PoojasModalComponent } from 'src/app/shared/components/poojas-modal/poojas-modal.component';\r\nimport { take } from 'rxjs/operators';\r\nimport { PoojasService } from '../services/poojas.service';\r\nimport { isManager } from 'src/app/auth/store/auth.selectors';\r\nimport { PrinterComponent } from 'src/app/shared/components/printer/printer.component';\r\n// import { PoojasModalComponent } from 'src/app/shared/components/poojas-modal/poojas-modal.component';\r\nvar moment = require('../../../assets/datepicker/moment.js');\r\n\r\n@Component({\r\n  selector: 'app-poojas',\r\n  templateUrl: './poojas.component.html',\r\n  styleUrls: ['./poojas.component.scss']\r\n})\r\nexport class PoojasComponent implements OnInit {\r\n  @ViewChild('appPrinter', { static: true }) appPrinter: PrinterComponent;\r\n\r\n  isListLoading$: Observable<boolean>;\r\n  isLoading$: Observable<boolean>;\r\n  isManager$: Observable<boolean>;\r\n\r\n  poojaTypes: PoojaTypes[];\r\n  poojaList: PoojaList[];\r\n  tomorrowsPoojaList: PoojaList[];\r\n  allPoojasList: PoojaList[];\r\n  allPoojasLoading = false;\r\n\r\n  modalRef: MDBModalRef;\r\n  newPoojaCacheHolder:any = null;\r\n\r\n  defaultDate = moment();\r\n  startDate = moment().subtract(60, 'days');\r\n  endDate = moment().add('30', 'days');\r\n  selectedDate = moment();\r\n\r\n  dates = {\r\n    today: moment().format('DD-MM-YYYY'),\r\n    tomorrow: moment().add(1, 'days').format('DD-MM-YYYY')\r\n  };\r\n\r\n  // modalConfig = {\r\n  //   // backdrop: true,\r\n  //   // keyboard: true,/\r\n  //   // show: false,\r\n  //   // ignoreBackdropClick: false,\r\n  //   // containerClass: 'top',\r\n  //   animated: true,\r\n  //   data: {\r\n  //     heading: 'New Pooja'\r\n  //   }\r\n  // };\r\n\r\n  modalConfig = {\r\n    containerClass: 'center',\r\n    class: 'modal-dialog-centered center modal-lg',\r\n    animated: true,\r\n  };\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private modalService: MDBModalService,\r\n    private poojasService: PoojasService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.datePicked(moment());\r\n    this.allPoojasList = [];\r\n    this.poojaList = [];\r\n    this.store.select(getPoojaTypes).subscribe((poojas: PoojaTypes[]) => {\r\n      this.poojaTypes = poojas;\r\n    })\r\n    this.store.select(getPoojaList).subscribe((list: PoojaList[]) => {\r\n      this.poojaList = list;\r\n      this.poojasService.getPoojas(moment().add(1, 'days').format('YYYY-MM-DD'))\r\n      .subscribe((poojas: { poojaList: PoojaList[] }) => {\r\n        this.tomorrowsPoojaList = poojas.poojaList;\r\n      });\r\n      if (list !== null) {\r\n        this.datePicked(moment());\r\n      }\r\n    });\r\n    this.store.select(getNewlyRegisteredPooja).subscribe((response: any) => {\r\n      //response.receipt_number\r\n      if (response != null && this.newPoojaCacheHolder) {\r\n        const poojaDetails = this.newPoojaCacheHolder;\r\n        this.appPrinter.poojas = this.newPoojaCacheHolder.bhakthar.map((person: any) => {\r\n          return {\r\n            ...person,\r\n            ...poojaDetails,\r\n            receipt_number: response.receipt_number,\r\n            pooja_name: this.getPoojaNameFromCode(this.newPoojaCacheHolder.pooja_code)\r\n          }\r\n        });\r\n        this.appPrinter.triggerPrint();\r\n        this.newPoojaCacheHolder = null;\r\n      }\r\n    })\r\n    this.isManager$ = this.store.select(isManager);\r\n    this.isLoading$ = this.store.select(getIsLoading);\r\n    this.isListLoading$ = this.store.select(getIsListLoading);\r\n    this.store.dispatch(new fromPoojas.PoojasTypeQuery());\r\n    this.store.dispatch(new fromPoojas.PoojaListQuery(moment().format('YYYY-MM-DD'))); // todays poojas\r\n  }\r\n\r\n  newPooja(pooja: PoojaTypes) {\r\n    this.modalRef = this.modalService.show(PoojasModalComponent, {\r\n      ...this.modalConfig,\r\n      data: {\r\n        heading: pooja.pooja_name,\r\n        price: pooja.pooja_price,\r\n        code: pooja.pooja_code\r\n      }\r\n    });\r\n\r\n    this.modalRef.content.poojasData.pipe(take(1)).subscribe( (pooja: NewPoojaRequest) => {\r\n      this.newPoojaCacheHolder = pooja;\r\n      this.store.dispatch(new fromPoojas.RegisterPooja({ pooja: pooja }));\r\n      this.datePicked(moment());\r\n    });\r\n  }\r\n\r\n  getPoojaNameFromCode(pooja_code: string) {\r\n    const res = this.poojaTypes && this.poojaTypes.find(pooja => pooja.pooja_code === pooja_code);\r\n    if (res) {\r\n      return res.pooja_name;\r\n    }\r\n    return '';\r\n  }\r\n\r\n\r\n  datePicked(date: any) {\r\n    this.selectedDate = date;\r\n    this.allPoojasLoading = true;\r\n    this.poojasService.getPoojas(date.format('YYYY-MM-DD'))\r\n    .subscribe((poojas: { poojaList: PoojaList[] }) => {\r\n      this.allPoojasList = poojas.poojaList;\r\n      this.allPoojasLoading = false;\r\n    }).add(() => {\r\n      this.allPoojasLoading = false;\r\n    })\r\n  }\r\n\r\n  prevDate() {\r\n    this.datePicked(this.selectedDate.subtract('1', 'days'));\r\n  }\r\n\r\n  nextDate() {\r\n    this.datePicked(this.selectedDate.add('1', 'days'));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PoojasComponent } from './containers/poojas.component';\r\n\r\nconst routes: Routes = [{ path: '', component: PoojasComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PoojasRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoojasRoutingModule } from './poojas-routing.module';\r\nimport { PoojasComponent } from './containers/poojas.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ButtonsModule, InputsModule, TableModule, IconsModule, ModalModule, CardsModule, DropdownModule, InputUtilitiesModule, BadgeModule } from 'angular-bootstrap-md';\r\n\r\nimport * as fromPoojas from './store/poojas.reducer';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { PoojasEffects } from './store/poojas.effects';\r\nimport { CoreModule } from '../core/core.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PoojaListComponent } from './components/pooja-list/pooja-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PoojasRoutingModule,\r\n    ModalModule,\r\n    FormsModule,\r\n    ButtonsModule,\r\n    InputsModule,\r\n    IconsModule,\r\n    TableModule,\r\n    CoreModule,\r\n    CardsModule,\r\n    SharedModule,    \r\n    DropdownModule,\r\n    InputUtilitiesModule,\r\n    BadgeModule,\r\n    StoreModule.forFeature('poojas', fromPoojas.PoojasReducer),\r\n    EffectsModule.forFeature([PoojasEffects])\r\n  ],\r\n  declarations: [PoojasComponent, PoojaListComponent],\r\n  exports: [PoojasComponent, PoojaListComponent]\r\n})\r\nexport class PoojasModule { }\r\n","import { Action } from '@ngrx/store';\r\nimport { PoojaList, PoojaList as Poojas } from '../models/poojas.model';\r\n\r\nexport enum PoojasActionTypes {\r\n  POOJA_TYPE_QUERY = '[Pooja Type] Query Pooja Types',\r\n  POOJA_TYPE_LOADED = '[Pooja Type] Fetched Pooja Types',\r\n  POOJA_TYPE_ADD_QUERY = '[Pooja Type] Add new Pooja Type',\r\n  POOJA_TYPE_ADDED = '[Pooja Type] Added New Pooja Type',\r\n  POOJA_TYPE_EDITED = '[Pooja Type] Edited Pooja Type',\r\n  POOJA_TYPE_DELETED = '[Pooja Type] Delete Pooja Type',\r\n\r\n  POOJA_LIST_QUERY = '[Pooja Type] Query Pooja List',\r\n  POOJA_LIST_LOADED = '[Pooja Type] Query Pooja Loaded',\r\n  POOJA_REGISTERED = '[Pooja Type] New Pooja Registered',\r\n  POOJA_ADD_QUERY = '[Pooja] Add new Pooja',\r\n  POOJA_ADDED = '[Pooja] Added New Pooja',\r\n  POOJA_DELETED = '[Pooja] Delete Pooja',\r\n\r\n  POOJAS_ERROR = '[Poojas] Error'\r\n}\r\n\r\nexport class PoojasTypeQuery implements Action {\r\n  readonly type = PoojasActionTypes.POOJA_TYPE_QUERY;\r\n}\r\n\r\nexport class PoojaTypesLoaded implements Action {\r\n  readonly type = PoojasActionTypes.POOJA_TYPE_LOADED;\r\n\r\n  constructor(public payload: { poojas: Poojas[] }) {}\r\n}\r\n\r\nexport class PoojaTypeAddQuery implements Action {\r\n  readonly type = PoojasActionTypes.POOJA_TYPE_ADD_QUERY;\r\n\r\n  constructor(public payload: { poojas: any }) {}\r\n}\r\n\r\nexport class PoojaTypeEdited implements Action {\r\n  readonly type = PoojasActionTypes.POOJA_TYPE_EDITED;\r\n\r\n  constructor(public payload: { poojas: Poojas }) {}\r\n}\r\n\r\nexport class PoojaTypeDeleted implements Action {\r\n  readonly type = PoojasActionTypes.POOJA_TYPE_DELETED;\r\n\r\n  constructor(public payload: { pooja_code: string }) {}\r\n}\r\n\r\nexport class PoojasError implements Action {\r\n  readonly type = PoojasActionTypes.POOJAS_ERROR;\r\n\r\n  constructor(public payload: { error: any }) {}\r\n}\r\n\r\nexport class RegisterPooja implements Action {\r\n  readonly type = PoojasActionTypes.POOJA_ADD_QUERY;\r\n\r\n  constructor(public payload: { pooja: any }) {}\r\n}\r\n\r\nexport class PoojaListQuery implements Action {\r\n  readonly type = PoojasActionTypes.POOJA_LIST_QUERY;\r\n\r\n  constructor(public payload: { date: any }) {}\r\n}\r\n\r\nexport class PoojaListLoaded implements Action {\r\n  readonly type = PoojasActionTypes.POOJA_LIST_LOADED;\r\n\r\n  constructor(public payload: { poojaList: PoojaList[] }) {}\r\n}\r\n\r\nexport class PoojaRegistered implements Action {\r\n  readonly type = PoojasActionTypes.POOJA_REGISTERED;\r\n\r\n  constructor(public payload: { response: any }) {}\r\n}\r\n\r\n\r\nexport type PoojasActions =\r\n  | PoojasTypeQuery\r\n  | PoojaTypesLoaded\r\n  | PoojaTypeAddQuery\r\n  | PoojaTypeEdited\r\n  | PoojaTypeDeleted\r\n  | RegisterPooja\r\n  | PoojaRegistered\r\n  | PoojaListQuery\r\n  | PoojaListLoaded\r\n  | PoojasError;\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { PoojasService } from '../services/poojas.service';\r\nimport { PoojasActionTypes } from './poojas.actions';\r\nimport { switchMap, map, catchError, withLatestFrom } from 'rxjs/operators';\r\n// import { Poojas } from '../models/poojas.model';\r\n\r\nimport * as fromPoojas from './poojas.actions';\r\nimport { of } from 'rxjs';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { AppState } from '../../reducers/index';\r\nimport { getUser } from '../../auth/store/auth.selectors';\r\nimport { getPoojaTypes } from './poojas.selectors';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nvar moment = require('../../../assets/datepicker/moment.js');\r\n\r\n@Injectable()\r\nexport class PoojasEffects {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private poojasService: PoojasService,\r\n    private store: Store<AppState>,\r\n    private toastr: ToastrService\r\n    ) {}\r\n\r\n  @Effect()\r\n  queryPoojaType$ = this.actions$.pipe(\r\n    ofType(PoojasActionTypes.POOJA_TYPE_QUERY),\r\n    withLatestFrom(this.store.pipe(select(getPoojaTypes))),\r\n    switchMap(([]: any) => this.poojasService.getPoojaTypes()\r\n      .pipe(\r\n        map((list: any) => {\r\n          return (new fromPoojas.PoojaTypesLoaded({ poojas: list.poojaTypesList }));\r\n        }),\r\n        catchError(error => {\r\n          this.toastr.error('Something went wrong. Please try after sometime');\r\n          return of(new fromPoojas.PoojasError({ error }));\r\n        })\r\n      )\r\n    ),\r\n  );\r\n\r\n  @Effect()\r\n  queryPoojas$ = this.actions$.pipe(\r\n    ofType(PoojasActionTypes.POOJA_LIST_QUERY),\r\n    map((action: any) => action.payload),\r\n    switchMap((payload) => this.poojasService.getPoojas(payload)\r\n      .pipe(\r\n        map((list: any) => {\r\n          return (new fromPoojas.PoojaListLoaded({ poojaList: list.poojaList }));\r\n        }),\r\n        catchError(error => {\r\n          this.toastr.error('Something went wrong. Please try after sometime');\r\n          return of(new fromPoojas.PoojasError({ error }));\r\n        })\r\n      )\r\n    ),\r\n  );\r\n\r\n  @Effect()\r\n  addPoojaType$ = this.actions$.pipe(\r\n    ofType(PoojasActionTypes.POOJA_TYPE_ADD_QUERY),\r\n    map((action: fromPoojas.PoojaTypeAddQuery) => action.payload),\r\n    // withLatestFrom(this.store.pipe(select(getPoojaTypes))),\r\n    switchMap((payload: any) => this.poojasService.addPoojaType(payload.poojas)\r\n    .pipe(\r\n      map((list: any) => {\r\n        console.log(list.data);\r\n        return (new fromPoojas.PoojasTypeQuery());\r\n      }),\r\n      catchError(error => {\r\n        this.toastr.error('Something went wrong. Please try after sometime');\r\n        return of(new fromPoojas.PoojasError({ error }));\r\n      })\r\n    ))\r\n  );\r\n\r\n  @Effect()\r\n  addPooja$ = this.actions$.pipe(\r\n    ofType(PoojasActionTypes.POOJA_ADD_QUERY),\r\n    map((action: any) => action.payload),\r\n    switchMap((payload: any) => this.poojasService.addPooja(payload.pooja)\r\n    .pipe(\r\n      switchMap((list: any) => {\r\n        // console.log(list?.persons);\r\n        return [(new fromPoojas.PoojaRegistered({response: list})),\r\n        new fromPoojas.PoojaListQuery(moment().format('YYYY-MM-DD'))\r\n      ];\r\n        // return (new fromPoojas.PoojaListQuery(moment().format('YYYY-MM-DD')));\r\n      }),\r\n      catchError(error => {\r\n        this.toastr.error('Something went wrong. Please try after sometime');\r\n        return of(new fromPoojas.PoojasError({ error }));\r\n      })\r\n    ))\r\n  );\r\n\r\n  @Effect()\r\n  edit$ = this.actions$.pipe(\r\n    ofType(PoojasActionTypes.POOJA_TYPE_EDITED),\r\n    map((action: fromPoojas.PoojaTypeEdited) => action.payload),\r\n    withLatestFrom(this.store.pipe(select(getUser))),\r\n    switchMap(([payload, user]: any) => this.poojasService.update(payload.customer, user.temple_code)\r\n    .pipe(\r\n      catchError( error => {\r\n        this.toastr.error('Something went wrong. Please try after sometime');\r\n        return of(new fromPoojas.PoojasError({ error }));\r\n    }))\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  delete$ = this.actions$.pipe(\r\n    ofType(PoojasActionTypes.POOJA_TYPE_DELETED),\r\n    map((action: fromPoojas.PoojaTypeDeleted) => action.payload),\r\n    switchMap((pooja: any) => {\r\n      return this.poojasService.deletePoojaType(pooja.pooja_code)\r\n      .pipe(map(() => {\r\n          return (new fromPoojas.PoojasTypeQuery());\r\n          }),\r\n          catchError( (error: any) => {\r\n            this.toastr.error('Something went wrong. Please try after sometime');\r\n            return of(new fromPoojas.PoojasError({ error }))})\r\n        )}\r\n    )\r\n  );\r\n}\r\n","import { PoojasInitialState, PoojasState } from './poojas.state';\r\nimport { PoojasActions, PoojasActionTypes } from './poojas.actions';\r\n\r\nexport function PoojasReducer(state = PoojasInitialState, action: PoojasActions): PoojasState {\r\n  switch (action.type) {\r\n\r\n    case PoojasActionTypes.POOJA_TYPE_QUERY: {\r\n      return Object.assign({}, state, {\r\n        isLoading: true,\r\n      });\r\n    }\r\n\r\n    \r\n    case PoojasActionTypes.POOJA_TYPE_LOADED: {\r\n      return Object.assign({}, state, {\r\n        poojaTypes: action.payload.poojas,\r\n        isLoading: false,\r\n      });\r\n    }\r\n    \r\n    case PoojasActionTypes.POOJA_TYPE_ADD_QUERY: {\r\n      return Object.assign({}, state, {\r\n        isLoading: true,\r\n      });\r\n    }\r\n    case PoojasActionTypes.POOJA_ADD_QUERY: {\r\n      return Object.assign({}, state, {\r\n        isListLoading: true,\r\n      });\r\n    }\r\n    \r\n    case PoojasActionTypes.POOJAS_ERROR: {\r\n      return Object.assign({}, state, {\r\n        isLoading: false,\r\n        error: action.payload.error\r\n      });\r\n    }\r\n\r\n    case PoojasActionTypes.POOJA_LIST_QUERY: {\r\n      return Object.assign({}, state, {\r\n        isListLoading: true,\r\n      });\r\n    }\r\n    \r\n    case PoojasActionTypes.POOJA_LIST_LOADED: {\r\n      return Object.assign({}, state, {\r\n        isListLoading: false,\r\n        poojaList: action.payload.poojaList,\r\n      });\r\n    }\r\n\r\n    case PoojasActionTypes.POOJA_REGISTERED: {\r\n      return Object.assign({}, state, {\r\n        isListLoading: false,\r\n        newPoojasRegistered: action.payload.response,\r\n      });\r\n    }\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\r\nimport { PoojasState } from './poojas.state';\r\n\r\nexport const getPoojasState = createFeatureSelector<PoojasState>('poojas');\r\n\r\nexport const getPoojaTypes = createSelector(\r\n  getPoojasState,\r\n  poojas => poojas.poojaTypes\r\n);\r\n\r\nexport const getNewlyRegisteredPooja = createSelector(\r\n  getPoojasState,\r\n  poojas => poojas.newPoojasRegistered\r\n);\r\n\r\n\r\nexport const getPoojaList = createSelector(\r\n  getPoojasState,\r\n  poojas => poojas.poojaList\r\n);\r\n\r\nexport const getIsLoading = createSelector(\r\n  getPoojasState,\r\n  poojas => poojas.isLoading\r\n);\r\n\r\nexport const getIsListLoading = createSelector(\r\n  getPoojasState,\r\n  poojas => poojas.isListLoading\r\n);\r\n\r\nexport const getError = createSelector(\r\n  getPoojasState,\r\n  poojas => poojas.error\r\n);\r\n","import { PoojaList, PoojaTypes } from '../models/poojas.model';\r\n\r\nexport interface PoojasState {\r\n    poojaList: PoojaList[] | null;\r\n    newPoojasRegistered: PoojaList[] | null;\r\n    poojaTypes: PoojaTypes[] | null;\r\n    isLoading: boolean;\r\n    isListLoading: boolean;\r\n    error: any;\r\n}\r\n\r\nexport const PoojasInitialState: PoojasState = {\r\n    poojaTypes: null,\r\n    poojaList: null,\r\n    isLoading: true,\r\n    isListLoading: true,\r\n    error: null,\r\n    newPoojasRegistered: null\r\n};\r\n"],"sourceRoot":"webpack:///"}