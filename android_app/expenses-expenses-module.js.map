{"version":3,"sources":["./src/app/expenses/containers/expenses.component.html","./src/app/expenses/containers/expenses.component.scss","./src/app/expenses/containers/expenses.component.ts","./src/app/expenses/expenses-routing.module.ts","./src/app/expenses/expenses.module.ts","./src/app/expenses/services/expenses.service.ts","./src/app/expenses/store/expenses.actions.ts","./src/app/expenses/store/expenses.effects.ts","./src/app/expenses/store/expenses.reducer.ts","./src/app/expenses/store/expenses.selectors.ts","./src/app/expenses/store/expenses.state.ts"],"names":[],"mappings":"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","file":"expenses-expenses-module.js","sourcesContent":["export default \"<app-split-body [isLoading$]=\\\"isLoading$\\\">\\n  <div class=\\\"left-section\\\">\\n    <div class=\\\"white px-4 section-header\\\">\\n      <h3>EXPENSES LIST</h3>\\n      <p class=\\\"grey-text pt-3\\\">Manage your Expenses</p>\\n    </div>\\n  </div>\\n  <div class=\\\"right-section\\\">\\n    <div *ngIf=\\\"isLoading$ | async\\\" class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"margin-top: 200px\\\">\\n      <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem;\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n      </div>\\n    </div>\\n  </div>\\n</app-split-body>\\n\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVuc2VzL2NvbnRhaW5lcnMvZXhwZW5zZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/app/reducers';\nimport { getIsLoading } from '../store/expenses.selectors';\n\n@Component({\n  selector: 'app-expenses',\n  templateUrl: './expenses.component.html',\n  styleUrls: ['./expenses.component.scss']\n})\nexport class ExpensesComponent implements OnInit {\n  isLoading$: Observable<boolean>;\n\n  constructor(\n    private store: Store<AppState>,\n  ) {}\n\n  ngOnInit(): void {\n    this.isLoading$ = this.store.select(getIsLoading);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ExpensesComponent } from './containers/expenses.component';\n\nconst routes: Routes = [{ path: '', component: ExpensesComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ExpensesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ExpensesRoutingModule } from './expenses-routing.module';\nimport { ExpensesComponent } from './containers/expenses.component';\nimport { FormsModule } from '@angular/forms';\nimport { ButtonsModule, InputsModule, TableModule, IconsModule, ModalModule } from 'angular-bootstrap-md';\n\nimport * as fromExpenses from './store/expenses.reducer';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ExpensesEffects } from './store/expenses.effects';\nimport { CoreModule } from '../core/core.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ExpensesRoutingModule,\n    ModalModule,\n    FormsModule,\n    ButtonsModule,\n    InputsModule,\n    IconsModule,\n    TableModule,\n    CoreModule,\n    StoreModule.forFeature('expenses', fromExpenses.ExpensesReducer),\n    EffectsModule.forFeature([ExpensesEffects])\n  ],\n  declarations: [ExpensesComponent],\n  exports: [ExpensesComponent]\n})\nexport class ExpensesModule { }\n","import { Injectable } from '@angular/core';\n// import { AngularFireDatabase } from '@angular/fire/database';\nimport { Expenses } from '../models/expenses.model';\nimport { of } from 'rxjs';\n// import { AngularFireAuth } from '@angular/fire/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpensesService {\n\n  constructor() { }\n\n  get userId() {\n    return 'uid';\n  }\n\n  add(expenses: Expenses, userId: string) {\n    return of([expenses, userId]);\n\n  }\n\n  addExpenses(expensess: Expenses[]) {\n    return of(expensess);\n\n  }\n\n  get(userId: string) {\n    return of(userId);\n\n  }\n\n  update(expenses: Expenses, userId: string) {\n    return of([expenses, userId]);\n\n  }\n\n  delete(expenses: Expenses, userId: string) {\n    return of([expenses, userId]);\n\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Expenses } from '../models/expenses.model';\n\nexport enum ExpensesActionTypes {\n  POOJAS_QUERY = '[Expenses] Query',\n  POOJAS_LOADED = '[Expenses] Fetched',\n\n  POOJAS_ADDED = '[Expenses] Added',\n  POOJAS_EDITED = '[Expenses] Edited',\n  POOJAS_DELETED = '[Expenses] Deleted',\n\n  POOJAS_ERROR = '[Expenses] Error'\n}\n\nexport class ExpensesQuery implements Action {\n  readonly type = ExpensesActionTypes.POOJAS_QUERY;\n}\n\nexport class ExpensesLoaded implements Action {\n  readonly type = ExpensesActionTypes.POOJAS_LOADED;\n\n  constructor(public payload: { Expenses: Expenses[] }) {}\n}\n\nexport class ExpensesAdded implements Action {\n  readonly type = ExpensesActionTypes.POOJAS_ADDED;\n\n  constructor(public payload: { expenses: Expenses }) {}\n}\n\nexport class ExpensesEdited implements Action {\n  readonly type = ExpensesActionTypes.POOJAS_EDITED;\n\n  constructor(public payload: { expenses: Expenses }) {}\n}\n\nexport class ExpensesDeleted implements Action {\n  readonly type = ExpensesActionTypes.POOJAS_DELETED;\n\n  constructor(public payload: { expenses: Expenses }) {}\n}\n\nexport class ExpensesError implements Action {\n  readonly type = ExpensesActionTypes.POOJAS_ERROR;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport type ExpensesActions =\n  | ExpensesQuery\n  | ExpensesLoaded\n  | ExpensesAdded\n  | ExpensesEdited\n  | ExpensesDeleted\n  | ExpensesError;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { ExpensesService } from '../services/expenses.service';\nimport { ExpensesActionTypes } from './expenses.actions';\nimport { switchMap, map, catchError, withLatestFrom } from 'rxjs/operators';\nimport { Expenses } from '../models/expenses.model';\n\nimport * as fromExpenses from './expenses.actions';\nimport { of } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../../reducers/index';\nimport { getUser } from '../../auth/store/auth.selectors';\n\n@Injectable()\nexport class ExpensesEffects {\n\n  constructor(private actions$: Actions, private expensesService: ExpensesService, private store: Store<AppState>) {}\n\n  @Effect()\n  query$ = this.actions$.pipe(\n    ofType(ExpensesActionTypes.POOJAS_QUERY),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([, user]: any) => this.expensesService.get(user.uid)\n      .pipe(\n        map((data: any) => {\n          const ExpensesData: Expenses[] = data.map((res: any) => {\n            const key = res.payload.key;\n            const customer: Expenses = res.payload.val();\n            return {\n              key: key,\n              id: customer.id,\n              name: customer.name,\n              description: customer.description\n            };\n          });\n          return (new fromExpenses.ExpensesLoaded({ Expenses: ExpensesData }));\n        }),\n        catchError(error => {\n          return of(new fromExpenses.ExpensesError({ error }));\n        })\n      )\n    ),\n  );\n\n  @Effect({ dispatch: false })\n  added$ = this.actions$.pipe(\n    ofType(ExpensesActionTypes.POOJAS_ADDED),\n    map((action: fromExpenses.ExpensesAdded) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.expensesService.add(payload.customer, user.uid))\n  );\n\n  @Effect({ dispatch: false })\n  edit$ = this.actions$.pipe(\n    ofType(ExpensesActionTypes.POOJAS_EDITED),\n    map((action: fromExpenses.ExpensesEdited) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.expensesService.update(payload.customer, user.uid)\n    .pipe(\n      catchError( error => {\n      return of(new fromExpenses.ExpensesError({ error }));\n    }))\n    )\n  );\n\n  @Effect({ dispatch: false })\n  delete$ = this.actions$.pipe(\n    ofType(ExpensesActionTypes.POOJAS_DELETED),\n    map((action: fromExpenses.ExpensesDeleted) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.expensesService.delete(payload.customer, user.uid))\n  );\n}\n","import { ExpensesInitialState, ExpensesState } from './expenses.state';\nimport { ExpensesActions, ExpensesActionTypes } from './expenses.actions';\n\nexport function ExpensesReducer(state = ExpensesInitialState, action: ExpensesActions): ExpensesState {\n  switch (action.type) {\n\n    case ExpensesActionTypes.POOJAS_QUERY: {\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    }\n\n    case ExpensesActionTypes.POOJAS_LOADED: {\n      return Object.assign({}, state, {\n        Expenses: action.payload.Expenses,\n        isLoading: false,\n      });\n    }\n\n    case ExpensesActionTypes.POOJAS_ERROR: {\n      return Object.assign({}, state, {\n        isLoading: false,\n        error: action.payload.error\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\nimport { ExpensesState } from './expenses.state';\n\nexport const getExpensesState = createFeatureSelector<ExpensesState>('expenses');\n\nexport const getExpenses = createSelector(\n  getExpensesState,\n  expenses => expenses.expenses\n);\n\nexport const getIsLoading = createSelector(\n  getExpensesState,\n  expenses => expenses.isLoading\n);\n\nexport const getError = createSelector(\n  getExpensesState,\n  expenses => expenses.error\n);\n","import { Expenses } from '../models/expenses.model';\n\nexport interface ExpensesState {\n    expenses: Expenses[] | null;\n    isLoading: boolean;\n    error: any;\n}\n\nexport const ExpensesInitialState: ExpensesState = {\n    expenses: null,\n    isLoading: true,\n    error: null\n};\n"],"sourceRoot":"webpack:///"}