{"version":3,"sources":["./src/app/donations/containers/donations.component.html","./src/app/donations/containers/donations.component.scss","./src/app/donations/containers/donations.component.ts","./src/app/donations/donations-routing.module.ts","./src/app/donations/donations.module.ts","./src/app/donations/services/donations.service.ts","./src/app/donations/store/donations.actions.ts","./src/app/donations/store/donations.effects.ts","./src/app/donations/store/donations.reducer.ts","./src/app/donations/store/donations.selectors.ts","./src/app/donations/store/donations.state.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,gXAAiT,yCAAyC,oEAAoE,8CAA8C,iCAAiC,4BAA4B,eAAe,0BAA0B,+CAA+C,0BAA0B,uiCAAuiC,gCAAgC,wGAAwG,gCAAgC,GAAG,6BAA6B,qdAAqd,gCAAgC,uXAAuX,MAAM,uYAAuY,mCAAmC,mfAAmf,wCAAwC,8GAA8G,wCAAwC,GAAG,6BAA6B,wbAAwb,gCAAgC,gHAAgH,gCAAgC,GAAG,6BAA6B,sYAAsY,gBAAgB,00BAA00B,YAAY,yLAAyL,kCAAkC,iKAAiK,kXAAkX,kCAAkC,GAAG,6BAA6B,kcAAkc,iCAAiC,8LAA8L,sBAAsB,odAAod,iCAAiC,+hCAA+hC,sCAAsC,wGAAwG,sCAAsC,GAAG,6BAA6B,iKAAiK,kCAAkC,2JAA2J,yWAAyW,kCAAkC,GAAG,6BAA6B,qYAAqY,iCAAiC,iMAAiM,sBAAsB,2bAA2b,oCAAoC,+lCAA+lC,gCAAgC,0GAA0G,gCAAgC,GAAG,6BAA6B,6jBAA6jB,gCAAgC,mZAAmZ,MAAM,2iBAA2iB,mCAAmC,0HAA0H,mCAAmC,GAAG,6BAA6B,u8BAAu8B,YAAY,yRAAyR,kCAAkC,6KAA6K,8XAA8X,kCAAkC,GAAG,6BAA6B,+dAA+d,iCAAiC,0MAA0M,sBAAsB,0iBAA0iB,wCAAwC,gcAAgc,iBAAiB,mjBAAmjB,cAAc,uVAAuV,wCAAwC,khBAAkhB,gCAAgC,8KAA8K,6BAA6B,kIAAkI,gCAAgC,yBAAyB,uCAAuC,yBAAyB,kCAAkC,qQAAqQ,cAAc,+DAA+D,oBAAoB,gEAAgE,iCAAiC,0DAA0D,gBAAgB,sCAAsC,mBAAmB,8gBAA8gB,iCAAiC,yPAAyP,cAAc,0EAA0E,gBAAgB,sgBAAsgB,oCAAoC,qOAAqO,cAAc,yBAAyB,oBAAoB,yBAAyB,qBAAqB,yBAAyB,iBAAiB,uDAAuD,gBAAgB,uiBAAuiB,uBAAuB,4CAA4C,kBAAkB,yF;;;;;;;;;;;;ACA/8sB;AAAe,wFAAyB,mCAAmC,GAAG,kBAAkB,kBAAkB,wBAAwB,mCAAmC,GAAG,gBAAgB,uBAAuB,GAAG,aAAa,kBAAkB,4BAA4B,2BAA2B,GAAG,cAAc,yCAAyC,GAAG,mBAAmB,yCAAyC,GAAG,0BAA0B,yCAAyC,iBAAiB,GAAG,gBAAgB,yCAAyC,GAAG,uBAAuB,yCAAyC,iBAAiB,GAAG,6BAA6B,kBAAkB,GAAG,gCAAgC,0BAA0B,GAAG,uCAAuC,kBAAkB,sBAAsB,iBAAiB,GAAG,gDAAgD,6CAA6C,6CAA6C,iBAAiB,qBAAqB,oBAAoB,kBAAkB,GAAG,cAAc,iBAAiB,GAAG,iBAAiB,mBAAmB,kBAAkB,qBAAqB,GAAG,+BAA+B,eAAe,GAAG,gCAAgC,eAAe,uBAAuB,GAAG,+CAA+C,iBAAiB,6BAA6B,KAAK,+BAA+B,kBAAkB,KAAK,gCAAgC,kBAAkB,KAAK,GAAG,gDAAgD,iBAAiB,kCAAkC,KAAK,GAAG,mBAAmB,mCAAmC,GAAG,aAAa,oBAAoB,GAAG,iBAAiB,uBAAuB,gBAAgB,GAAG,wBAAwB,qBAAqB,GAAG,yBAAyB,mBAAmB,gBAAgB,GAAG,+BAA+B,kBAAkB,wBAAwB,oBAAoB,qCAAqC,eAAe,uBAAuB,GAAG,0CAA0C,wBAAwB,GAAG,2CAA2C,gBAAgB,iBAAiB,oBAAoB,qBAAqB,cAAc,uBAAuB,oBAAoB,uBAAuB,WAAW,mBAAmB,6BAA6B,0BAA0B,qBAAqB,8BAA8B,uBAAuB,2BAA2B,sCAAsC,2BAA2B,0BAA0B,GAAG,mDAAmD,8BAA8B,0BAA0B,uBAAuB,GAAG,0DAA0D,kBAAkB,eAAe,gBAAgB,uBAAuB,4BAA4B,uBAAuB,aAAa,cAAc,qCAAqC,GAAG,uEAAuE,mBAAmB,qBAAqB,GAAG,iDAAiD,0BAA0B,GAAG,iDAAiD,kBAAkB,kDAAkD,GAAG,2CAA2C,oBAAoB,oBAAoB,qBAAqB,mBAAmB,cAAc,eAAe,8BAA8B,8BAA8B,8BAA8B,8BAA8B,wCAAwC,GAAG,iDAAiD,mBAAmB,GAAG,2DAA2D,2CAA2C,+BAA+B,yBAAyB,KAAK,GAAG,+BAA+B,+BAA+B,kBAAkB,sBAAsB,KAAK,2CAA2C,kBAAkB,mBAAmB,yBAAyB,KAAK,2CAA2C,sBAAsB,KAAK,GAAG,6CAA6C,mra;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxiI;AACrB;AACJ;AACgC;AACzB;AACL;AACyB;AACM;AAEmC;AACJ;AAC1B;AACd;AAC2B;AAEtB;AACZ;AAGrD,IAAI,MAAM,GAAG,mBAAO,CAAC,+EAAsC,CAAC,CAAC;AAO7D;IAuDE,4BACU,KAAsB,EACtB,YAA6B,EAC7B,gBAAkC,EAClC,UAA+B;QAH/B,UAAK,GAAL,KAAK,CAAiB;QACtB,iBAAY,GAAZ,YAAY,CAAiB;QAC7B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,eAAU,GAAV,UAAU,CAAqB;QAhDzC,wBAAmB,GAAG,EAAE,CAAC;QACzB,oBAAe,GAAO,EAAE,CAAC;QAEzB,iBAAY,GAAG,MAAM,EAAE,CAAC;QACxB,gBAAW,GAAG,MAAM,EAAE,CAAC;QACvB,cAAS,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAC1C,YAAO,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACtC,iBAAY,GAAG,MAAM,EAAE,CAAC;QAExB,cAAS,GAAG,MAAM,EAAE,CAAC;QAIrB,iBAAY,GAAG,MAAM,EAAE,CAAC;QAKxB,aAAQ,GAAQ;YACd,YAAY,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC;YAC3C,IAAI,EAAE,MAAM;YACZ,WAAW,EAAE,mEAAW,CAAC,IAAI;YAC7B,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,EAAE;SACf,CAAC;QACF,gBAAW,GAAiB,IAAI,4CAAO,EAAE,CAAC;QAG1C,cAAS,GAAG,4EAAS,CAAC;QAGtB,uBAAkB,GAAgB,EAAE,CAAC;QACrC,iBAAY,GAAqB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,uEAAe,CAAC,CAAC,CAAC;QAG7E,gBAAW,GAAG;YACZ,KAAK,EAAE,uBAAuB;SAC/B,CAAC;QAYA,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAZD,sBAAI,6CAAa;aAAjB;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACrD,CAAC;;;OAAA;IAYD,2CAAc,GAAd;QACE,IAAI,CAAC,KAAK,GAAG;YACX,YAAY,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC;YAC3C,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,OAAO;YACpB,UAAU,EAAE,OAAO;YACnB,YAAY,EAAE,CAAC;YACf,OAAO,EAAE,OAAO;SACjB;IACH,CAAC;IAED,6CAAgB,GAAhB;QACE,IAAI,CAAC,QAAQ,GAAG;YACd,YAAY,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC;YAC3C,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,mEAAW,CAAC,IAAI;YAC7B,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,CAAC;YACf,OAAO,EAAE,EAAE;SACZ,CAAC;QACF,IAAI,CAAC,uBAAuB,CAAC,mEAAW,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,qCAAQ,GAAR;QAAA,iBA0BC;QAzBC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,wEAAY,CAAC,CAAC,SAAS,CAAC,UAAC,GAAgB;YACzD,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kEAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YAC7C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAC,cAAsB;YACtE,IAAM,SAAS,gBACV,KAAI,CAAC,YAAY,IACpB,aAAa,EAAE,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,EACrD,QAAQ,EAAE,KAAI,CAAC,IAAI,CAAC,WAAW,EAC/B,cAAc,EAAE,cAAc,GAC/B;YACD,KAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,SAAS,CAAC;YACrC,kCAAkC;YAClC,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,wEAAY,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oEAAS,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,wEAA4B,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAE9F,gEAAgE;QAChE,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IAC1D,CAAC;IAED,+CAA+C;IAC/C,oDAAuB,GAAvB,UAAwB,YAAyB;QAC/C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,cAAI,IAAI,qBAC7C,IAAI,IACP,OAAO,EAAE,IAAI,CAAC,EAAE,KAAK,YAAY,IACjC,EAHgD,CAGhD,CAAC,CAAC;QACJ,OAAO,CAAC,GAAG,CAAC,EAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,YAAY,gBAAC,CAAC,CAAC;IAC/D,CAAC;IAED,+CAAkB,GAAlB;QAAA,iBAgBC;QAfC,IAAI,CAAC,UAAU;aACZ,MAAM,CAAC,WAAW,CAAC;aACnB,SAAS,CAAC,UAAC,KAAU;YACpB,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,UAAC,CAAM,EAAE,CAAM;oBAChC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE;wBAC7B,OAAO,CAAC,CAAC,CAAC;qBACX;yBAAM,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAC;wBACnC,OAAO,CAAC,CAAC;qBACV;oBACD,OAAO,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC,UAAC,IAAS,IAAK,WAAI,CAAC,YAAY,EAAjB,CAAiB,CAAC,CAAC;aAClE;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAa,GAAb,UAAc,YAAiB;QAC7B,OAAO,YAAY,CAAC,IAAI,CAAC,UAAC,QAAa,IAAK,eAAQ,CAAC,IAAI,KAAK,OAAO,EAAzB,CAAyB,CAAC;IACxE,CAAC;IACD,6CAAgB,GAAhB,UAAiB,YAAiB;QAChC,OAAO,YAAY,CAAC,IAAI,CAAC,UAAC,QAAa,IAAK,eAAQ,CAAC,IAAI,KAAK,UAAU,EAA5B,CAA4B,CAAC;IAC3E,CAAC;IAED,wCAAW,GAAX,UAAY,IAAS;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,0CAAa,GAAb,UAAc,IAAS;QACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IACzD,CAAC;IAED,0CAAa,GAAb,UAAc,IAAS;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IACtD,CAAC;IAED,2CAAc,GAAd,UAAe,IAAS;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IACzD,CAAC;IAED,uCAAU,GAAV,UAAW,IAAS;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,wEAA4B,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACnF,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,mCAAM,GAAN;QAAA,iBAiCC;QAhCC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,eAAe,gBAChB,IAAI,CAAC,QAAQ,IAChB,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAC1E;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,2EAA+B,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,UAAU;aACZ,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;aAC7C,SAAS,CAAC,UAAC,IAAI;YACd,IAAI,CAAC,IAAI,EAAE;gBACT,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE;oBAC/B,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI;oBACpC,SAAS,EAAE,CAAC;iBACb,CAAC,CAAC,SAAS,CAAC,UAAC,KAAU;oBACtB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;gBACrC,CAAC,EAAE,CAAC,UAAC,KAAU;oBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,EAClC;oBACE,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI;oBACpC,SAAS,EAAG,IAAY,CAAC,SAAS,GAAG,CAAC;iBACvC,EAAG,IAAY,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,KAAU;oBACzC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;gBACrC,CAAC,EAAE,CAAC,UAAC,KAAU;oBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,yCAAY,GAAZ;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,2EAA+B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAGD,2CAAc,GAAd;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,2EAA+B,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,2CAAc,GAAd;QACE,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;YACjE,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,UAAC,IAAI,EAAE,OAAY,IAAK,QAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,EAAxB,CAAwB,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9F;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,uCAAU,GAAV,UAAW,IAAY;QACrB,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC3E,CAAC;IACD,+CAAkB,GAAlB,UAAmB,IAAY;QAC7B,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC3E,CAAC;IAED,4CAAe,GAAf;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,kDAAkD;QAClD,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,MAAM,EAAE,CAAC;IAC5B,CAAC;IAED,8CAAiB,GAAjB;QACE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,wDAAwD;QACxD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,MAAM,EAAE,CAAC;IAC/B,CAAC;IAED,sCAAS,GAAT;QACE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,oDAAoD;QACpD,IAAI,CAAC,QAAQ,GAAG;YACd,YAAY,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC;YAC3C,IAAI,EAAE,MAAM;YACZ,WAAW,EAAE,mEAAW,CAAC,IAAI;YAC7B,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,EAAE;SACf;QACD,IAAI,CAAC,uBAAuB,CAAC,mEAAW,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,MAAM,EAAE,CAAC;IAC/B,CAAC;IAED,qCAAQ,GAAR,UAAS,IAAe;QAAxB,iBAaC;QAZC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CACpC,qHAAqB,EACrB,IAAI,CAAC,WAAW,CACjB,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;aAC/B,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,UAAC,YAAqB;YAC/B,IAAI,YAAY,EAAE;gBAChB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0EAA8B,CAAC,IAAI,CAAC,CAAC,CAAC;aAC/D;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;gBA3OgB,iDAAK;gBACE,oEAAe;gBACX,6EAAgB;gBACtB,mEAAmB;;IA1DI;QAA5C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCAAe,qDAAM;4DAAC;IACxB;QAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCAAY,qDAAM;yDAAC;IACf;QAA5C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCAAe,qDAAM;4DAAC;IACvB;QAA1C,+DAAS,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCAAa,qGAAgB;0DAAC;IAJ7D,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,oMAAyC;;SAE1C,CAAC;yCAyDiB,iDAAK;YACE,oEAAe;YACX,6EAAgB;YACtB,mEAAmB;OA3D9B,kBAAkB,CAqS9B;IAAD,yBAAC;CAAA;AArS8B;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BU;AACc;AACe;AAEtE,IAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kFAAkB,EAAE,CAAC,CAAC;AAMrE;IAAA;IAAsC,CAAC;IAA1B,sBAAsB;QAJlC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,sBAAsB,CAAI;IAAD,6BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVM;AACM;AAEqB;AACE;AACzB;AAC6G;AAE/F;AACjB;AACI;AACe;AACZ;AACM;AAuBvD;IAAA;IAA+B,CAAC;IAAnB,eAAe;QArB3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,gFAAsB;gBACtB,gEAAW;gBACX,0DAAW;gBACX,kEAAa;gBACb,yEAAoB;gBACpB,iEAAY;gBACZ,gEAAW;gBACX,gEAAW;gBACX,gEAAW;gBACX,6DAAU;gBACV,mEAAY;gBACZ,gEAAW;gBACX,uDAAW,CAAC,UAAU,CAAC,WAAW,EAAE,yEAA8B,CAAC;gBACnE,2DAAa,CAAC,UAAU,CAAC,CAAC,yEAAgB,CAAC,CAAC;aAC7C;YACD,YAAY,EAAE,CAAC,kFAAkB,CAAC;YAClC,OAAO,EAAE,CAAC,kFAAkB,CAAC;SAC9B,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCe;AAER;AACwB;AACT;AAKlD;IAIE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,sBAAiB,GAAG,IAAI,4CAAO,EAAU,CAAC;QAC3C,qBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;IAExB,CAAC;IAEzC,sBAAI,oCAAM;aAAV;YACE,OAAO,KAAK,CAAC;QACf,CAAC;;;OAAA;IACD,0CAAe,GAAf,UAAgB,cAAsB;QACpC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC9C,CAAC;IAED,uCAAY,GAAZ,UAAa,SAAoB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAChB,wEAAW,CAAC,MAAM,qBAAkB,eAClC,SAAS,EACf,CAAC;IACJ,CAAC;IAED,8BAAG,GAAH,UAAI,OAAY;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,wEAAW,CAAC,MAAM,uBAAoB,EACzC;YACE,MAAM,EAAE;gBACR,cAAc,EAAE,OAAO,CAAC,OAAO;aAC9B;SACF,CACF,CAAC;IACJ,CAAC;IAED,iCAAM,GAAN,UAAO,QAAmB,EAAE,MAAc;QACxC,OAAO,+CAAE,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;IAEhC,CAAC;IAED,yCAAc,GAAd,UAAe,OAAuB;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAChB,wEAAW,CAAC,MAAM,wBAAqB,eACrC,OAAO,EAEb,CAAC;IACJ,CAAC;;gBAtCyB,+DAAU;;IAJzB,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAJzB,gBAAgB,CA2C5B;IAAD,uBAAC;CAAA;AA3C4B;;;;;;;;;;;;;;;;;;;;;;;;ACN7B,IAAY,oBASX;AATD,WAAY,oBAAoB;IAC9B,6DAAqC;IACrC,gEAAwC;IAExC,iEAAyC;IACzC,+DAAuC;IACvC,iEAAyC;IAEzC,6DAAqC;AACvC,CAAC,EATW,oBAAoB,KAApB,oBAAoB,QAS/B;AAED;IAGE,wBAAmB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;QAFhC,SAAI,GAAG,oBAAoB,CAAC,eAAe,CAAC;IAET,CAAC;IAC/C,qBAAC;AAAD,CAAC;;AAED;IAGE,yBAAmB,OAAmC;QAAnC,YAAO,GAAP,OAAO,CAA4B;QAF7C,SAAI,GAAG,oBAAoB,CAAC,gBAAgB,CAAC;IAEG,CAAC;IAC5D,sBAAC;AAAD,CAAC;;AAED;IAGE,2BAAmB,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;QAF3C,SAAI,GAAG,oBAAoB,CAAC,mBAAmB,CAAC;IAEF,CAAC;IAC1D,wBAAC;AAAD,CAAC;;AAED;IAGE,yBAAmB,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;QAF3C,SAAI,GAAG,oBAAoB,CAAC,gBAAgB,CAAC;IAEC,CAAC;IAC1D,sBAAC;AAAD,CAAC;;AAED;IAGE,0BAAmB,OAAkB;QAAlB,YAAO,GAAP,OAAO,CAAW;QAF5B,SAAI,GAAG,oBAAoB,CAAC,iBAAiB,CAAC;IAEf,CAAC;IAC3C,uBAAC;AAAD,CAAC;;AAED;IAGE,wBAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAFjC,SAAI,GAAG,oBAAoB,CAAC,eAAe,CAAC;IAER,CAAC;IAChD,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChD0C;AACa;AACS;AACN;AACiB;AAEvB;AAC3B;AACkB;AAEc;AAE1D,IAAI,MAAM,GAAG,mBAAO,CAAC,+EAAsC,CAAC,CAAC;AAE7D;IAEE,0BAAoB,QAAiB,EAAU,gBAAkC,EAAU,KAAsB;QAAjH,iBAAqH;QAAjG,aAAQ,GAAR,QAAQ,CAAS;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAiB;QAIjH,WAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CACzB,4DAAM,CAAC,uEAAoB,CAAC,eAAe,CAAC,EAC5C,gEAAS,CAAC,UAAC,OAAY,IAAK,YAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC;aAC3D,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;YACZ,OAAO,CAAC,IAAI,kEAA6B,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAC/E,CAAC,CAAC,EACF,iEAAU,CAAC,eAAK;YACd,OAAO,+CAAE,CAAC,IAAI,iEAA4B,CAAC,EAAE,KAAK,SAAE,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CACH,EARyB,CAQzB,CACF,CACF,CAAC;QAGF,WAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CACzB,4DAAM,CAAC,uEAAoB,CAAC,mBAAmB,CAAC,EAChD,0DAAG,CAAC,UAAC,MAAuC,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EAChE,gEAAS,CAAC,UAAC,OAAY,IAAK,YAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,OAAO,CAAC;aACtE,IAAI,CACH,CAAC,0DAAG,CAAC,UAAC,QAAa;YACjB,KAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAC/D,OAAO,CAAC,IAAI,iEAA4B,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC,EACH,iEAAU,CAAC,eAAK;YACd,OAAO,+CAAE,CAAC,IAAI,iEAA4B,CAAC,EAAE,KAAK,SAAE,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CACH,EAT2B,CAS3B,CAAC,CACH,CAAC;QAGF,UAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CACxB,4DAAM,CAAC,uEAAoB,CAAC,gBAAgB,CAAC,EAC7C,0DAAG,CAAC,UAAC,MAAqC,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EAC9D,qEAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,kEAAO,CAAC,CAAC,CAAC,EAChD,gEAAS,CAAC,UAAC,EAAoB;gBAAnB,eAAO,EAAE,YAAI;YAAW,YAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC;iBACnG,IAAI,CACH,iEAAU,CAAE,eAAK;gBACjB,OAAO,+CAAE,CAAC,IAAI,iEAA4B,CAAC,EAAE,KAAK,SAAE,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;QAJiC,CAIjC,CACF,CACF,CAAC;QAGF,YAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC1B,4DAAM,CAAC,uEAAoB,CAAC,iBAAiB,CAAC,EAC9C,0DAAG,CAAC,UAAC,MAAsC,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,EAC/D,qEAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,kEAAO,CAAC,CAAC,CAAC,EAChD,gEAAS,CAAC,UAAC,EAAc;gBAAb,eAAO;YAAW,YAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC,YAAY,EAAC,CAAC;iBAC3H,IAAI,CACH,CAAC,0DAAG,CAAC;gBACH,OAAO,CAAC,IAAI,iEAA4B,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC3E,CAAC,CAAC,CAAC,EACH,iEAAU,CAAC,eAAK;gBACd,OAAO,+CAAE,CAAC,IAAI,iEAA4B,CAAC,EAAE,KAAK,SAAE,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CACH;QAR6B,CAQ7B,CAAC,CACH,CAAC;IA7DkH,CAAC;;gBAAvF,qDAAO;gBAA4B,4EAAgB;gBAAiB,iDAAK;;IAIvG;QADC,4DAAM,EAAE;;oDAaP;IAGF;QADC,4DAAM,EAAE;;oDAcP;IAGF;QADC,4DAAM,EAAE;;mDAWP;IAGF;QADC,4DAAM,EAAE;;qDAcP;IA/DS,gBAAgB;QAD5B,gEAAU,EAAE;yCAGmB,qDAAO,EAA4B,4EAAgB,EAAiB,iDAAK;OAF5F,gBAAgB,CAgE5B;IAAD,uBAAC;CAAA;AAhE4B;;;;;;;;;;;;;;;;;;;;ACd6C;AACG;AAEtE,SAAS,gBAAgB,CAAC,KAA6B,EAAE,MAAwB;IAAvD,gCAAQ,sEAAqB;IAC5D,QAAQ,MAAM,CAAC,IAAI,EAAE;QAEnB,KAAK,uEAAoB,CAAC,eAAe,CAAC,CAAC;YACzC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE;gBAC9B,SAAS,EAAE,IAAI;aAChB,CAAC,CAAC;SACJ;QACD,KAAK,uEAAoB,CAAC,mBAAmB,CAAC,CAAC;YAC7C,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE;gBAC9B,SAAS,EAAE,IAAI;aAChB,CAAC,CAAC;SACJ;QAED,KAAK,uEAAoB,CAAC,gBAAgB,CAAC,CAAC;YAC1C,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE;gBAC9B,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS;gBACnC,SAAS,EAAE,KAAK;aACjB,CAAC,CAAC;SACJ;QAED,KAAK,uEAAoB,CAAC,eAAe,CAAC,CAAC;YACzC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE;gBAC9B,SAAS,EAAE,KAAK;gBAChB,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,KAAK;aAC5B,CAAC,CAAC;SACJ;QAED;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;AClCmE;AAG7D,IAAM,iBAAiB,GAAG,yEAAqB,CAAiB,WAAW,CAAC,CAAC;AAE7E,IAAM,YAAY,GAAG,kEAAc,CACxC,iBAAiB,EACjB,mBAAS,IAAI,gBAAS,CAAC,SAAS,EAAnB,CAAmB,CACjC,CAAC;AAEK,IAAM,YAAY,GAAG,kEAAc,CACxC,iBAAiB,EACjB,mBAAS,IAAI,gBAAS,CAAC,SAAS,EAAnB,CAAmB,CACjC,CAAC;AAEK,IAAM,QAAQ,GAAG,kEAAc,CACpC,iBAAiB,EACjB,mBAAS,IAAI,gBAAS,CAAC,KAAK,EAAf,CAAe,CAC7B,CAAC;;;;;;;;;;;;;;;;;;ACVK,IAAM,qBAAqB,GAAmB;IACjD,SAAS,EAAE,EAAE;IACb,SAAS,EAAE,IAAI;IACf,KAAK,EAAE,IAAI;CACd,CAAC","file":"donations-donations-module.js","sourcesContent":["export default \"<app-split-body [isLoading$]=\\\"!isLoading$\\\">\\n  <div class=\\\"left-section\\\">\\n    <mdb-card>\\n      <mdb-card-header class=\\\"w-100 d-flex justify-space-between bg-primary white-text\\\">\\n        <div>\\n          <blockquote class=\\\"text-left  blockquote bq-success\\\">\\n            <h3 class=\\\"header\\\">{{\\\"DONATIONS.Add_Donations\\\" | translate}}</h3>\\n            <p class=\\\"py-0\\\" *ngIf=\\\"donationForm.valid\\\">{{\\\"DONATIONS.Add_Donations_Desc\\\" | translate}} <span class=\\\"price\\\">&#x20B9;{{donationForm?.value.amount}}</span> from {{donationForm?.value.name}} <span *ngIf=\\\"donationForm?.value.item\\\">as {{donationForm?.value.item}}</span></p>\\n          </blockquote>\\n        </div>\\n        <button mdbWavesEffect mdbBtn type=\\\"button\\\" rounded=\\\"true\\\" color=\\\"white\\\" class=\\\"pull-right text-lg btn-primary\\\" rrDatePicker [date]=\\\"donationDate\\\" [endDate]=\\\"endDate\\\" [startDate]=\\\"startDate\\\"\\n        header=\\\"Select Date\\\" (dateSelected)=\\\"donDatePicked($event)\\\">\\n        <mdb-icon fas icon=\\\"calendar-alt mr-2\\\" size=\\\"lg\\\" class=\\\"calendar\\\" alt=\\\"date\\\"></mdb-icon> <span appDateTransform [date]=\\\"donationDate.format('YYYY-MM-DD')\\\"></span>\\n      </button>\\n      </mdb-card-header>\\n      <mdb-card-body class=\\\"py-2\\\">\\n        <form #donationForm=\\\"ngForm\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-body\\\">\\n            <div class=\\\"left-section\\\">\\n                <div class=\\\"md-form\\\">\\n                  <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"donation.name\\\" mdbInput mdbValidate\\n                    [validateSuccess]=\\\"false\\\" #name=\\\"ngModel\\\" required>\\n                  <label for=\\\"name\\\">{{\\\"DONATIONS.Name\\\" | translate}}</label>\\n                  <mdb-error *ngIf=\\\"name && name.invalid && (name.dirty || name.touched)\\\">{{\\\"DONATIONS.Name\\\" | translate}} {{\\\"is_required\\\" | translate}}</mdb-error>\\n                </div>\\n\\n                <div class=\\\"btn-toolbar star-container\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\n                  <div class=\\\"md-form hidden\\\">\\n                    <input type=\\\"text\\\" id=\\\"star\\\" name=\\\"star\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"donation.nakshatram\\\" mdbInput mdbValidate\\n                      [validateSuccess]=\\\"false\\\" #star=\\\"ngModel\\\">\\n                    <label for=\\\"star\\\">{{\\\"DONATIONS.Star\\\" | translate}}</label>\\n                  </div>\\n                  <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n                      <button (click)=\\\"selectStar(star)\\\"\\n                      *ngFor=\\\"let star of starSigns\\\" mdbBtn type=\\\"button\\\" color=\\\"warning\\\" [class.selected]=\\\"star === donation.nakshatram\\\"\\n                       mdbWavesEffect>{{star}}</button>\\n                  </div>\\n                </div>\\n                <div class=\\\"md-form\\\">\\n                  <textarea type=\\\"text\\\" id=\\\"address\\\" name=\\\"address\\\" class=\\\"md-textarea form-control\\\" #address=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"donation.address\\\" mdbInput mdbValidate [validateSuccess]=\\\"false\\\"></textarea>\\n                  <label for=\\\"address\\\">{{\\\"DONATIONS.Address\\\" | translate}}</label>\\n                </div>\\n\\n\\n            </div>\\n            <div class=\\\"right-section\\\">\\n              <mdb-card class=\\\"text-center\\\">\\n                <mdb-card-body>\\n                  <div class=\\\"md-form phone\\\">\\n                    <input type=\\\"number\\\" id=\\\"phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\" #phone=\\\"ngModel\\\" [(ngModel)]=\\\"donation.phone_number\\\" mdbInput mdbValidate\\n                      [validateSuccess]=\\\"false\\\">\\n                    <label for=\\\"phone\\\">{{\\\"DONATIONS.Phone_Number\\\" | translate}}</label>\\n                    <mdb-error *ngIf=\\\"phone && phone.invalid && (phone.dirty || phone.touched)\\\">{{\\\"DONATIONS.Phone_Number\\\" | translate}} {{\\\"is_required\\\" | translate}}</mdb-error>\\n                  </div>\\n                  <!-- <div class=\\\"d-flex d-flex-col-md align-items-start\\\">\\n                    <div class=\\\"md-form w-50\\\">\\n                      <input type=\\\"text\\\" id=\\\"item\\\" name=\\\"item\\\" class=\\\"form-control\\\" #phone=\\\"ngModel\\\" [(ngModel)]=\\\"donation.item\\\" mdbInput mdbValidate\\n                        [validateSuccess]=\\\"false\\\" required>\\n                      <label for=\\\"phone\\\">{{\\\"DONATIONS.Item\\\" | translate}}</label>\\n                      <mdb-error *ngIf=\\\"phone && phone.invalid && (phone.dirty || phone.touched)\\\">{{\\\"DONATIONS.item\\\" | translate}} {{\\\"is_required\\\" | translate}}</mdb-error>\\n                    </div>\\n                    <div class=\\\"suggestion-container\\\" *ngIf=\\\"frequentItems?.length\\\">\\n                      <mdb-badge class=\\\"cursor-pointer mr-1 p-2\\\" *ngFor=\\\"let donationItem of frequentItems\\\" pill=\\\"true\\\" [info]=\\\"donation?.item !== donationItem\\\" [success]=\\\"donation?.item === donationItem\\\" (click)=\\\"donation.item = donationItem\\\">{{ donationItem }}</mdb-badge>\\n                    </div>\\n                  </div> -->\\n\\n                  <div class=\\\"amount payment-type-radio mt-4\\\" id=\\\"donation_payment_type_radio\\\">\\n                    <div *ngFor=\\\"let type of paymentTypes\\\">\\n                      <input\\n                        type=\\\"radio\\\"\\n                        class=\\\"form-check-input\\\"\\n                        name=\\\"donation_options\\\"\\n                        [id]=\\\"'donation_' + type.id\\\"\\n                        [checked]=\\\"type.checked\\\"\\n                        [(ngModel)]=\\\"donation.description\\\"\\n                        [value]=\\\"type.id\\\"\\n                        (ngModelChange)=\\\"updatePaymentTypeStates($event)\\\"\\n                        autocomplete=\\\"off\\\" />\\n                      <label class=\\\"form-check-label\\\" [for]=\\\"'donation_' + type.id\\\">{{type.label}}</label>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"text-lg mt-4 amount\\\">\\n                    <label for=\\\"amount\\\" class=\\\"grey-text\\\">{{\\\"DONATIONS.Amount\\\" | translate}}</label>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <span class=\\\"d-flex\\\">\\n                        <span class=\\\"price\\\">&#x20B9;</span>\\n                        <input type=\\\"number\\\" class=\\\"form-control price\\\" id=\\\"amount\\\" name=\\\"amount\\\" [(ngModel)]=\\\"donation.amount\\\" #amount=\\\"ngModel\\\" mdbValidate [validateSuccess]=\\\"false\\\" required>\\n                      </span>\\n                      <mdb-error class=\\\"ml-3\\\" *ngIf=\\\"amount && amount.invalid && (amount.dirty || amount.touched)\\\">{{\\\"DONATIONS.Amount\\\" | translate}} {{\\\"is_required\\\" | translate}}</mdb-error>\\n                    </div>\\n                  </div>\\n                </mdb-card-body>\\n              </mdb-card>\\n            </div>\\n          </div>\\n\\n\\n        </div>\\n      </form>\\n      </mdb-card-body>\\n      <mdb-card-footer class=\\\"modal-footer\\\">\\n          <div class=\\\"d-flex\\\">\\n            <button type=\\\"button\\\" mdbBtn class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"resetForm()\\\"\\n              mdbWavesEffect>{{\\\"DONATIONS.Clear\\\" | translate}}</button>\\n            <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" [disabled]=\\\"donationForm.invalid\\\" class=\\\"relative waves-light\\\"\\n            mdbWavesEffect (click)=\\\"onSave()\\\">{{\\\"Save\\\" | translate}}</button>\\n            <app-printer #appPrinter [type]=\\\"'donation'\\\" [hidden]=\\\"true\\\"></app-printer>\\n          </div>\\n      </mdb-card-footer>\\n    </mdb-card>\\n\\n    <!-- vanji items ******************-->\\n    <mdb-card class=\\\"my-4\\\">\\n      <mdb-card-header class=\\\"w-100 d-flex justify-space-between bg-primary white-text vanji-row header\\\">\\n        <div>\\n          <blockquote class=\\\"text-left  blockquote bq-success\\\">\\n            <h3 class=\\\"header\\\">{{\\\"DONATIONS.Vanji\\\" | translate}}</h3>\\n          </blockquote>\\n        </div>\\n        <button mdbWavesEffect mdbBtn type=\\\"button\\\" rounded=\\\"true\\\" color=\\\"white\\\" class=\\\"pull-right text-lg btn-primary\\\" rrDatePicker [date]=\\\"vanjiDate\\\" [endDate]=\\\"defaultDate\\\" [startDate]=\\\"startDate\\\"\\n        header=\\\"Select Date\\\" (dateSelected)=\\\"incDatePicked($event)\\\">\\n        <mdb-icon fas icon=\\\"calendar-alt mr-2\\\" size=\\\"lg\\\" class=\\\"calendar\\\" alt=\\\"date\\\"></mdb-icon> <span appDateTransform [date]=\\\"vanjiDate.format('YYYY-MM-DD')\\\"></span>\\n      </button>\\n      </mdb-card-header>\\n      <mdb-card-body class=\\\"py-2\\\">\\n        <form #vanjiForm=\\\"ngForm\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-body\\\">\\n            <div class=\\\"left-section\\\">\\n                <div class=\\\"md-form w-100\\\">\\n                  <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vanji.name\\\" mdbInput mdbValidate\\n                    [validateSuccess]=\\\"false\\\" #name=\\\"ngModel\\\" required>\\n                  <label for=\\\"name\\\">{{\\\"DONATIONS.Vanji_Name\\\" | translate}}</label>\\n                  <mdb-error *ngIf=\\\"name && name.invalid && (name.dirty || name.touched)\\\">{{\\\"DONATIONS.Vanji_Name\\\" | translate}} {{\\\"is_required\\\" | translate}}</mdb-error>\\n                </div>\\n\\n                <div class=\\\"text-lg mt-4 amount w-100\\\">\\n                  <label for=\\\"amount\\\" class=\\\"grey-text\\\">{{\\\"DONATIONS.Amount\\\" | translate}}</label>\\n                  <div class=\\\"md-form mt-0\\\">\\n                    <span class=\\\"d-flex\\\">\\n                      <span class=\\\"price\\\">&#x20B9;</span>\\n                      <input type=\\\"number\\\" class=\\\"form-control price\\\" id=\\\"amount\\\" name=\\\"amount\\\" [(ngModel)]=\\\"vanji.amount\\\" #amount=\\\"ngModel\\\" mdbValidate [validateSuccess]=\\\"false\\\" required>\\n                    </span>\\n                    <mdb-error class=\\\"ml-3\\\" *ngIf=\\\"amount && amount.invalid && (amount.dirty || amount.touched)\\\">{{\\\"DONATIONS.Amount\\\" | translate}} {{\\\"is_required\\\" | translate}}</mdb-error>\\n                  </div>\\n                </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n      </mdb-card-body>\\n      <mdb-card-footer class=\\\"modal-footer\\\">\\n          <div class=\\\"d-flex\\\">\\n            <button type=\\\"button\\\" mdbBtn class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"resetIncomeForm()\\\"\\n              mdbWavesEffect>{{\\\"DONATIONS.Clear\\\" | translate}}</button>\\n            <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" [disabled]=\\\"vanjiForm.invalid\\\" class=\\\"relative waves-light\\\"\\n            mdbWavesEffect (click)=\\\"onIncomeSave()\\\">{{\\\"Save\\\" | translate}}</button>\\n          </div>\\n      </mdb-card-footer>\\n    </mdb-card>\\n    <!-- vanji items END ******************-->\\n\\n\\n      <!-- festival items ******************-->\\n      <mdb-card class=\\\"my-4\\\">\\n        <mdb-card-header class=\\\"w-100 d-flex justify-space-between bg-primary white-text festival-row header\\\">\\n          <div>\\n            <blockquote class=\\\"text-left  blockquote bq-success\\\">\\n              <h3 class=\\\"header\\\">{{\\\"DONATIONS.Festival\\\" | translate}}</h3>\\n            </blockquote>\\n          </div>\\n          <button mdbWavesEffect mdbBtn type=\\\"button\\\" rounded=\\\"true\\\" color=\\\"white\\\" class=\\\"pull-right text-lg btn-primary\\\" rrDatePicker [date]=\\\"festivalDate\\\" [endDate]=\\\"defaultDate\\\" [startDate]=\\\"startDate\\\"\\n          header=\\\"Select Date\\\" (dateSelected)=\\\"festDatePicked($event)\\\">\\n          <mdb-icon fas icon=\\\"calendar-alt mr-2\\\" size=\\\"lg\\\" class=\\\"calendar\\\" alt=\\\"date\\\"></mdb-icon> <span appDateTransform [date]=\\\"festivalDate.format('YYYY-MM-DD')\\\"></span>\\n        </button>\\n        </mdb-card-header>\\n        <mdb-card-body class=\\\"py-2\\\">\\n          <form #festivalForm=\\\"ngForm\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body\\\" style=\\\"min-height: 400px\\\">\\n              <div class=\\\"w-100\\\">\\n                  <div class=\\\"md-form w-100\\\">\\n                    <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"festival.name\\\" mdbInput mdbValidate\\n                    [validateSuccess]=\\\"false\\\" #name=\\\"ngModel\\\" required>\\n                    <label for=\\\"name\\\">{{\\\"DONATIONS.Name\\\" | translate}}</label>\\n                    <mdb-error *ngIf=\\\"name && name.invalid && (name.dirty || name.touched)\\\">{{\\\"DONATIONS.Name\\\" | translate}} {{\\\"is_required\\\" | translate}}</mdb-error>\\n                  </div>\\n\\n                  <div class=\\\"md-form w-100\\\">\\n                    <div class=\\\"btn-toolbar star-container\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\n                      <div class=\\\"md-form hidden\\\">\\n                        <input type=\\\"text\\\" id=\\\"festival_star\\\" name=\\\"festival_star\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"festival.nakshatram\\\" mdbInput mdbValidate\\n                          [validateSuccess]=\\\"false\\\" #nakshatram=\\\"ngModel\\\">\\n                        <label for=\\\"festival_star\\\">{{\\\"DONATIONS.Star\\\" | translate}}</label>\\n                      </div>\\n                      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\n                          <button (click)=\\\"selectfestivalStar(star)\\\"\\n                          *ngFor=\\\"let star of starSigns\\\" mdbBtn type=\\\"button\\\" color=\\\"warning\\\" [class.selected]=\\\"star === festival.nakshatram\\\"\\n                           mdbWavesEffect>{{star}}</button>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"row w-100 d-flex align-items-end\\\">\\n                    <div class=\\\"col-md-4 \\\">\\n                      <div class=\\\"md-form w-100\\\">\\n                        <input type=\\\"text\\\" id=\\\"address\\\" name=\\\"festival_address\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"festival.address\\\" mdbInput mdbValidate\\n                          [validateSuccess]=\\\"false\\\" #address=\\\"ngModel\\\">\\n                        <label for=\\\"address\\\">{{\\\"DONATIONS.Address\\\" | translate}}</label>\\n                        <mdb-error *ngIf=\\\"address && address.invalid && (address.dirty || address.touched)\\\">{{\\\"DONATIONS.Address\\\" | translate}} {{\\\"is_required\\\" | translate}}</mdb-error>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-md-4 text-sm mb-3\\\">\\n                      <div class=\\\"amount payment-type-radio\\\" id=\\\"payment_type_radio\\\">\\n                        <div *ngFor=\\\"let type of paymentTypes\\\">\\n                          <input\\n                            type=\\\"radio\\\"\\n                            class=\\\"form-check-input form-control\\\"\\n                            name=\\\"options\\\"\\n                            [id]=\\\"type.id\\\"\\n                            [checked]=\\\"type.checked\\\"\\n                            [(ngModel)]=\\\"festival.description\\\"\\n                            [value]=\\\"type.id\\\"\\n                            (ngModelChange)=\\\"updatePaymentTypeStates($event)\\\"\\n                            #description=\\\"ngModel\\\"\\n                            autocomplete=\\\"off\\\" />\\n                          <label class=\\\"form-check-label\\\" [for]=\\\"type.id\\\">{{type.label}}</label>\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-md-4\\\">\\n                      <div class=\\\"text-lg mt-4 amount w-100\\\">\\n                        <label for=\\\"amount\\\" class=\\\"grey-text\\\">{{\\\"DONATIONS.Amount\\\" | translate}}</label>\\n                        <div class=\\\"md-form mt-0\\\">\\n                          <span class=\\\"d-flex\\\">\\n                            <span class=\\\"price\\\">&#x20B9;</span>\\n                            <input type=\\\"number\\\" class=\\\"form-control price\\\" id=\\\"amount\\\" name=\\\"amount\\\" [(ngModel)]=\\\"festival.amount\\\" #amount=\\\"ngModel\\\" mdbValidate [validateSuccess]=\\\"false\\\" required>\\n                          </span>\\n                          <mdb-error class=\\\"ml-3\\\" *ngIf=\\\"amount && amount.invalid && (amount.dirty || amount.touched)\\\">{{\\\"DONATIONS.Amount\\\" | translate}} {{\\\"is_required\\\" | translate}}</mdb-error>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n\\n\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n        </mdb-card-body>\\n        <mdb-card-footer class=\\\"modal-footer\\\">\\n            <div class=\\\"d-flex\\\">\\n              <button type=\\\"button\\\" mdbBtn class=\\\"waves-light\\\" aria-label=\\\"Close\\\" (click)=\\\"resetFestivalForm()\\\"\\n                mdbWavesEffect>{{\\\"DONATIONS.Clear\\\" | translate}}</button>\\n              <button type=\\\"button\\\" mdbBtn color=\\\"success\\\" [disabled]=\\\"festivalForm.invalid\\\" class=\\\"relative waves-light\\\"\\n              mdbWavesEffect (click)=\\\"onFestivalSave()\\\">{{\\\"Save\\\" | translate}}</button>\\n            </div>\\n        </mdb-card-footer>\\n      </mdb-card>\\n      <!-- festival items END ******************-->\\n\\n  </div>\\n  <div class=\\\"right-section\\\">\\n    <app-right-card [header]=\\\"'Todays Donations'\\\" >\\n      <div class=\\\"card-header bg-primary white-text\\\">\\n        <span class=\\\"icon-button\\\" (click)=\\\"prevDate()\\\">\\n          <mdb-icon *ngIf=\\\"isManager$ | async\\\" fas icon=\\\"chevron-left\\\" class=\\\"ml-1 float-left delete cursor-pointer white-text\\\" alt=\\\"Left\\\"></mdb-icon>\\n        </span>\\n        <span>\\n          {{\\\"DONATIONS.Donations_on\\\" | translate}}\\n          <button [disabled]=\\\"!(isManager$ | async)\\\" mdbWavesEffect mdbBtn type=\\\"button\\\" rounded=\\\"true\\\" color=\\\"white\\\" class=\\\"pull-right text-lg btn-primary\\\" rrDatePicker [date]=\\\"defaultDate\\\" [endDate]=\\\"defaultDate\\\"\\n          (click)=\\\"dateClicked($event)\\\" header=\\\"Select Date\\\" (dateSelected)=\\\"datePicked($event)\\\">\\n            <mdb-icon fas icon=\\\"calendar-alt mr-2\\\" size=\\\"lg\\\" class=\\\"calendar\\\" alt=\\\"date\\\"></mdb-icon> {{ formattedDate }}\\n          </button>\\n        </span>\\n        <span class=\\\"icon-button\\\" (click)=\\\"nextDate()\\\">\\n          <mdb-icon *ngIf=\\\"(isManager$ | async) && selectedDate.format('DD/MM/YYYY') !== defaultDate.format('DD/MM/YYYY')\\\" mdbtn fas icon=\\\"chevron-right\\\" class=\\\"ml-1 float-right delete cursor-pointer white-text\\\" alt=\\\"Right\\\"></mdb-icon>\\n        </span>\\n      </div>\\n      <div *ngIf=\\\"isLoading$ | async\\\" class=\\\"d-flex justify-content-center align-items-center\\\">\\n        <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem;\\\">\\n          <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n      </div>\\n      <table mdbTable small=\\\"true\\\" striped=\\\"true\\\" *ngIf=\\\"!(isLoading$ | async) && todaysDonationList.length > 0\\\">\\n        <thead>\\n          <tr>\\n            <td colspan=\\\"10\\\">\\n              <div class=\\\"d-flex-right\\\">\\n                <span>{{ \\\"SETTINGS.accountType\\\" | translate }}:</span>\\n                <div class=\\\"md-form m-0 w-50 ml-2\\\">\\n                  <select class=\\\"browser-default custom-select form-control py-0 pl-1\\\" type=\\\"select\\\" id=\\\"select_account_type\\\" name=\\\"accountType\\\" [(ngModel)]=\\\"selectedAccountType\\\" mdbSelect mdbValidate [validateSuccess]=\\\"false\\\" #accountType=\\\"ngModel\\\">\\n                    <option value=\\\"\\\" disabled selected hidden>--ALL--</option>\\n                    <option [value]=\\\"accountType.accountType_code\\\" *ngFor=\\\"let accountType of accountTypeList\\\">{{ accountType.accountType_name }}</option>\\n                  </select>\\n                  <mdb-error *ngIf=\\\"accountType && accountType.invalid && (accountType.dirty || accountType.touched)\\\">accountType {{\\\"is_required\\\" | translate}}</mdb-error>\\n              </div>\\n\\n              </div>\\n            </td>\\n          </tr>\\n          <tr>\\n            <th>{{\\\"DONATIONS.Name\\\" | translate}}</th>\\n            <th>{{\\\"DONATIONS.Nakshathram\\\" | translate}}</th>\\n            <th>{{\\\"DONATIONS.Amount\\\" | translate}}</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <ng-container  *ngFor=\\\"let item of todaysDonationList\\\">\\n           <tr *ngIf=\\\"item.item !== 'festival' && item.item !== 'vanji'\\\" >\\n            <td scope=\\\"row\\\">{{ item?.name }}</td>\\n            <td><span *ngIf=\\\"item.item !== 'vanji'\\\">{{ item?.nakshatram }}</span></td>\\n            <td *ngIf=\\\"item.item === 'vanji'\\\">{{\\\"DONATIONS.Vanji\\\" | translate}} T </td>\\n            <td class=\\\"table-price\\\">&#x20B9;{{ item?.amount }} <span *ngIf=\\\"item?.description\\\">({{item?.description}})</span>\\n            </td>\\n            <td *ngIf=\\\"isManager$ | async\\\" class=\\\"d-flex\\\">\\n              <mdb-icon fas icon=\\\"trash\\\" class=\\\"mx-1 delete grey-text\\\" (click)=\\\"onDelete(item)\\\" alt=\\\"Delete\\\"></mdb-icon>\\n              <app-printer [type]=\\\"'donation'\\\" [donation]=\\\"item\\\"></app-printer>\\n            </td>\\n          </tr>\\n        </ng-container>\\n\\n      <ng-container *ngIf=\\\"anyVanjiExist(todaysDonationList)\\\">\\n        <br>\\n        <tr class=\\\"vanji-row header\\\">\\n          <td colspan=\\\"10\\\"><b>{{\\\"DONATIONS.Vanji\\\" | translate}}</b></td>\\n        </tr>\\n      </ng-container>\\n\\n        <ng-container  *ngFor=\\\"let item of todaysDonationList\\\">\\n         <tr *ngIf=\\\"item.item === 'vanji'\\\" class=\\\"vanji-row\\\">\\n          <td scope=\\\"row\\\" colspan=\\\"3\\\" class=\\\"text-left\\\">{{ item?.name }}</td>\\n          <td></td>\\n          <td class=\\\"table-price\\\">&#x20B9;{{ item?.amount }}\\n          </td>\\n          <td *ngIf=\\\"isManager$ | async\\\" class=\\\"d-flex\\\">\\n            <mdb-icon fas icon=\\\"trash\\\" class=\\\"mx-1 delete grey-text\\\" (click)=\\\"onDelete(item)\\\" alt=\\\"Delete\\\"></mdb-icon>\\n            <app-printer [type]=\\\"'donation'\\\" [donation]=\\\"item\\\"></app-printer>\\n          </td>\\n        </tr>\\n      </ng-container>\\n\\n      <ng-container *ngIf=\\\"anyFestivalExist(todaysDonationList)\\\">\\n\\n          <br>\\n          <tr class=\\\"festival-row header\\\">\\n            <td colspan=\\\"10\\\"><b>{{\\\"DONATIONS.Festival\\\" | translate}}</b></td>\\n          </tr>\\n        </ng-container>\\n          <ng-container  *ngFor=\\\"let item of todaysDonationList\\\">\\n           <tr *ngIf=\\\"item.item === 'festival'\\\" class=\\\"festival-row\\\">\\n            <td scope=\\\"row\\\">{{ item?.name }}</td>\\n            <td>{{ item?.nakshatram }}</td>\\n            <td>{{ item?.description }}</td>\\n            <td>{{ item?.address }}</td>\\n            <td class=\\\"table-price\\\">&#x20B9;{{ item?.amount }}\\n            </td>\\n            <td *ngIf=\\\"isManager$ | async\\\" class=\\\"d-flex\\\">\\n              <mdb-icon fas icon=\\\"trash\\\" class=\\\"mx-1 delete grey-text\\\" (click)=\\\"onDelete(item)\\\" alt=\\\"Delete\\\"></mdb-icon>\\n              <app-printer [type]=\\\"'donation'\\\" [donation]=\\\"item\\\"></app-printer>\\n            </td>\\n          </tr>\\n        </ng-container>\\n\\n          <tr>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <div role=\\\"footer\\\" *ngIf=\\\"!(isLoading$ | async)\\\">\\n        <div class=\\\"card-footer text-muted\\\">\\n          {{\\\"Total\\\" | translate}}: <b class=\\\"price total-amount\\\">&#x20B9;{{getTotalAmount()}}</b>\\n        </div>\\n      </div>\\n    </app-right-card>\\n  </div>\\n</app-split-body>\\n\"","export default \".justify-space-between {\\n  justify-content: space-between;\\n}\\n\\n.card-header {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n.card-body {\\n  padding: 0 1.25rem;\\n}\\n\\n.amount {\\n  display: flex;\\n  align-items: flex-start;\\n  flex-direction: column;\\n}\\n\\ntr.vanji {\\n  background-color: #bbdcf1 !important;\\n}\\n\\n.festival-row {\\n  background-color: #a2e8c9 !important;\\n}\\n\\n.festival-row.header {\\n  background-color: #088d51 !important;\\n  color: white;\\n}\\n\\n.vanji-row {\\n  background-color: #a2d1e8 !important;\\n}\\n\\n.vanji-row.header {\\n  background-color: #08618d !important;\\n  color: white;\\n}\\n\\n.star-container .hidden {\\n  display: none;\\n}\\n\\n.star-container .btn-group {\\n  display: inline-block;\\n}\\n\\n.star-container .btn-group button {\\n  padding: 10px;\\n  font-weight: bold;\\n  color: black;\\n}\\n\\n.star-container .btn-group button.selected {\\n  background-color: forestgreen !important;\\n  border: 1px solid forestgreen !important;\\n  color: white;\\n  font-weight: 900;\\n  font-size: 19px;\\n  padding: 10px;\\n}\\n\\n#address {\\n  height: 20px;\\n}\\n\\n.modal-body {\\n  overflow: auto;\\n  display: flex;\\n  max-height: 65vh;\\n}\\n\\n.modal-body .left-section {\\n  width: 50%;\\n}\\n\\n.modal-body .right-section {\\n  width: 50%;\\n  padding: 10px 20px;\\n}\\n\\n@media only screen and (max-width: 768px) {\\n  .modal-body {\\n    flex-direction: column;\\n  }\\n  .modal-body .left-section {\\n    width: 100%;\\n  }\\n  .modal-body .right-section {\\n    width: 100%;\\n  }\\n}\\n\\n@media only screen and (max-height: 500px) {\\n  .modal-body {\\n    max-height: 45vh !important;\\n  }\\n}\\n\\n.modal-footer {\\n  justify-content: space-between;\\n}\\n\\n.delete {\\n  cursor: pointer;\\n}\\n\\n.datepicker {\\n  position: absolute;\\n  right: 20px;\\n}\\n\\n.datepicker button {\\n  font-size: large;\\n}\\n\\n.payment-type-radio {\\n  display: block;\\n  width: 100%;\\n}\\n\\n.payment-type-radio > div {\\n  display: flex;\\n  align-items: center;\\n  padding: 12px 0;\\n  border-bottom: 1px solid #e9ecef;\\n  width: 70%;\\n  position: relative;\\n}\\n\\n.payment-type-radio > div:last-child {\\n  border-bottom: none;\\n}\\n\\n.payment-type-radio .form-check-input {\\n  width: 20px;\\n  height: 20px;\\n  min-width: 20px;\\n  min-height: 20px;\\n  margin: 0;\\n  margin-right: 12px;\\n  cursor: pointer;\\n  position: relative;\\n  top: 0;\\n  flex-shrink: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n  border: 2px solid #dee2e6;\\n  border-radius: 50%;\\n  background-color: #fff;\\n  transition: all 0.15s ease-in-out;\\n  box-sizing: border-box;\\n  display: inline-block;\\n}\\n\\n.payment-type-radio .form-check-input:checked {\\n  background-color: #28a745;\\n  border-color: #28a745;\\n  position: relative;\\n}\\n\\n.payment-type-radio .form-check-input:checked::after {\\n  content: \\\"\\\";\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background-color: white;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n}\\n\\n.payment-type-radio .form-check-input:checked + .form-check-label {\\n  color: #28a745;\\n  font-weight: 600;\\n}\\n\\n.payment-type-radio .form-check-input:hover {\\n  border-color: #28a745;\\n}\\n\\n.payment-type-radio .form-check-input:focus {\\n  outline: none;\\n  box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.25);\\n}\\n\\n.payment-type-radio .form-check-label {\\n  cursor: pointer;\\n  font-size: 14px;\\n  line-height: 1.5;\\n  color: #495057;\\n  margin: 0;\\n  padding: 0;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  transition: color 0.15s ease-in-out;\\n}\\n\\n.payment-type-radio .form-check-label:hover {\\n  color: #28a745;\\n}\\n\\n@media screen and (-webkit-min-device-pixel-ratio: 0) {\\n  .payment-type-radio .form-check-input {\\n    -webkit-appearance: none;\\n    margin-right: 12px;\\n  }\\n}\\n\\n@media (max-width: 768px) {\\n  .payment-type-radio > div {\\n    width: 100%;\\n    padding: 15px 0;\\n  }\\n  .payment-type-radio .form-check-input {\\n    width: 20px;\\n    height: 20px;\\n    margin-right: 15px;\\n  }\\n  .payment-type-radio .form-check-label {\\n    font-size: 16px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { Observable, Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { starSigns } from 'src/app/poojas/models/poojas.model';\nimport { getUser, isManager } from '../../auth/store/auth.selectors';\nimport { AppState } from 'src/app/reducers';\nimport { ConfirmModalComponent } from 'src/app/shared/components/confirm-modal/confirm-modal.component';\nimport { Donations, PAYMENT_OPTIONS, PaymentOptions, PaymentType } from '../models/donations.model';\nimport { getDonations, getIsLoading } from '../store/donations.selectors';\nimport * as fromDonations from '../store/donations.actions';\nimport { PrinterComponent } from 'src/app/shared/components/printer/printer.component';\nimport { User } from 'src/app/auth/models/user.model';\nimport { DonationsService } from '../services/donations.service';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\n\n\nvar moment = require('../../../assets/datepicker/moment.js');\n\n@Component({\n  selector: 'app-donations',\n  templateUrl: './donations.component.html',\n  styleUrls: ['./donations.component.scss']\n})\nexport class DonationsComponent implements OnInit {\n  @ViewChild('donationForm', { static: true }) donationForm: NgForm;\n  @ViewChild('vanjiForm', { static: true }) vanjiForm: NgForm;\n  @ViewChild('festivalForm', { static: true }) festivalForm: NgForm;\n  @ViewChild('appPrinter', { static: true }) appPrinter: PrinterComponent;\n\n\n  isManager$: Observable<boolean>;\n  isLoading$: Observable<boolean>;\n  user: User;\n\n  selectedAccountType = '';\n  accountTypeList:any = [];\n\n  donationDate = moment();\n  defaultDate = moment();\n  startDate = moment().subtract(60, 'days');\n  endDate = moment().add('180', 'days');\n  selectedDate = moment();\n\n  vanjiDate = moment();\n  vanjiCopy: any;\n  vanji: any;\n\n  festivalDate = moment();\n  festivalCopy: any;\n  festival: any;\n\n  donationCopy: any;\n  donation: any = {\n    ist_YYYYMMDD: moment().format('YYYY-MM-DD'),\n    item: 'cash',\n    description: PaymentType.Cash,\n    address: '',\n    phone_number: null,\n    nakshatram: ''\n  };\n  expenseData: Subject<any> = new Subject();\n  heading: string;\n  price: number;\n  starSigns = starSigns;\n  private modalRef: MDBModalRef;\n\n  todaysDonationList: Donations[] = [];\n  paymentTypes: PaymentOptions[] = JSON.parse(JSON.stringify(PAYMENT_OPTIONS));\n  frequentItems: Array<string>\n\n  modalConfig = {\n    class: 'modal-dialog-centered'\n  };\n\n  get formattedDate() {\n    return this.selectedDate.format('dddd DD/MM/YYYY');\n  }\n\n  constructor(\n    private store: Store<AppState>,\n    private modalService: MDBModalService,\n    private donationsService: DonationsService,\n    private idbService: NgxIndexedDBService\n  ) {\n    this.initIncomeData();\n    this.initFestivalData();\n  }\n\n  initIncomeData() {\n    this.vanji = {\n      ist_YYYYMMDD: moment().format('YYYY-MM-DD'),\n      item: 'vanji',\n      name: '',\n      description: 'vanji',\n      nakshatram: 'vanji',\n      phone_number: 0,\n      address: 'Vanji'\n    }\n  }\n\n  initFestivalData() {\n    this.festival = {\n      ist_YYYYMMDD: moment().format('YYYY-MM-DD'),\n      item: 'festival',\n      name: '',\n      description: PaymentType.Cash,\n      nakshatram: '',\n      phone_number: 0,\n      address: ''\n    };\n    this.updatePaymentTypeStates(PaymentType.Cash);\n  }\n\n  ngOnInit(): void {\n    this.store.select(getDonations).subscribe((exp: Donations[]) => {\n      this.todaysDonationList = exp;\n    });\n    this.store.select(getUser).subscribe((user: any) => {\n      this.user = user;\n    })\n    this.donationsService.newDonationAdded.subscribe((receipt_number: string) => {\n      const printData = {\n        ...this.donationCopy,\n        donation_date: this.donationDate.format(\"DD-MM-YYYY\"),\n        added_by: this.user.displayName,\n        receipt_number: receipt_number\n      }\n      this.appPrinter.donation = printData;\n      // this.appPrinter.triggerPrint();\n      this.fetchFrequentItems();\n    });\n\n    this.fetchFrequentItems();\n    this.isLoading$ = this.store.select(getIsLoading);\n    this.isManager$ = this.store.select(isManager);\n    this.store.dispatch(new fromDonations.DonationsQuery(this.selectedDate.format('YYYY-MM-DD')));\n\n    // Set initial payment type states based on festival description\n    this.updatePaymentTypeStates(this.festival.description);\n  }\n\n  // Add new method to update payment type states\n  updatePaymentTypeStates(currentValue: PaymentType) {\n    this.paymentTypes = this.paymentTypes.map(type => ({\n      ...type,\n      checked: type.id === currentValue\n    }));\n    console.log({paymentTypes: this.paymentTypes, currentValue});\n  }\n\n  fetchFrequentItems() {\n    this.idbService\n      .getAll('donations')\n      .subscribe((items: any) => {\n        if (items && items.length > 0) {\n          items = items.sort((a: any, b: any) => {\n            if (a.frequency > b.frequency) {\n              return -1;\n            } else if (a.frequency > b.frequency){\n              return 1;\n            }\n            return 0;\n          }).splice(0, 5);\n          this.frequentItems = items.map((data: any) => data.donationItem);\n        }\n      });\n  }\n\n  anyVanjiExist(donationList: any) {\n    return donationList.some((donation: any) => donation.item === 'vanji')\n  }\n  anyFestivalExist(donationList: any) {\n    return donationList.some((donation: any) => donation.item === 'festival')\n  }\n\n  dateClicked(date: any) {\n    console.log(date);\n  }\n\n  donDatePicked(date: any) {\n    this.donationDate = date;\n    this.donation.ist_YYYYMMDD = date.format('YYYY-MM-DD');\n  }\n\n  incDatePicked(date: any) {\n    this.vanjiDate = date;\n    this.vanji.ist_YYYYMMDD = date.format('YYYY-MM-DD');\n  }\n\n  festDatePicked(date: any) {\n    this.festivalDate = date;\n    this.festival.ist_YYYYMMDD = date.format('YYYY-MM-DD');\n  }\n\n  datePicked(date: any) {\n    this.selectedDate = date;\n    this.store.dispatch(new fromDonations.DonationsQuery(date.format('YYYY-MM-DD')));\n  }\n\n  prevDate() {\n    this.datePicked(this.selectedDate.subtract('1', 'days'));\n  }\n\n  nextDate() {\n    this.datePicked(this.selectedDate.add('1', 'days'));\n  }\n\n  onSave() {\n    const self = this;\n    const donationRequest = {\n      ...this.donation,\n      phone_number: this.donation.phone_number ? this.donation.phone_number : 0,\n    }\n    this.donationCopy = JSON.parse(JSON.stringify(donationRequest));\n    this.store.dispatch(new fromDonations.DonationsAddQuery(this.donationCopy));\n    this.idbService\n      .getByKey('donations', this.donationCopy.item)\n      .subscribe((data) => {\n        if (!data) {\n          this.idbService.add('donations', {\n            donationItem: self.donationCopy.item,\n            frequency: 1\n          }).subscribe((added: any) => {\n            console.log(added, 'added to idb');\n          }, ((error: any) => {\n            console.log(error);\n          }))\n        } else {\n          this.idbService.update('donations',\n          {\n            donationItem: self.donationCopy.item,\n            frequency: (data as any).frequency + 1\n          }, (data as any).key).subscribe((added: any) => {\n            console.log(added, 'added to idb');\n          }, ((error: any) => {\n            console.log(error);\n          }))\n        }\n      });\n    this.resetForm();\n  }\n\n  onIncomeSave() {\n    this.vanjiCopy = JSON.parse(JSON.stringify(this.vanji));\n    this.store.dispatch(new fromDonations.DonationsAddQuery(this.vanjiCopy));\n    this.resetIncomeForm();\n  }\n\n\n  onFestivalSave() {\n    this.festivalCopy = JSON.parse(JSON.stringify(this.festival));\n    this.store.dispatch(new fromDonations.DonationsAddQuery(this.festivalCopy));\n    this.resetFestivalForm();\n  }\n\n  getTotalAmount() {\n    if (this.todaysDonationList && this.todaysDonationList.length > 0) {\n      return this.todaysDonationList.reduce(((prev, current: any) => +(current.amount) + prev), 0);\n    }\n    return '0';\n  }\n\n  selectStar(star: string) {\n    this.donation.nakshatram = this.donation.nakshatram === star ? '' : star;\n  }\n  selectfestivalStar(star: string) {\n    this.festival.nakshatram = this.festival.nakshatram === star ? '' : star;\n  }\n\n  resetIncomeForm() {\n    this.vanjiForm.reset();\n    // this.vanjiForm.controls.item.setValue('vanji');\n    this.initIncomeData();\n    this.selectedDate = moment();\n    this.vanjiDate = moment();\n  }\n\n  resetFestivalForm() {\n    this.festivalForm.reset();\n    // this.festivalForm.controls.item.setValue('festival');\n    this.initFestivalData();\n    this.selectedDate = moment();\n    this.festivalDate = moment();\n  }\n\n  resetForm() {\n    this.donationForm.reset();\n    // this.donationForm.controls.item.setValue('cash');\n    this.donation = {\n      ist_YYYYMMDD: moment().format('YYYY-MM-DD'),\n      item: 'cash',\n      description: PaymentType.Cash,\n      address: '',\n      phone_number: null,\n      nakshatram: ''\n    }\n    this.updatePaymentTypeStates(PaymentType.Cash);\n    this.selectedDate = moment();\n    this.donationDate = moment();\n  }\n\n  onDelete(item: Donations) {\n    this.modalRef = this.modalService.show(\n      ConfirmModalComponent,\n      this.modalConfig\n    );\n\n    this.modalRef.content.confirmation\n      .pipe(take(1))\n      .subscribe((confirmation: boolean) => {\n        if (confirmation) {\n          this.store.dispatch(new fromDonations.DonationsDeleted(item));\n        }\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DonationsComponent } from './containers/donations.component';\n\nconst routes: Routes = [{ path: '', component: DonationsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DonationsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DonationsRoutingModule } from './donations-routing.module';\nimport { DonationsComponent } from './containers/donations.component';\nimport { FormsModule } from '@angular/forms';\nimport { ButtonsModule, InputsModule, TableModule, IconsModule, ModalModule, CardsModule, InputUtilitiesModule, BadgeModule } from 'angular-bootstrap-md';\n\nimport * as fromDonations from './store/donations.reducer';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { DonationsEffects } from './store/donations.effects';\nimport { CoreModule } from '../core/core.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DonationsRoutingModule,\n    ModalModule,\n    FormsModule,\n    ButtonsModule,\n    InputUtilitiesModule,\n    InputsModule,\n    IconsModule,\n    BadgeModule,\n    TableModule,\n    CoreModule,\n    SharedModule,\n    CardsModule,\n    StoreModule.forFeature('donations', fromDonations.DonationsReducer),\n    EffectsModule.forFeature([DonationsEffects])\n  ],\n  declarations: [DonationsComponent],\n  exports: [DonationsComponent]\n})\nexport class DonationsModule { }\n","import { Injectable } from '@angular/core';\nimport { Donations } from '../models/donations.model';\nimport { of, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DonationsService {\n  private $newDonationAdded = new Subject<string>();\n  public newDonationAdded = this.$newDonationAdded.asObservable();\n \n  constructor(private http: HttpClient) { }\n  \n  get userId() {\n    return 'uid';\n  }\n  emitNewDonation(receipt_number: string) {\n    this.$newDonationAdded.next(receipt_number);\n  }\n\n  addDonations(donations: Donations) {\n    return this.http.post(\n      `${environment.apiUrl}?api=addDonation`, { \n        ...donations }\n    );\n  }\n\n  get(request: any) {\n    return this.http.get(\n      `${environment.apiUrl}?api=listDonations`, \n      {\n        params: {\n        'ist_YYYYMMDD': request.payload\n        }\n      }\n    );\n  }\n\n  update(expenses: Donations, userId: string) {\n    return of([expenses, userId]);\n\n  }\n\n  deleteDonation(request: DeleteDonation) {\n    return this.http.post(\n      `${environment.apiUrl}?api=deleteDonation`, { \n        ...request\n      }\n    );\n  }\n}\n\ninterface DeleteDonation {\n  uuid: string;\n  phone_number: any;\n}","import { Action } from '@ngrx/store';\nimport { Donations } from '../models/donations.model';\n\nexport enum DonationsActionTypes {\n  DONATIONS_QUERY = '[Donations] Query',\n  DONATIONS_LOADED = '[Donations] Fetched',\n\n  DONATIONS_ADD_QUERY = '[Donations] Added',\n  DONATIONS_EDITED = '[Donations] Edited',\n  DONATIONS_DELETED = '[Donations] Deleted',\n\n  DONATIONS_ERROR = '[Donations] Error'\n}\n\nexport class DonationsQuery implements Action {\n  readonly type = DonationsActionTypes.DONATIONS_QUERY;\n\n  constructor(public payload: { date: any }) {}\n}\n\nexport class DonationsLoaded implements Action {\n  readonly type = DonationsActionTypes.DONATIONS_LOADED;\n\n  constructor(public payload: { donations: Donations[] }) {}\n}\n\nexport class DonationsAddQuery implements Action {\n  readonly type = DonationsActionTypes.DONATIONS_ADD_QUERY;\n\n  constructor(public payload: { donations: Donations }) {}\n}\n\nexport class DonationsEdited implements Action {\n  readonly type = DonationsActionTypes.DONATIONS_EDITED;\n\n  constructor(public payload: { donations: Donations }) {}\n}\n\nexport class DonationsDeleted implements Action {\n  readonly type = DonationsActionTypes.DONATIONS_DELETED;\n\n  constructor(public payload: Donations) {}\n}\n\nexport class DonationsError implements Action {\n  readonly type = DonationsActionTypes.DONATIONS_ERROR;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport type DonationsActions =\n  | DonationsQuery\n  | DonationsLoaded\n  | DonationsAddQuery\n  | DonationsEdited\n  | DonationsDeleted\n  | DonationsError;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { DonationsService } from '../services/donations.service';\nimport { DonationsActionTypes } from './donations.actions';\nimport { switchMap, map, catchError, withLatestFrom } from 'rxjs/operators';\n\nimport * as fromDonations from './donations.actions';\nimport { of } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../../reducers/index';\nimport { getUser } from '../../auth/store/auth.selectors';\n\nvar moment = require('../../../assets/datepicker/moment.js');\n@Injectable()\nexport class DonationsEffects {\n\n  constructor(private actions$: Actions, private donationsService: DonationsService, private store: Store<AppState>) {}\n\n  \n  @Effect()\n  query$ = this.actions$.pipe(\n    ofType(DonationsActionTypes.DONATIONS_QUERY),\n    switchMap((payload: any) => this.donationsService.get(payload)\n      .pipe(\n        map((data: any) => {\n          return (new fromDonations.DonationsLoaded({ donations: data.donationList }));\n        }),\n        catchError(error => {\n          return of(new fromDonations.DonationsError({ error }));\n        })\n      )\n    ),\n  );\n\n  @Effect()\n  added$ = this.actions$.pipe(\n    ofType(DonationsActionTypes.DONATIONS_ADD_QUERY),\n    map((action: fromDonations.DonationsAddQuery) => action.payload),\n    switchMap((payload: any) => this.donationsService.addDonations(payload)\n    .pipe(\n      (map((response: any) => {\n        this.donationsService.emitNewDonation(response.receipt_number);\n        return (new fromDonations.DonationsQuery(moment().format('YYYY-MM-DD')));\n      })),\n      catchError(error => {\n        return of(new fromDonations.DonationsError({ error }));\n      })\n    ))\n  );\n\n  @Effect()\n  edit$ = this.actions$.pipe(\n    ofType(DonationsActionTypes.DONATIONS_EDITED),\n    map((action: fromDonations.DonationsEdited) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.donationsService.update(payload.customer, user.temple_code)\n    .pipe(\n      catchError( error => {\n      return of(new fromDonations.DonationsError({ error }));\n    }))\n    )\n  );\n\n  @Effect()\n  delete$ = this.actions$.pipe(\n    ofType(DonationsActionTypes.DONATIONS_DELETED),\n    map((action: fromDonations.DonationsDeleted) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload]: any) => this.donationsService.deleteDonation({uuid: payload.uuid, phone_number: payload.phone_number})\n    .pipe(\n      (map(() => {\n        return (new fromDonations.DonationsQuery(moment().format('YYYY-MM-DD')));\n      })),\n      catchError(error => {\n        return of(new fromDonations.DonationsError({ error }));\n      })\n    ))\n  );\n}\n","import { DonationsInitialState, DonationsState } from './donations.state';\nimport { DonationsActions, DonationsActionTypes } from './donations.actions';\n\nexport function DonationsReducer(state = DonationsInitialState, action: DonationsActions): DonationsState {\n  switch (action.type) {\n\n    case DonationsActionTypes.DONATIONS_QUERY: {\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    }\n    case DonationsActionTypes.DONATIONS_ADD_QUERY: {\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    }\n\n    case DonationsActionTypes.DONATIONS_LOADED: {\n      return Object.assign({}, state, {\n        donations: action.payload.donations,\n        isLoading: false,\n      });\n    }\n\n    case DonationsActionTypes.DONATIONS_ERROR: {\n      return Object.assign({}, state, {\n        isLoading: false,\n        error: action.payload.error\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\nimport { DonationsState } from './donations.state';\n\nexport const getDonationsState = createFeatureSelector<DonationsState>('donations');\n\nexport const getDonations = createSelector(\n  getDonationsState,\n  donations => donations.donations\n);\n\nexport const getIsLoading = createSelector(\n  getDonationsState,\n  donations => donations.isLoading\n);\n\nexport const getError = createSelector(\n  getDonationsState,\n  donations => donations.error\n);\n","import { Donations } from '../models/donations.model';\n\nexport interface DonationsState {\n    donations: Donations[] | null;\n    isLoading: boolean;\n    error: any;\n}\n\nexport const DonationsInitialState: DonationsState = {\n    donations: [],\n    isLoading: true,\n    error: null\n};\n"],"sourceRoot":"webpack:///"}