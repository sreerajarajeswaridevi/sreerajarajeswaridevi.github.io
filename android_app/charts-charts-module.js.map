{"version":3,"sources":["./src/app/charts/components/bar-chart/bar-chart.component.html","./src/app/charts/components/doughnut-chart/doughnut-chart.component.html","./src/app/charts/components/line-chart/line-chart.component.html","./src/app/charts/components/pie-chart/pie-chart.component.html","./src/app/charts/containers/charts/charts.component.html","./src/app/charts/charts-routing.module.ts","./src/app/charts/charts.module.ts","./src/app/charts/components/bar-chart/bar-chart.component.scss","./src/app/charts/components/bar-chart/bar-chart.component.ts","./src/app/charts/components/doughnut-chart/doughnut-chart.component.scss","./src/app/charts/components/doughnut-chart/doughnut-chart.component.ts","./src/app/charts/components/line-chart/line-chart.component.scss","./src/app/charts/components/line-chart/line-chart.component.ts","./src/app/charts/components/pie-chart/pie-chart.component.scss","./src/app/charts/components/pie-chart/pie-chart.component.ts","./src/app/charts/containers/charts/charts.component.scss","./src/app/charts/containers/charts/charts.component.ts","./src/app/charts/services/charts.service.ts","./src/app/charts/store/charts.actions.ts","./src/app/charts/store/charts.effects.ts","./src/app/charts/store/charts.reducer.ts","./src/app/charts/store/charts.selectors.ts","./src/app/charts/store/charts.state.ts"],"names":[],"mappings":"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","file":"charts-charts-module.js","sourcesContent":["export default \"<div style=\\\"display: block\\\">\\r\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\" [options]=\\\"chartOptions\\\"\\r\\n    [legend]=\\\"true\\\">\\r\\n  </canvas>\\r\\n</div>\\r\\n\"","export default \"<div style=\\\"display: block\\\">\\r\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\" [options]=\\\"chartOptions\\\"\\r\\n    [legend]=\\\"true\\\">\\r\\n  </canvas>\\r\\n</div>\\r\\n\"","export default \"<div style=\\\"display: block\\\">\\r\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" height=\\\"500px\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\"\\r\\n    [options]=\\\"chartOptions\\\" [legend]=\\\"true\\\">\\r\\n  </canvas>\\r\\n</div>\\r\\n\"","export default \"<div style=\\\"display: block\\\">\\r\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\"\\r\\n    [options]=\\\"chartOptions\\\" [legend]=\\\"true\\\">\\r\\n  </canvas>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"white px-4 py-2\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\r\\n      <h3 class=\\\"pt-2\\\">Financial Reports</h3>\\r\\n      <p class=\\\"grey-text pt-1\\\">Visualisation of consolidated accounts data</p>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\r\\n      <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Toolbar with button groups\\\">\\r\\n        <div class=\\\"btn-group mr-2 mt-4 row w-100\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\r\\n          <button mdbBtn type=\\\"button\\\" (click)=\\\"initTab('day')\\\" [color]=\\\"activeTab === 'day' ? 'primary' : 'white'\\\"\\r\\n            class=\\\"waves-light col-4 col-md-4 col-lg-3 col-xl-2\\\" size=\\\"sm\\\" mdbWavesEffect>\\r\\n            day\\r\\n          </button>\\r\\n          <button mdbBtn type=\\\"button\\\" (click)=\\\"initTab('week')\\\" [color]=\\\"activeTab === 'week' ? 'primary' : 'white'\\\"\\r\\n            class=\\\"waves-light col-4 col-md-4 col-lg-3 col-xl-2\\\" size=\\\"sm\\\" mdbWavesEffect>\\r\\n            week\\r\\n          </button>\\r\\n          <button mdbBtn type=\\\"button\\\" (click)=\\\"initTab('month')\\\"\\r\\n            [color]=\\\"activeTab === 'month' ? 'primary' : 'white'\\\" class=\\\"waves-light col-4 col-md-4 col-lg-3 col-xl-2\\\" size=\\\"sm\\\" mdbWavesEffect>\\r\\n            month\\r\\n          </button>\\r\\n          <button mdbBtn type=\\\"button\\\" (click)=\\\"initTab('year')\\\" [color]=\\\"activeTab === 'year' ? 'primary' : 'white'\\\"\\r\\n            class=\\\"waves-light col-4 col-md-4 col-lg-3 col-xl-2\\\" size=\\\"sm\\\"\\r\\n            mdbWavesEffect>\\r\\n            year\\r\\n          </button>\\r\\n          <button mdbBtn type=\\\"button\\\" (click)=\\\"initTab('custom')\\\"\\r\\n            [color]=\\\"activeTab === 'custom' ? 'primary' : 'white'\\\" class=\\\"waves-light col-4 col-md-4 col-lg-3 col-xl-2\\\" size=\\\"sm\\\" mdbWavesEffect>\\r\\n            custom\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isLoading$\\\" class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"margin-top: 300px\\\">\\r\\n  <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem\\\">\\r\\n    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!isLoading$\\\" class=\\\"charts-container pl-5 pr-5 pb-5\\\" [ngSwitch]=\\\"activeTab\\\">\\r\\n  <span class=\\\"float-right mt-4\\\">\\r\\n    <app-printer [text]=\\\"'Print'\\\" [reports]=\\\"response\\\" [size]=\\\"'A4'\\\" [type]=\\\"'report'\\\" [reportPeriod]=\\\"rangeText\\\"></app-printer>\\r\\n  </span>\\r\\n  <div *ngSwitchCase=\\\"'day'\\\">\\r\\n    <div class=\\\"card-header mb-2 d-flex-center\\\">\\r\\n      <span class=\\\"icon-button\\\" (click)=\\\"yesterday()\\\">\\r\\n        <mdb-icon fas icon=\\\"chevron-left\\\" class=\\\"mr-3 float-left delete cursor-pointer gray-text\\\" alt=\\\"Left\\\"></mdb-icon>\\r\\n      </span>\\r\\n      <h2 class=\\\"text-xl gray-text\\\">\\r\\n        {{ todaysDate.format('DD-MMMM-YYYY')  }}\\r\\n      </h2>\\r\\n      <span class=\\\"icon-button\\\" (click)=\\\"tomorrow()\\\">\\r\\n        <mdb-icon *ngIf=\\\"!todaysDate.isSame(customStartDate, 'day')\\\" mdbtn fas icon=\\\"chevron-right\\\" class=\\\"ml-3 float-right delete cursor-pointer gray-text\\\" alt=\\\"Right\\\"></mdb-icon>\\r\\n      </span>\\r\\n\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"row mb-3\\\">\\r\\n      <div class=\\\"col-md-12 col-lg-6 mb-2\\\">\\r\\n        <mdb-card>\\r\\n          <mdb-card-header>\\r\\n            {{ todaysDate.format('DD-MMMM-YYYY')  }} Profit/Loss\\r\\n            <span *ngIf=\\\"pageData.todaysData\\\" class=\\\"price ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.todaysData) }}</span>\\r\\n          </mdb-card-header>\\r\\n          <mdb-card-body *ngIf=\\\"pageData.todaysData\\\">\\r\\n            <div class=\\\"pl-4\\\">\\r\\n              <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"swapPoojasData(pageData.todaysData)\\\">\\r\\n                Poojas\\r\\n              </button>\\r\\n            </div>\\r\\n            <app-bar-chart *ngIf=\\\"pageData.todaysData.currentOverView ===\\r\\n              pageData.todaysData.overView; else poojasPieChart\\\" [dataset]=\\\"pageData.todaysData.currentOverView.dataSet\\\"\\r\\n              [labels]=\\\"pageData.todaysData.currentOverView.chartLabels\\\"></app-bar-chart>\\r\\n\\r\\n              <ng-template #poojasPieChart>\\r\\n                <app-pie-chart [dataset]=\\\"pageData.todaysData.currentOverView.dataSet\\\"\\r\\n                [labels]=\\\"pageData.todaysData.currentOverView.chartLabels\\\"></app-pie-chart>\\r\\n              </ng-template>\\r\\n          </mdb-card-body>\\r\\n          <div class=\\\"\\r\\n              p-4\\r\\n              d-flex\\r\\n              flex-column\\r\\n              justify-content-center\\r\\n              align-items-center\\r\\n            \\\" *ngIf=\\\"!pageData.todaysData\\\">\\r\\n            <mdb-icon fas icon=\\\"times-circle\\\" class=\\\"float-right grey-text\\\" alt=\\\"no data\\\"></mdb-icon>\\r\\n            <p class=\\\"grey-text\\\">No Data Today</p>\\r\\n          </div>\\r\\n        </mdb-card>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"pageData.todaysData\\\">\\r\\n        <table class=\\\"white text-center z-depth-1\\\" mdbTable>\\r\\n          <thead class=\\\"primary-color text-white\\\">\\r\\n            <tr>\\r\\n              <td colspan=\\\"2\\\">\\r\\n                {{ todaysDate.format('DD-MMMM-YYYY')  }} Profit/Loss\\r\\n                <span class=\\\"ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.todaysData) }}</span>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"\\r\\n                pageData.todaysData.currentOverView ===\\r\\n                  pageData.todaysData.overView;\\r\\n                else poojasView\\r\\n              \\\">\\r\\n              <th>Expense Type</th>\\r\\n              <th>Amount</th>\\r\\n            </tr>\\r\\n            <ng-template #poojasView>\\r\\n              <tr>\\r\\n                <th>Poooja Name</th>\\r\\n                <th>Total Amount Received</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr mdbTableCol *ngFor=\\\"\\r\\n                let value of pageData.todaysData.currentOverView.dataSet[0]\\r\\n                  .data;\\r\\n                let i = index\\r\\n              \\\">\\r\\n              <td>{{ pageData.todaysData.currentOverView.chartLabels[i] }}</td>\\r\\n              <th scope=\\\"row\\\">&#x20B9;{{ value }}</th>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- this weeks data -->\\r\\n  <div *ngSwitchCase=\\\"'week'\\\">\\r\\n    <div class=\\\"card-header mb-2 d-flex-center\\\">\\r\\n      <span class=\\\"icon-button\\\" (click)=\\\"prevWeek()\\\">\\r\\n        <mdb-icon fas icon=\\\"chevron-left\\\" class=\\\"mr-3 float-left delete cursor-pointer gray-text\\\" alt=\\\"Left\\\"></mdb-icon>\\r\\n      </span>\\r\\n      <h2 class=\\\"text-xl gray-text\\\">\\r\\n        {{ thisWeekStartDate.format('DD-MMMM') + ' TO ' + thisWeekEndDate.format('DD-MMMM')  }}\\r\\n      </h2>\\r\\n      <span class=\\\"icon-button\\\" (click)=\\\"nextWeek()\\\">\\r\\n        <mdb-icon *ngIf=\\\"!todaysDate.isSame(thisWeekStartDate, 'week')\\\" mdbtn fas icon=\\\"chevron-right\\\" class=\\\"ml-3 float-right delete cursor-pointer gray-text\\\" alt=\\\"Right\\\"></mdb-icon>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"row mb-3\\\">\\r\\n      <div class=\\\"col-md-12 col-lg-6 mb-2\\\">\\r\\n        <mdb-card>\\r\\n          <mdb-card-header>\\r\\n            This Weeks Profit/Loss\\r\\n            <span class=\\\"price ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisWeeksData) }}</span>\\r\\n          </mdb-card-header>\\r\\n          <mdb-card-body>\\r\\n            <div class=\\\"pl-4\\\">\\r\\n              <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"swapPoojasData(pageData.thisWeeksData)\\\">\\r\\n                Poojas\\r\\n              </button>\\r\\n            </div>\\r\\n            <app-bar-chart  *ngIf=\\\"pageData.thisWeeksData.currentOverView ===\\r\\n            pageData.thisWeeksData.overView; else poojasPieChart\\\" [dataset]=\\\"pageData.thisWeeksData.currentOverView.dataSet\\\"\\r\\n              [labels]=\\\"pageData.thisWeeksData.currentOverView.chartLabels\\\"></app-bar-chart>\\r\\n              <ng-template #poojasPieChart>\\r\\n                <app-pie-chart [dataset]=\\\"pageData.thisWeeksData.currentOverView.dataSet\\\"\\r\\n                [labels]=\\\"pageData.thisWeeksData.currentOverView.chartLabels\\\"></app-pie-chart>\\r\\n              </ng-template>\\r\\n            <br /><br />\\r\\n            <app-bar-chart [dataset]=\\\"pageData.thisWeeksData.weeklyOverView.dataSet\\\"\\r\\n              [labels]=\\\"pageData.thisWeeksData.weeklyOverView.chartLabels\\\"></app-bar-chart>\\r\\n          </mdb-card-body>\\r\\n        </mdb-card>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"pageData.thisWeeksData\\\">\\r\\n        <table class=\\\"white text-center z-depth-1\\\" mdbTable>\\r\\n          <thead class=\\\"primary-color text-white\\\">\\r\\n            <tr>\\r\\n              <td colspan=\\\"2\\\">\\r\\n                This Weeks Profit/Loss\\r\\n                <span class=\\\"ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisWeeksData) }}</span>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"\\r\\n                pageData.thisWeeksData.currentOverView ===\\r\\n                  pageData.thisWeeksData.overView;\\r\\n                else poojasView\\r\\n              \\\">\\r\\n              <th>Expense Type</th>\\r\\n              <th>Amount</th>\\r\\n            </tr>\\r\\n            <ng-template #poojasView>\\r\\n              <tr>\\r\\n                <th>Poooja Name</th>\\r\\n                <th>Total Amount Received</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr mdbTableCol *ngFor=\\\"\\r\\n                let value of pageData.thisWeeksData.currentOverView.dataSet[0]\\r\\n                  .data;\\r\\n                let i = index\\r\\n              \\\">\\r\\n              <td>\\r\\n                {{ pageData.thisWeeksData.currentOverView.chartLabels[i] }}\\r\\n              </td>\\r\\n              <th scope=\\\"row\\\">&#x20B9;{{ value }}</th>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- this weeks data ends here-->\\r\\n\\r\\n  <!-- this Months data -->\\r\\n  <div *ngSwitchCase=\\\"'month'\\\">\\r\\n    <div class=\\\"card-header mb-2 d-flex-center\\\">\\r\\n      <span class=\\\"icon-button\\\" (click)=\\\"prevMonth()\\\">\\r\\n        <mdb-icon fas icon=\\\"chevron-left\\\" class=\\\"mr-3 float-left delete cursor-pointer gray-text\\\" alt=\\\"Left\\\"></mdb-icon>\\r\\n      </span>\\r\\n      <h2 class=\\\"text-xl gray-text\\\">\\r\\n        {{ monthDate.format('MMMM YYYY')  }}\\r\\n      </h2>\\r\\n      <span class=\\\"icon-button\\\" (click)=\\\"nextMonth()\\\">\\r\\n        <mdb-icon *ngIf=\\\"!todaysDate.isSame(monthDate, 'month')\\\" mdbtn fas icon=\\\"chevron-right\\\" class=\\\"ml-3 float-right delete cursor-pointer gray-text\\\" alt=\\\"Right\\\"></mdb-icon>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"row mb-3\\\">\\r\\n      <div class=\\\"col-md-12 col-lg-6 mb-4\\\">\\r\\n        <mdb-card>\\r\\n          <mdb-card-header>\\r\\n            {{ monthDate.format('MMMM YYYY')  }} Profit/Loss\\r\\n            <span class=\\\"price ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisMonthsData) }}</span>\\r\\n          </mdb-card-header>\\r\\n          <mdb-card-body>\\r\\n            <div class=\\\"pl-4\\\">\\r\\n              <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"swapPoojasData(pageData.thisMonthsData)\\\">\\r\\n                Poojas\\r\\n              </button>\\r\\n            </div>\\r\\n            <app-bar-chart *ngIf=\\\"pageData.thisMonthsData.currentOverView ===\\r\\n            pageData.thisMonthsData.overView; else poojasPieChart\\\" [dataset]=\\\"pageData.thisMonthsData.currentOverView.dataSet\\\"\\r\\n              [labels]=\\\"pageData.thisMonthsData.currentOverView.chartLabels\\\"></app-bar-chart>\\r\\n\\r\\n              <ng-template #poojasPieChart>\\r\\n                <app-pie-chart [dataset]=\\\"pageData.thisMonthsData.currentOverView.dataSet\\\"\\r\\n                [labels]=\\\"pageData.thisMonthsData.currentOverView.chartLabels\\\"></app-pie-chart>\\r\\n              </ng-template>\\r\\n          </mdb-card-body>\\r\\n        </mdb-card>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"pageData.thisMonthsData\\\">\\r\\n        <table class=\\\"white text-center z-depth-1\\\" mdbTable>\\r\\n          <thead class=\\\"primary-color text-white\\\">\\r\\n            <tr>\\r\\n              <td colspan=\\\"2\\\">\\r\\n                {{ monthDate.format('MMMM YYYY')  }} Profit/Loss\\r\\n                <span class=\\\"ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisMonthsData) }}</span>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"\\r\\n                pageData.thisMonthsData.currentOverView ===\\r\\n                  pageData.thisMonthsData.overView;\\r\\n                else poojasView\\r\\n              \\\">\\r\\n              <th>Expense Type</th>\\r\\n              <th>Amount</th>\\r\\n            </tr>\\r\\n            <ng-template #poojasView>\\r\\n              <tr>\\r\\n                <th>Poooja Name</th>\\r\\n                <th>Total Amount Received</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr mdbTableCol *ngFor=\\\"\\r\\n                let value of pageData.thisMonthsData.currentOverView.dataSet[0]\\r\\n                  .data;\\r\\n                let i = index\\r\\n              \\\">\\r\\n              <td>\\r\\n                {{ pageData.thisMonthsData.currentOverView.chartLabels[i] }}\\r\\n              </td>\\r\\n              <th scope=\\\"row\\\">&#x20B9;{{ value }}</th>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-12\\\" *ngIf=\\\"pageData.thisMonthsData\\\">\\r\\n        <mdb-card>\\r\\n          <mdb-card-body>\\r\\n            <app-line-chart [dataset]=\\\"pageData.thisMonthsData.monthlyOverView.dataSet\\\"\\r\\n              [labels]=\\\"pageData.thisMonthsData.monthlyOverView.chartLabels\\\"></app-line-chart>\\r\\n          </mdb-card-body>\\r\\n        </mdb-card>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- this Months data ends here-->\\r\\n\\r\\n  <!-- this Year data -->\\r\\n  <div *ngSwitchCase=\\\"'year'\\\">\\r\\n    <div class=\\\"card-header mb-2 d-flex-center\\\">\\r\\n      <span class=\\\"icon-button\\\" (click)=\\\"prevYear()\\\">\\r\\n        <mdb-icon fas icon=\\\"chevron-left\\\" class=\\\"mr-3 float-left delete cursor-pointer gray-text\\\" alt=\\\"Left\\\"></mdb-icon>\\r\\n      </span>\\r\\n      <h2 class=\\\"text-xl gray-text\\\">\\r\\n        {{ yearDate.format('YYYY') }}\\r\\n      </h2>\\r\\n      <span class=\\\"icon-button\\\" (click)=\\\"nextYear()\\\">\\r\\n        <mdb-icon *ngIf=\\\"yearDate.format('YYYY')!==todaysDate.format('YYYY')\\\" mdbtn fas icon=\\\"chevron-right\\\" class=\\\"ml-3 float-right delete cursor-pointer gray-text\\\" alt=\\\"Right\\\"></mdb-icon>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"row mb-3\\\">\\r\\n      <div class=\\\"col-md-12 col-lg-6 mb-4\\\">\\r\\n        <mdb-card>\\r\\n          <mdb-card-header>\\r\\n            {{ yearDate.format('YYYY') }} Profit/Loss\\r\\n            <span class=\\\"price ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisYearsData) }}</span>\\r\\n          </mdb-card-header>\\r\\n          <mdb-card-body>\\r\\n            <div class=\\\"pl-4\\\">\\r\\n              <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"swapPoojasData(pageData.thisYearsData)\\\">\\r\\n                Poojas\\r\\n              </button>\\r\\n            </div>\\r\\n            <app-bar-chart *ngIf=\\\"pageData.thisYearsData.currentOverView ===\\r\\n            pageData.thisYearsData.overView; else poojasPieChart\\\" [dataset]=\\\"pageData.thisYearsData.currentOverView.dataSet\\\"\\r\\n              [labels]=\\\"pageData.thisYearsData.currentOverView.chartLabels\\\"></app-bar-chart>\\r\\n\\r\\n                <ng-template #poojasPieChart>\\r\\n                  <app-pie-chart [dataset]=\\\"pageData.thisYearsData.currentOverView.dataSet\\\"\\r\\n                  [labels]=\\\"pageData.thisYearsData.currentOverView.chartLabels\\\"></app-pie-chart>\\r\\n                </ng-template>\\r\\n          </mdb-card-body>\\r\\n        </mdb-card>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"pageData.thisYearsData\\\">\\r\\n        <table class=\\\"white text-center z-depth-1\\\" mdbTable>\\r\\n          <thead class=\\\"primary-color text-white\\\">\\r\\n            <tr>\\r\\n              <td colspan=\\\"2\\\">\\r\\n                {{ yearDate.format('YYYY') }} Profit/Loss\\r\\n                <span class=\\\"ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisYearsData) }}</span>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"\\r\\n                pageData.thisYearsData.currentOverView ===\\r\\n                  pageData.thisYearsData.overView;\\r\\n                else poojasView\\r\\n              \\\">\\r\\n              <th>Expense Type</th>\\r\\n              <th>Amount</th>\\r\\n            </tr>\\r\\n            <ng-template #poojasView>\\r\\n              <tr>\\r\\n                <th>Poooja Name</th>\\r\\n                <th>Total Amount Received</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr mdbTableCol *ngFor=\\\"\\r\\n                let value of pageData.thisYearsData.currentOverView.dataSet[0]\\r\\n                  .data;\\r\\n                let i = index\\r\\n              \\\">\\r\\n              <td>\\r\\n                {{ pageData.thisYearsData.currentOverView.chartLabels[i] }}\\r\\n              </td>\\r\\n              <th scope=\\\"row\\\">&#x20B9;{{ value }}</th>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-12\\\" *ngIf=\\\"pageData.thisYearsData\\\">\\r\\n        <mdb-card>\\r\\n          <mdb-card-body>\\r\\n            <app-line-chart [dataset]=\\\"pageData.thisYearsData.yearlyOverView.dataSet\\\"\\r\\n              [labels]=\\\"pageData.thisYearsData.yearlyOverView.chartLabels\\\"></app-line-chart>\\r\\n          </mdb-card-body>\\r\\n        </mdb-card>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- this Years data ends here-->\\r\\n\\r\\n\\r\\n\\r\\n  <!-- custom data -->\\r\\n  <div *ngSwitchCase=\\\"'custom'\\\">\\r\\n    <div class=\\\"row mb-2 text-center d-flex justify-content-center align-items-center\\\">\\r\\n      <button mdbWavesEffect mdbBtn type=\\\"button\\\" rounded=\\\"true\\\" color=\\\"white\\\" class=\\\"pull-right text-lg btn-primary\\\" rrDatePicker [date]=\\\"customStartDate\\\" [startDate]=\\\"datePickerStartDate\\\" [endDate]=\\\"todaysDate\\\"\\r\\n      header=\\\"Select Start Date\\\" (dateSelected)=\\\"selectCustomStartDate($event)\\\">\\r\\n        <mdb-icon fas icon=\\\"calendar-alt mr-2\\\" size=\\\"lg\\\" class=\\\"calendar\\\" alt=\\\"date\\\"></mdb-icon> \\r\\n        <span appDateTransform [date]=\\\"customStartDate.format('YYYY-MM-DD')\\\"></span>\\r\\n      </button> TO\\r\\n      <button mdbWavesEffect mdbBtn type=\\\"button\\\" rounded=\\\"true\\\" color=\\\"white\\\" class=\\\"pull-right text-lg btn-primary\\\" rrDatePicker [date]=\\\"customEndDate\\\" [startDate]=\\\"customStartDate\\\" [endDate]=\\\"todaysDate\\\"\\r\\n        header=\\\"Select End Date\\\" (dateSelected)=\\\"selectCustomEndDate($event)\\\">\\r\\n          <mdb-icon fas icon=\\\"calendar-alt mr-2\\\" size=\\\"lg\\\" class=\\\"calendar\\\" alt=\\\"date\\\"></mdb-icon> \\r\\n          <span appDateTransform [date]=\\\"customEndDate.format('YYYY-MM-DD')\\\"></span>\\r\\n        </button>\\r\\n\\r\\n        <button type=\\\"button\\\" mdbBtn color=\\\"success\\\"  class=\\\"relative waves-light\\\" mdbWavesEffect (click)=\\\"getCustomData()\\\">\\r\\n          GET DATA  \\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"row my-3\\\">\\r\\n      <div class=\\\"col-md-12 col-lg-6 mb-4\\\">\\r\\n        <mdb-card>\\r\\n          <mdb-card-header>\\r\\n            This Years Profit/Loss\\r\\n            <span class=\\\"price ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisYearsData) }}</span>\\r\\n          </mdb-card-header>\\r\\n          <mdb-card-body>\\r\\n            <div class=\\\"pl-4\\\">\\r\\n              <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"swapPoojasData(pageData.thisYearsData)\\\">\\r\\n                Poojas\\r\\n              </button>\\r\\n            </div>\\r\\n            <app-bar-chart [dataset]=\\\"pageData.thisYearsData.currentOverView.dataSet\\\"\\r\\n              [labels]=\\\"pageData.thisYearsData.currentOverView.chartLabels\\\"></app-bar-chart>\\r\\n          </mdb-card-body>\\r\\n        </mdb-card>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"pageData.thisYearsData\\\">\\r\\n        <table class=\\\"white text-center z-depth-1\\\" mdbTable>\\r\\n          <thead class=\\\"primary-color text-white\\\">\\r\\n            <tr>\\r\\n              <td colspan=\\\"2\\\">\\r\\n                This Years Profit/Loss\\r\\n                <span class=\\\"ml-2\\\">&#x20B9;{{ getProfitLoss(pageData.thisYearsData) }}</span>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"\\r\\n                pageData.thisYearsData.currentOverView ===\\r\\n                  pageData.thisYearsData.overView;\\r\\n                else poojasView\\r\\n              \\\">\\r\\n              <th>Expense Type</th>\\r\\n              <th>Amount</th>\\r\\n            </tr>\\r\\n            <ng-template #poojasView>\\r\\n              <tr>\\r\\n                <th>Poooja Name</th>\\r\\n                <th>Total Amount Received</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr mdbTableCol *ngFor=\\\"\\r\\n                let value of pageData.thisYearsData.currentOverView.dataSet[0]\\r\\n                  .data;\\r\\n                let i = index\\r\\n              \\\">\\r\\n              <td>\\r\\n                {{ pageData.thisYearsData.currentOverView.chartLabels[i] }}\\r\\n              </td>\\r\\n              <th scope=\\\"row\\\">&#x20B9;{{ value }}</th>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-12\\\" *ngIf=\\\"pageData.thisYearsData\\\">\\r\\n        <mdb-card>\\r\\n          <mdb-card-body>\\r\\n            <app-line-chart [dataset]=\\\"pageData.thisYearsData.yearlyOverView.dataSet\\\"\\r\\n              [labels]=\\\"pageData.thisYearsData.yearlyOverView.chartLabels\\\"></app-line-chart>\\r\\n          </mdb-card-body>\\r\\n        </mdb-card>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- custom data ends here-->\\r\\n\\r\\n  <!-- \\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <mdb-card>\\r\\n        <mdb-card-body>\\r\\n          <app-pie-chart [dataset]=\\\"barChartDataset\\\" [labels]=\\\"barChartLabels\\\"></app-pie-chart>\\r\\n        </mdb-card-body>\\r\\n      </mdb-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col-md-6 mb-3\\\">\\r\\n      <mdb-card>\\r\\n        <mdb-card-body>\\r\\n          <app-bar-chart [dataset]=\\\"barChartDataset\\\" [labels]=\\\"barChartLabels\\\"></app-bar-chart>\\r\\n        </mdb-card-body>\\r\\n      </mdb-card>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-6 mb-3\\\">\\r\\n      <mdb-card>\\r\\n        <mdb-card-body>\\r\\n          <app-doughnut-chart [dataset]=\\\"barChartDataset\\\" [labels]=\\\"barChartLabels\\\"></app-doughnut-chart>\\r\\n        </mdb-card-body>\\r\\n      </mdb-card>\\r\\n    </div>\\r\\n  </div> -->\\r\\n</div>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChartsComponent } from './containers/charts/charts.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ChartsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class ChartsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChartsModule, CardsModule, ButtonsModule, TableModule, IconsModule } from 'angular-bootstrap-md';\r\nimport { ChartsComponent } from './containers/charts/charts.component';\r\nimport { LineChartComponent } from './components/line-chart/line-chart.component';\r\nimport { ChartsRoutingModule } from './charts-routing.module';\r\n\r\nimport * as fromCharts from './store/charts.reducer';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { ChartsEffects } from './store/charts.effects';\r\nimport { BarChartComponent } from './components/bar-chart/bar-chart.component';\r\nimport { DoughnutChartComponent } from './components/doughnut-chart/doughnut-chart.component';\r\nimport { PieChartComponent } from './components/pie-chart/pie-chart.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CoreModule } from '../core/core.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardsModule,\r\n    ChartsModule,\r\n    ButtonsModule,\r\n    TableModule,\r\n    SharedModule,\r\n    CoreModule,\r\n    ChartsRoutingModule,\r\n    IconsModule,\r\n    StoreModule.forFeature('charts', fromCharts.chartsReducer),\r\n    EffectsModule.forFeature([ChartsEffects])\r\n  ],\r\n  declarations: [ChartsComponent, LineChartComponent, BarChartComponent, DoughnutChartComponent, PieChartComponent],\r\n  exports: [ChartsComponent, LineChartComponent]\r\n})\r\nexport class ChartsDataModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL2Jhci1jaGFydC9iYXItY2hhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bar-chart',\r\n  templateUrl: './bar-chart.component.html',\r\n  styleUrls: ['./bar-chart.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BarChartComponent implements OnInit {\r\n  @Input() dataset: any;\r\n  @Input() labels: any;\r\n\r\n  public chartType = 'bar';\r\n\r\n  public chartColors: Array<any> = [\r\n    {\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(255,99,132,1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)'\r\n      ],\r\n      borderWidth: 2,\r\n    }\r\n  ];\r\n\r\n  public chartOptions: any = {\r\n    responsive: true\r\n  };\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL2RvdWdobnV0LWNoYXJ0L2RvdWdobnV0LWNoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-doughnut-chart',\r\n  templateUrl: './doughnut-chart.component.html',\r\n  styleUrls: ['./doughnut-chart.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DoughnutChartComponent implements OnInit {\r\n  @Input() dataset: any;\r\n  @Input() labels: any;\r\n\r\n  public chartType = 'doughnut';\r\n\r\n  public chartColors: Array<any> = [\r\n    {\r\n      backgroundColor: ['#F7464A', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'],\r\n      hoverBackgroundColor: ['#FF5A5E', '#5AD3D1', '#FFC870', '#A8B3C5', '#616774'],\r\n      borderWidth: 2,\r\n    }\r\n  ];\r\n\r\n  public chartOptions: any = {\r\n    responsive: true\r\n  };\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL2xpbmUtY2hhcnQvbGluZS1jaGFydC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-line-chart',\r\n  templateUrl: './line-chart.component.html',\r\n  styleUrls: ['./line-chart.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LineChartComponent implements OnInit {\r\n  @Input() dataset: any;\r\n  @Input() labels: any;\r\n\r\n  public chartType = 'line';\r\n\r\n  public chartColors: Array<any> = [\r\n    {\r\n      backgroundColor: 'rgba(255, 152, 0, .5)',\r\n      borderColor: 'rgb(230,81,0)',\r\n      borderWidth: 2,\r\n    }\r\n  ];\r\n\r\n  public chartOptions: any = {\r\n    responsive: true,\r\n    maintainAspectRatio: false\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL3BpZS1jaGFydC9waWUtY2hhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pie-chart',\r\n  templateUrl: './pie-chart.component.html',\r\n  styleUrls: ['./pie-chart.component.scss']\r\n})\r\nexport class PieChartComponent implements OnInit {\r\n  @Input() dataset: any;\r\n  @Input() labels: any;\r\n\r\n  public chartType = 'pie';\r\n\r\n  public chartColors: Array<any> = [\r\n    {\r\n      backgroundColor: ['#F7464A', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'],\r\n      hoverBackgroundColor: ['#FF5A5E', '#5AD3D1', '#FFC870', '#A8B3C5', '#616774'],\r\n      borderWidth: 2,\r\n    }\r\n  ];\r\n\r\n  public chartOptions: any = {\r\n    responsive: true\r\n  };\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb250YWluZXJzL2NoYXJ0cy9jaGFydHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n// import { Store } from '@ngrx/store';\r\n// import { AppState } from '../../../reducers/index';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { ChartsService } from '../../services/charts.service';\r\n\r\nvar moment = require('../../../../assets/datepicker/moment.js');\r\n\r\n@Component({\r\n  selector: 'app-charts',\r\n  templateUrl: './charts.component.html',\r\n  styleUrls: ['./charts.component.scss']\r\n})\r\nexport class ChartsComponent implements OnInit, OnDestroy {\r\n  activeTab = 'day';\r\n  isLoading$ = false;\r\n\r\n  lineChartSub: Subscription;\r\n  barChartSub: Subscription;\r\n\r\n  dataset: DataSet[] = [{ data: [], label: ''}];\r\n  chartLabels: any[] = [];\r\n\r\n  barChartDataset: any[] = [{ data: [], label: '' }];\r\n  barChartchartLabels: any[] = [];\r\n  barChartDate: string;\r\n  barChartBase: string;\r\n  response: any;\r\n  rangeText = '';\r\n\r\n  currency: string;\r\n\r\n  pageData: {\r\n    todaysData?: ChartConfig,\r\n    thisWeeksData?: ChartConfig,\r\n    thisMonthsData?: ChartConfig,\r\n    thisYearsData?: ChartConfig,\r\n    customData?: ChartConfig,\r\n  } | any = {\r\n    todaysData: {},\r\n    thisWeeksData: {},\r\n    thisMonthsData: {},\r\n    thisYearsData: {},\r\n    customData: {},\r\n  };\r\n\r\n  todaysDate = moment();\r\n  weekDate = moment();\r\n  monthDate = moment();\r\n  yearDate = moment();\r\n  customStartDate = moment();\r\n  customEndDate = moment();\r\n  datePickerStartDate = moment().subtract(3, 'year');\r\n\r\n  thisWeekStartDate = moment();\r\n  thisWeekEndDate = moment();\r\n  thisMonthStartDate = moment();\r\n  thisMonthEndDate = moment();\r\n  thisYearStartDate = moment();\r\n  thisYearEndDate = moment();\r\n \r\n  constructor(private cs: ChartsService) {\r\n    this.initDates();\r\n   }\r\n\r\n  initDates() {\r\n    this.todaysDate = moment();\r\n    this.weekDate = moment();\r\n    this.monthDate = moment();\r\n    this.yearDate = moment();\r\n    this.customStartDate = moment();\r\n    this.customEndDate = moment();\r\n\r\n    this.thisWeekStartDate = this.todaysDate.clone().startOf('isoWeek');\r\n    this.thisWeekEndDate = this.todaysDate.clone().endOf('isoWeek');\r\n    this.thisMonthStartDate = this.todaysDate.clone().startOf('month');\r\n    this.thisMonthEndDate = this.todaysDate.clone().endOf('month');\r\n    this.thisYearStartDate = this.todaysDate.clone().startOf('year');\r\n    this.thisYearEndDate = this.todaysDate.clone().endOf('year');  \r\n    this.customStartDate = moment();\r\n    this.customEndDate = moment();\r\n  }\r\n\r\n  initTab(tabName: string) {\r\n    this.initDates();\r\n    this.activeTab = tabName;\r\n    switch(tabName) {\r\n      case 'day': \r\n        this.getData(this.todaysDate, this.todaysDate, this.getTodaysData);\r\n        this.rangeText = `${this.todaysDate.format('dddd DD-MM-YYYY')}`;\r\n        break;\r\n        case 'week': \r\n        this.getData(this.thisWeekStartDate, this.thisWeekEndDate, this.getWeekData);\r\n        this.rangeText = `1 Week = ${this.thisWeekStartDate.format('DD-MM-YYYY')} To ${this.thisWeekEndDate.format('DD-MM-YYYY')}`;\r\n        break;\r\n        case 'month': \r\n        this.getData(this.thisMonthStartDate, this.thisMonthEndDate, this.getMonthData);\r\n        this.rangeText = `1 Month = ${this.thisMonthStartDate.format('DD-MM-YYYY')} To ${this.thisMonthEndDate.format('DD-MM-YYYY')}`;\r\n        break;\r\n        case 'year': \r\n        this.getData(this.thisYearStartDate, this.thisYearEndDate, this.getYearlyData);\r\n        this.rangeText = `1 Year = ${this.thisYearStartDate.format('DD-MM-YYYY')} To ${this.thisYearEndDate.format('DD-MM-YYYY')}`;\r\n        break;\r\n        case 'custom': \r\n        this.getData(this.todaysDate, this.todaysDate, this.getYearlyData);\r\n        this.rangeText = `${this.todaysDate.format('dddd DD-MM-YYYY')}`;\r\n        break;\r\n    }\r\n  }\r\n\r\n  yesterday() {\r\n    this.todaysDate = this.todaysDate.subtract(1, 'day');\r\n    this.getData(this.todaysDate, this.todaysDate, this.getTodaysData);\r\n  }\r\n\r\n  tomorrow() {\r\n    this.todaysDate = this.todaysDate.add(1, 'day');\r\n    this.getData(this.todaysDate, this.todaysDate, this.getTodaysData);\r\n  }\r\n\r\n  prevWeek() {\r\n    this.weekDate = this.weekDate.subtract(1, 'week');\r\n    this.thisWeekStartDate = this.weekDate.clone().startOf('isoWeek');\r\n    this.thisWeekEndDate = this.weekDate.clone().endOf('isoWeek');\r\n    this.getData(this.thisWeekStartDate, this.thisWeekEndDate, this.getWeekData);\r\n  }\r\n\r\n  nextWeek() {\r\n    this.weekDate = this.weekDate.add(1, 'week');\r\n    this.thisWeekStartDate = this.weekDate.clone().startOf('isoWeek');\r\n    this.thisWeekEndDate = this.weekDate.clone().endOf('isoWeek');\r\n    this.getData(this.thisWeekStartDate, this.thisWeekEndDate, this.getWeekData);\r\n  }\r\n\r\n  prevMonth() {\r\n    this.monthDate = this.monthDate.subtract(1, 'month');\r\n    this.thisMonthStartDate = this.monthDate.clone().startOf('month');\r\n    this.thisMonthEndDate = this.monthDate.clone().endOf('month');\r\n    this.getData(this.thisMonthStartDate, this.thisMonthEndDate, this.getMonthData);\r\n  }\r\n\r\n  nextMonth() {\r\n    this.monthDate = this.monthDate.add(1, 'month');\r\n    this.thisMonthStartDate = this.monthDate.clone().startOf('month');\r\n    this.thisMonthEndDate = this.monthDate.clone().endOf('month');\r\n    this.getData(this.thisMonthStartDate, this.thisMonthEndDate, this.getMonthData);\r\n  }\r\n\r\n  prevYear() {\r\n    this.yearDate = this.yearDate.subtract(1, 'year');\r\n    this.thisYearStartDate = this.yearDate.clone().startOf('year');\r\n    this.thisYearEndDate = this.yearDate.clone().endOf('year');\r\n    this.getData(this.thisYearStartDate, this.thisYearEndDate, this.getYearlyData);\r\n  }\r\n\r\n  nextYear() {\r\n    this.yearDate = this.yearDate.add(1, 'year');\r\n    this.thisYearStartDate = this.yearDate.clone().startOf('year');\r\n    this.thisYearEndDate = this.yearDate.clone().endOf('year');\r\n    this.getData(this.thisYearStartDate, this.thisYearEndDate, this.getYearlyData);\r\n  }\r\n\r\n  getCustomData() {\r\n    const startDate = this.customStartDate.clone();\r\n    const endDate = this.customEndDate.clone();\r\n    this.getData(startDate, endDate, this.getRangeData);\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.getData(this.todaysDate, this.todaysDate, this.getTodaysData);\r\n    // this.cs.getReconsiledBook({startDate: this.thisYearStartDate, endDate: this.thisYearEndDate})\r\n    // .subscribe((data: any) => {\r\n    //   const todaysBook = data.book.find((book: any) => book.date === moment().format('YYYY-MM-DD'));\r\n    //   // const monthBook = data.book.map((book: any) => moment(book.date, 'YYYY-MM-DD').isSame(moment(), 'month'));\r\n    //   // const yearBook = data.book.map((book: any) => moment(book.date, 'YYYY-MM-DD').isSame(moment(), 'year'));\r\n    //   // [\r\n    //     this.pageData.todaysData = this.getTodaysData(todaysBook);\r\n    //     this.pageData.thisWeeksData = this.getWeekData(data);\r\n    //     this.pageData.thisMonthsData = this.getMonthData(data);\r\n    //     this.pageData.thisYearsData = this.getYearlyData(data);\r\n    //     // this.pageData.thisWeeksData = this.getTodaysData(weekBook); -- Week Data to continue tomorow\r\n    //     // this.pageData.thisMonthsData,\r\n    //     // this.pageData.thisYearsData,\r\n    //   // ] = [\r\n    //   //   this.getTodaysData(todaysBook)\r\n    \r\n    //   // ];\r\n    //   this.isLoading$ = false;\r\n    // })\r\n  }\r\n  \r\n\r\n  getData(startDate: any, endDate: any, method: any) {\r\n    this.rangeText = `${startDate.format('DD-MM-YYYY')} To ${endDate.format('DD-MM-YYYY')}`;\r\n    this.isLoading$ = true;\r\n    this.cs.getReconsiledBook({startDate: startDate.format('YYYY-MM-DD'), endDate: endDate.format('YYYY-MM-DD')})\r\n    .subscribe((data: any) => {\r\n    this.response = data.book;\r\n     method(data);\r\n      this.isLoading$ = false;\r\n    })\r\n  }\r\n\r\n  getYearlyData = (data: any) => {\r\n    const yearBook = data.book;\r\n    if(!yearBook) {\r\n      return;\r\n    }\r\n    let book: any = new Book();\r\n    let yearlyOverView: any = {\r\n      dataSet: [{data: moment.months().map(() => 0), label: 'Yearly Profit/Loss Data'}],\r\n      chartLabels: moment.months()\r\n    };\r\n    yearBook.forEach((monthEl: any, index: number) => {\r\n      if (monthEl) {\r\n        if (index === 0) {\r\n          book = {...monthEl}\r\n        } else {\r\n          book.poojas = book.poojas.concat(monthEl.poojas);\r\n          book.expenses = book.expenses.concat(monthEl.expenses);\r\n          book.donations = book.donations.concat(monthEl.donations);\r\n        }\r\n        const indexOfMonth = moment.months().indexOf(moment(monthEl.date).format('MMMM'));\r\n        const profitLoss = monthEl.poojas.reduce((total: number, item: any) => Number(total) + Number(item.pooja_price), 0) -\r\n          monthEl.expenses.reduce((total: number, item: any) => Number(total) + Number(item.cost), 0) +\r\n          monthEl.donations.reduce((total: number, item: any) => Number(total) + Number(item.amount), 0);\r\n        yearlyOverView.dataSet[0].data[indexOfMonth] += profitLoss;\r\n      }\r\n    });\r\n    this.pageData.thisYearsData = {...this.getReconsolidatedData(book), yearlyOverView};\r\n  }\r\n\r\n  getRangeData = (data: any) => {\r\n    const yearBook = data.book;\r\n    if(!yearBook) {\r\n      return;\r\n    }\r\n    let book: any = new Book();\r\n    let yearlyOverView: any = {\r\n      dataSet: [{data: [], label: 'Profit/Loss Data'}],\r\n      chartLabels: []\r\n    };\r\n    yearBook.forEach((monthEl: any, index: number) => {\r\n      if (monthEl) {\r\n        if (index === 0) {\r\n          book = {...monthEl}\r\n        } else {\r\n          book.poojas = book.poojas.concat(monthEl.poojas);\r\n          book.expenses = book.expenses.concat(monthEl.expenses);\r\n          book.donations = book.donations.concat(monthEl.donations);\r\n        }\r\n        const profitLoss = monthEl.poojas.reduce((total: number, item: any) => Number(total) + Number(item.pooja_price), 0) -\r\n          monthEl.expenses.reduce((total: number, item: any) => Number(total) + Number(item.cost), 0) +\r\n          monthEl.donations.reduce((total: number, item: any) => Number(total) + Number(item.amount), 0);\r\n        yearlyOverView.dataSet[0].data.push(profitLoss);\r\n        yearlyOverView.chartLabels.push(monthEl.date);\r\n      }\r\n    });\r\n    this.pageData.thisYearsData = {...this.getReconsolidatedData(book), yearlyOverView};\r\n  }\r\n\r\n  getMonthData = (data: any) => {\r\n    const monthBook = data.book;\r\n    if(!monthBook) {\r\n      return;\r\n    }\r\n    let book: any = new Book();\r\n    let monthlyOverView: any = {\r\n      dataSet: [{data: [], label: 'Profit/Loss Monthly Data'}],\r\n      chartLabels: []\r\n    };\r\n    let weekRange: any = [];\r\n    if (monthBook[0] && monthBook[0].date) {\r\n      weekRange = this.getWeekRange(monthBook[0].date);\r\n      monthlyOverView.chartLabels = weekRange.map((item: any, index: number) => {\r\n        item = item;\r\n        return 'Week ' + (index+1)\r\n      });\r\n    }\r\n    monthlyOverView.dataSet[0].data = monthlyOverView.chartLabels.map(() => 0);\r\n    monthBook.forEach((monthEl: any, index: number) => {\r\n      if (monthEl) {\r\n        if (index === 0) {\r\n          book = {...monthEl}\r\n        } else {\r\n          book.poojas = book.poojas.concat(monthEl.poojas);\r\n          book.expenses = book.expenses.concat(monthEl.expenses);\r\n          book.donations = book.donations.concat(monthEl.donations);\r\n        }\r\n        const profitLoss = monthEl.poojas.reduce((total: number, item: any) => Number(total) + Number(item.pooja_price), 0) -\r\n          monthEl.expenses.reduce((total: number, item: any) => Number(total) + Number(item.cost), 0) +\r\n          monthEl.donations.reduce((total: number, item: any) => Number(total) + Number(item.amount), 0);\r\n        \r\n          // monthlyOverView.dataSet[0].data.push(profitLoss);\r\n\r\n          weekRange.forEach((element: any, index: number) => {\r\n            if(moment(monthEl.date).isSame(element[0], 'isoWeek')) {\r\n              monthlyOverView.dataSet[0].data[index] += profitLoss;\r\n              return;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.pageData.thisMonthsData = {...this.getReconsolidatedData(book), monthlyOverView};\r\n  }\r\n\r\n  getWeekData = (data: any) => {\r\n    // const weekBook = data.book.filter((book: any) => moment(book.date, 'YYYY-MM-DD').isSame(this.thisWeekStartDate, 'isoWeek'));\r\n    const weekBook = data.book;\r\n    if(!weekBook) {\r\n      return;\r\n    }\r\n    let book: any = new Book();\r\n    let weeklyOverView: any = {\r\n      dataSet: [{data: [], label: 'Profit/Loss Weekly Data'}],\r\n      chartLabels: []\r\n    };\r\n    weekBook.forEach((weekEl: any, index: number) => {\r\n      if (weekEl) {\r\n        if (index === 0) {\r\n          book = {...weekEl}\r\n        } else {\r\n          book.poojas = book.poojas.concat(weekEl.poojas);\r\n          book.expenses = book.expenses.concat(weekEl.expenses);\r\n          book.donations = book.donations.concat(weekEl.donations);\r\n        }\r\n        const profitLoss = weekEl.poojas.reduce((total: number, item: any) => Number(total) + Number(item.pooja_price), 0) -\r\n          weekEl.expenses.reduce((total: number, item: any) => Number(total) + Number(item.cost), 0) +\r\n          weekEl.donations.reduce((total: number, item: any) => Number(total) + Number(item.amount), 0);\r\n        weeklyOverView.dataSet[0].data.push(profitLoss);\r\n        weeklyOverView.chartLabels.push(weekEl.date);\r\n      }\r\n    });\r\n    this.pageData.thisWeeksData = {...this.getReconsolidatedData(book), weeklyOverView};\r\n  }\r\n\r\n  getTodaysData = (response: any) => {\r\n    if(!response.book[0]) {\r\n      this.pageData.todaysData = this.getReconsolidatedData(new Book());\r\n      return;\r\n    }\r\n    this.pageData.todaysData = this.getReconsolidatedData(response.book[0]);\r\n  }\r\n\r\n  getReconsolidatedData = (book: any) => {\r\n\r\n    const poojasList = Array.from(new Set(book.poojas.map((pooja: any) => pooja.pooja_name))); \r\n    const poojaData: any = [];\r\n    poojasList.forEach((pooja: any) => {\r\n      poojaData.push({\r\n        pooja_name: pooja,\r\n        totalAmount: 0,\r\n        count: 0\r\n      });\r\n    });\r\n    book.poojas.forEach((pooja: any) => {\r\n      const item = poojaData.find((p: any) => p.pooja_name === pooja.pooja_name);\r\n      if (item) {\r\n        item.totalAmount += Number(pooja.pooja_price)\r\n        item.count++;\r\n      }\r\n    });\r\n    const reconsolidatedData = {\r\n      currentOverView: {},\r\n      overView: {\r\n        dataSet: [ {\r\n          data: [ book.poojas.reduce((total: number, item: any) => Number(total) + Number(item.pooja_price), 0),\r\n          book.expenses.reduce((total: number, item: any) => Number(total) + Number(item.cost), 0),\r\n          book.donations.reduce((total: number, item: any) => Number(total) + Number(item.amount), 0) ],\r\n          label: 'Total Amount'\r\n        }],\r\n        chartLabels: [`poojas (${book.poojas.length})`, `expenses (${book.expenses.length})`, `donations (${book.donations.length})`]\r\n      },\r\n      poojasOverView: {\r\n        dataSet: [ {\r\n          data: poojaData.map((pooja: any) => pooja.totalAmount),\r\n          label: `Pooja Receivable`\r\n        } ],\r\n        chartLabels: poojaData.map((pooja: any) => `${pooja.pooja_name} (${pooja.count})`)\r\n      }\r\n    };\r\n    reconsolidatedData.currentOverView = reconsolidatedData.overView;\r\n    return reconsolidatedData;\r\n  }\r\n\r\n  getProfitLoss(data: any) {\r\n    if (data.overView.dataSet[0]) {\r\n      const allTransactions = data.overView.dataSet[0].data;\r\n      if (allTransactions) {\r\n        return allTransactions[0] + allTransactions[2] - allTransactions[1]  // poojas + donations - expense\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  swapPoojasData(obj: any) {\r\n    obj.currentOverView = obj.currentOverView == obj.poojasOverView ? obj.overView : obj.poojasOverView;\r\n  }\r\n\r\n  selectCustomStartDate(event: any) {\r\n    this.customStartDate = event;\r\n  }\r\n\r\n  selectCustomEndDate(event: any) {\r\n    this.customStartDate = event;\r\n  }\r\n\r\n  getWeekRange(date: string) {\r\n    const month = moment(date, 'YYYY-MM-DD');\r\n    \r\n    const mm = month.month() + 1;\r\n    const yy = month.year();\r\n\r\n\r\n    const first = month.day() == 0 ? 6 : month.day()-1;\r\n    let day = 7-first;\r\n\r\n    const last = month.daysInMonth();\r\n    const count = (last-day)/7;\r\n\r\n    const weeks = [];\r\n    weeks.push([moment(`${(1)}-${mm}-${yy}`, 'DD-MM-YYYY').format('YYYY-MM-DD'), moment(`${(day)}-${mm}-${yy}`, 'DD-MM-YYYY').format('YYYY-MM-DD')]);\r\n    for (let i=0; i < count; i++) {\r\n      weeks.push([moment(`${(day+1)}-${mm}-${yy}`, 'DD-MM-YYYY').format('YYYY-MM-DD'), moment(`${(Math.min(day+=7, last))}-${mm}-${yy}`, 'DD-MM-YYYY').format('YYYY-MM-DD')]);\r\n\r\n    }\r\n    return weeks;\r\n}\r\n\r\n  ngOnDestroy() {\r\n    if (this.lineChartSub) {\r\n      this.lineChartSub.unsubscribe();\r\n    }\r\n\r\n    if (this.barChartSub) {\r\n      this.barChartSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface DataSet {\r\n  data: Array<any>,\r\n  label: string\r\n}\r\n\r\ninterface ChartConfig{\r\n  overView: Chart,\r\n  currentOverView: Chart | {},\r\n  poojasOverView: Chart\r\n  weeklyOverView?: Chart\r\n  monthlyOverView?: Chart\r\n}\r\n\r\ninterface Chart {\r\n  dataSet: Array<DataSet>,\r\n  chartLabels: Array<string>\r\n}\r\n\r\nclass Book {\r\n  poojas = [];\r\n  expenses = [];\r\n  donations = [];\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChartsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  startDate = '2018-01-01';\r\n  endDate = '2018-01-31';\r\n  apiHistoryUrl = 'https://api.exchangeratesapi.io/history';\r\n  apiLatestUrl = 'https://api.exchangeratesapi.io/latest';\r\n\r\n  getExchangeRates(currency: string) {\r\n    return this.http.get(`${this.apiHistoryUrl}?start_at=${this.startDate}&end_at=${this.endDate}&symbols=${currency}`).pipe(\r\n      map( (res: any) => res['rates']),\r\n      switchMap( (val) => {\r\n        const dataset = [];\r\n        for (const rate in val) {\r\n          if (val.hasOwnProperty(rate)) {\r\n            dataset.push({date: rate, value: val[rate][currency] });\r\n          }\r\n        }\r\n        const sorted = dataset.sort((a, b) => {\r\n          if (a.date < b.date) {\r\n            return -1;\r\n          }\r\n          if (a.date > b.date) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n        const currencyName = currency;\r\n        const labels = sorted.map( data => data.date);\r\n        const values = sorted.map( data => data.value);\r\n        return of({ currencyName, values, labels });\r\n      })\r\n    );\r\n  }\r\n\r\n  getLatestExchangeRates() {\r\n    return this.http.get(this.apiLatestUrl).pipe(\r\n      map( (data: any) => {\r\n        const date = data['date'];\r\n        const base = data['base'];\r\n        const rates = data['rates'];\r\n        const dataset = [];\r\n\r\n        for (const currency in rates) {\r\n          if (rates.hasOwnProperty(currency)) {\r\n            dataset.push({ currency: currency, value: rates[currency]});\r\n          }\r\n        }\r\n\r\n        const values = dataset.map( latestRates => latestRates.value).slice(0, 5);\r\n        const labels = dataset.map( latestRates => latestRates.currency).slice(0, 5);\r\n\r\n        return { date, base, values, labels };\r\n      })\r\n    );\r\n  }\r\n\r\n  getReconsiledBook(request: any) {\r\n    return this.http.get(\r\n      `${environment.apiUrl}?api=getReconciledBook`, \r\n      {\r\n        params: {\r\n        'start_date_ist_YYYYMMDD': request.startDate,\r\n        'end_date_ist_YYYYMMDD': request.endDate\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nexport enum ChartsActionTypes {\r\n  LINE_CHART_QUERY = '[Charts] Line chart query',\r\n  LINE_CHART_LOADED = '[Charts] Line chart loaded',\r\n\r\n  BAR_CHART_QUERY = '[Charts] Bar chart query',\r\n  BAR_CHART_LOADED = '[Charts] Bar chart loaded',\r\n\r\n  CHARTS_ERROR = '[Charts] Error'\r\n}\r\n\r\nexport class LineChartQuery implements Action {\r\n  readonly type = ChartsActionTypes.LINE_CHART_QUERY;\r\n\r\n  constructor(public payload: { currency: string }) {}\r\n}\r\n\r\nexport class BarChartQuery implements Action {\r\n  readonly type = ChartsActionTypes.BAR_CHART_QUERY;\r\n}\r\n\r\nexport class LineChartLoaded implements Action {\r\n  readonly type = ChartsActionTypes.LINE_CHART_LOADED;\r\n\r\n  constructor(public payload: { lineChartData: any }) {}\r\n}\r\n\r\nexport class BarChartLoaded implements Action {\r\n  readonly type = ChartsActionTypes.BAR_CHART_LOADED;\r\n\r\n  constructor(public payload: { barChartData: any }) {}\r\n}\r\n\r\nexport class ChartsError implements Action {\r\n  readonly type = ChartsActionTypes.CHARTS_ERROR;\r\n\r\n  constructor(public payload: { error: any }) {}\r\n}\r\n\r\nexport type ChartsActions =\r\n  | LineChartQuery\r\n  | LineChartLoaded\r\n  | BarChartQuery\r\n  | BarChartLoaded\r\n  | ChartsError;\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { ChartsService } from '../services/charts.service';\r\n\r\nimport * as fromCharts from './../store/charts.actions';\r\nimport { ChartsActionTypes } from './../store/charts.actions';\r\nimport { map, switchMap, catchError, withLatestFrom } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { AppState } from '../../reducers/index';\r\nimport { getLineChartData, getBarChartData } from './charts.selectors';\r\n\r\n@Injectable()\r\nexport class ChartsEffects {\r\n\r\n  constructor(private actions$: Actions, private chartsService: ChartsService, private store: Store<AppState>) {}\r\n\r\n  @Effect()\r\n  lineChartQuery$ = this.actions$.pipe(\r\n    ofType<fromCharts.LineChartQuery>(ChartsActionTypes.LINE_CHART_QUERY),\r\n    map( (action: fromCharts.LineChartQuery) => action.payload),\r\n    withLatestFrom(this.store.pipe(select(getLineChartData))),\r\n    switchMap( ([payload, chartsData]) =>  {\r\n      if (!chartsData.values || (chartsData.currencyName && chartsData.currencyName !== payload.currency)) {\r\n          return this.chartsService.getExchangeRates(payload.currency)\r\n          .pipe(\r\n            map( (data: any) => new fromCharts.LineChartLoaded({ lineChartData: data })),\r\n            catchError( (error: any) => of(new fromCharts.ChartsError({ error }))\r\n          ));\r\n      }\r\n      return of(new fromCharts.LineChartLoaded({ lineChartData: chartsData }));\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  barChartQuery$ = this.actions$.pipe(\r\n    ofType<fromCharts.BarChartQuery>(ChartsActionTypes.BAR_CHART_QUERY),\r\n    withLatestFrom(this.store.pipe(select(getBarChartData))),\r\n    switchMap( ([, chartData]) => {\r\n      if (!chartData.values) {\r\n        return this.chartsService.getLatestExchangeRates()\r\n        .pipe(\r\n          map( (data: any) => new fromCharts.BarChartLoaded({ barChartData: data })),\r\n          catchError( (error: any) => of(new fromCharts.ChartsError( { error })))\r\n        );\r\n      }\r\n      return of(new fromCharts.BarChartLoaded({ barChartData: chartData }));\r\n    })\r\n  );\r\n}\r\n","import { chartsInitialState, ChartsState } from './charts.state';\r\nimport { ChartsActions, ChartsActionTypes } from './charts.actions';\r\n\r\n\r\nexport function chartsReducer(state = chartsInitialState, action: ChartsActions): ChartsState {\r\n  switch (action.type) {\r\n\r\n    case ChartsActionTypes.LINE_CHART_QUERY: {\r\n      return Object.assign({}, state, {\r\n        lineChartLoading: true,\r\n      });\r\n    }\r\n\r\n    case ChartsActionTypes.BAR_CHART_QUERY: {\r\n      return Object.assign({}, state, {\r\n        barChartLoading: true\r\n      });\r\n    }\r\n\r\n    case ChartsActionTypes.LINE_CHART_LOADED: {\r\n      return Object.assign({}, state, {\r\n        lineChartData: action.payload.lineChartData,\r\n        lineChartLoading: false,\r\n      });\r\n    }\r\n\r\n    case ChartsActionTypes.BAR_CHART_LOADED: {\r\n      return Object.assign({}, state, {\r\n        barChartData: action.payload.barChartData,\r\n        barChartLoading: false,\r\n      });\r\n    }\r\n\r\n    case ChartsActionTypes.CHARTS_ERROR: {\r\n      return Object.assign({}, state, {\r\n        error: action.payload.error\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\r\nimport { ChartsState } from './charts.state';\r\n\r\nexport const getChartsState = createFeatureSelector<ChartsState>('charts');\r\n\r\n\r\nexport const getLineChartData = createSelector(\r\n  getChartsState,\r\n  charts => charts.lineChartData\r\n);\r\n\r\nexport const getBarChartData = createSelector(\r\n  getChartsState,\r\n  charts => charts.barChartData\r\n);\r\n\r\nexport const getIsLoading = createSelector(\r\n  getChartsState,\r\n  charts => charts.barChartLoading && charts.lineChartLoading\r\n);\r\n","export interface ChartsState {\r\n  lineChartData: any;\r\n  barChartData: any;\r\n  lineChartLoading: boolean;\r\n  barChartLoading: boolean;\r\n  error: any;\r\n}\r\n\r\nexport const chartsInitialState: ChartsState = {\r\n  lineChartData: {},\r\n  barChartData: {},\r\n  lineChartLoading: false,\r\n  barChartLoading: false,\r\n  error: null\r\n};\r\n"],"sourceRoot":"webpack:///"}